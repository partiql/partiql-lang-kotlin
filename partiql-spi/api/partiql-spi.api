public abstract interface class org/partiql/spi/Connector {
	public abstract fun getCatalog (Ljava/lang/String;)Lorg/partiql/spi/catalog/Catalog;
	public abstract fun getCatalog (Ljava/lang/String;Lorg/partiql/spi/Connector$Context;)Lorg/partiql/spi/catalog/Catalog;
}

public abstract interface class org/partiql/spi/Connector$Context {
}

public abstract interface class org/partiql/spi/Context {
	public fun getErrorListener ()Lorg/partiql/spi/errors/PErrorListener;
	public static fun of (Lorg/partiql/spi/errors/PErrorListener;)Lorg/partiql/spi/Context;
	public static fun standard ()Lorg/partiql/spi/Context;
}

public abstract class org/partiql/spi/Enum {
	protected fun <init> (I)V
	public final fun code ()I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public abstract fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/spi/SourceLocation {
	public field length J
	public field line J
	public field offset J
	public fun <init> (III)V
	public fun <init> (JJJ)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/spi/SourceLocations : java/util/Map {
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public fun clear ()V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public fun entrySet ()Ljava/util/Set;
	public synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Ljava/lang/Object;)Lorg/partiql/spi/SourceLocation;
	public fun isEmpty ()Z
	public fun keySet ()Ljava/util/Set;
	public fun put (Ljava/lang/Integer;Lorg/partiql/spi/SourceLocation;)Lorg/partiql/spi/SourceLocation;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Lorg/partiql/spi/SourceLocation;
	public fun size ()I
	public fun values ()Ljava/util/Collection;
}

public class org/partiql/spi/UnsupportedCodeException : java/lang/RuntimeException {
	public fun <init> (I)V
}

public abstract interface class org/partiql/spi/catalog/Catalog {
	public static final field Companion Lorg/partiql/spi/catalog/Catalog$Companion;
	public static fun builder ()Lorg/partiql/spi/catalog/Catalog$Builder;
	public abstract fun getAggregations (Lorg/partiql/spi/catalog/Session;Ljava/lang/String;)Ljava/util/Collection;
	public abstract fun getFunctions (Lorg/partiql/spi/catalog/Session;Ljava/lang/String;)Ljava/util/Collection;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getTable (Lorg/partiql/spi/catalog/Session;Lorg/partiql/spi/catalog/Name;)Lorg/partiql/spi/catalog/Table;
	public abstract fun resolveTable (Lorg/partiql/spi/catalog/Session;Lorg/partiql/spi/catalog/Identifier;)Lorg/partiql/spi/catalog/Name;
}

public final class org/partiql/spi/catalog/Catalog$Builder {
	public final fun build ()Lorg/partiql/spi/catalog/Catalog;
	public final fun define (Lorg/partiql/spi/catalog/Table;)Lorg/partiql/spi/catalog/Catalog$Builder;
	public final fun name (Ljava/lang/String;)Lorg/partiql/spi/catalog/Catalog$Builder;
}

public final class org/partiql/spi/catalog/Catalog$Companion {
	public final fun builder ()Lorg/partiql/spi/catalog/Catalog$Builder;
}

public final class org/partiql/spi/catalog/Catalog$DefaultImpls {
	public static fun getAggregations (Lorg/partiql/spi/catalog/Catalog;Lorg/partiql/spi/catalog/Session;Ljava/lang/String;)Ljava/util/Collection;
	public static fun getFunctions (Lorg/partiql/spi/catalog/Catalog;Lorg/partiql/spi/catalog/Session;Ljava/lang/String;)Ljava/util/Collection;
	public static fun getTable (Lorg/partiql/spi/catalog/Catalog;Lorg/partiql/spi/catalog/Session;Lorg/partiql/spi/catalog/Name;)Lorg/partiql/spi/catalog/Table;
	public static fun resolveTable (Lorg/partiql/spi/catalog/Catalog;Lorg/partiql/spi/catalog/Session;Lorg/partiql/spi/catalog/Identifier;)Lorg/partiql/spi/catalog/Name;
}

public abstract interface class org/partiql/spi/catalog/Catalogs {
	public static final field Companion Lorg/partiql/spi/catalog/Catalogs$Companion;
	public static fun builder ()Lorg/partiql/spi/catalog/Catalogs$Builder;
	public abstract fun getCatalog (Ljava/lang/String;Z)Lorg/partiql/spi/catalog/Catalog;
	public static fun of (Ljava/util/Collection;)Lorg/partiql/spi/catalog/Catalogs;
	public static fun of ([Lorg/partiql/spi/catalog/Catalog;)Lorg/partiql/spi/catalog/Catalogs;
}

public final class org/partiql/spi/catalog/Catalogs$Builder {
	public fun <init> ()V
	public final fun add (Lorg/partiql/spi/catalog/Catalog;)Lorg/partiql/spi/catalog/Catalogs$Builder;
	public final fun build ()Lorg/partiql/spi/catalog/Catalogs;
}

public final class org/partiql/spi/catalog/Catalogs$Companion {
	public final fun builder ()Lorg/partiql/spi/catalog/Catalogs$Builder;
	public final fun of (Ljava/util/Collection;)Lorg/partiql/spi/catalog/Catalogs;
	public final fun of ([Lorg/partiql/spi/catalog/Catalog;)Lorg/partiql/spi/catalog/Catalogs;
}

public final class org/partiql/spi/catalog/Catalogs$DefaultImpls {
	public static synthetic fun getCatalog$default (Lorg/partiql/spi/catalog/Catalogs;Ljava/lang/String;ZILjava/lang/Object;)Lorg/partiql/spi/catalog/Catalog;
}

public final class org/partiql/spi/catalog/Identifier : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lorg/partiql/spi/catalog/Identifier$Companion;
	public synthetic fun <init> ([Lorg/partiql/spi/catalog/Identifier$Simple;Lorg/partiql/spi/catalog/Identifier$Simple;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun append (Lorg/partiql/spi/catalog/Identifier;)Lorg/partiql/spi/catalog/Identifier;
	public final fun append ([Lorg/partiql/spi/catalog/Identifier$Simple;)Lorg/partiql/spi/catalog/Identifier;
	public static final fun delimited (Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier;
	public static final fun delimited (Ljava/util/List;)Lorg/partiql/spi/catalog/Identifier;
	public static final fun delimited ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier;
	public fun equals (Ljava/lang/Object;)Z
	public fun forEach (Ljava/util/function/Consumer;)V
	public final fun getIdentifier ()Lorg/partiql/spi/catalog/Identifier$Simple;
	public final fun getParts ()Ljava/util/List;
	public final fun getQualifier ()[Lorg/partiql/spi/catalog/Identifier$Simple;
	public final fun hasQualifier ()Z
	public fun hashCode ()I
	public fun iterator ()Ljava/util/Iterator;
	public final fun matches (Ljava/lang/String;Z)Z
	public static synthetic fun matches$default (Lorg/partiql/spi/catalog/Identifier;Ljava/lang/String;ZILjava/lang/Object;)Z
	public static final fun of (Ljava/util/List;)Lorg/partiql/spi/catalog/Identifier;
	public static final fun of ([Lorg/partiql/spi/catalog/Identifier$Simple;)Lorg/partiql/spi/catalog/Identifier;
	public static final fun regular (Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier;
	public static final fun regular (Ljava/util/List;)Lorg/partiql/spi/catalog/Identifier;
	public static final fun regular ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier;
	public fun spliterator ()Ljava/util/Spliterator;
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/spi/catalog/Identifier$Companion {
	public final fun delimited (Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier;
	public final fun delimited (Ljava/util/List;)Lorg/partiql/spi/catalog/Identifier;
	public final fun delimited ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier;
	public final fun of (Ljava/util/List;)Lorg/partiql/spi/catalog/Identifier;
	public final fun of ([Lorg/partiql/spi/catalog/Identifier$Simple;)Lorg/partiql/spi/catalog/Identifier;
	public final fun regular (Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier;
	public final fun regular (Ljava/util/List;)Lorg/partiql/spi/catalog/Identifier;
	public final fun regular ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier;
}

public final class org/partiql/spi/catalog/Identifier$Simple {
	public static final field Companion Lorg/partiql/spi/catalog/Identifier$Simple$Companion;
	public synthetic fun <init> (Ljava/lang/String;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun delimited (Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier$Simple;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getText ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isRegular ()Z
	public final fun matches (Ljava/lang/String;)Z
	public static final fun regular (Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier$Simple;
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/spi/catalog/Identifier$Simple$Companion {
	public final fun delimited (Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier$Simple;
	public final fun regular (Ljava/lang/String;)Lorg/partiql/spi/catalog/Identifier$Simple;
}

public final class org/partiql/spi/catalog/Name : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lorg/partiql/spi/catalog/Name$Companion;
	public fun <init> (Lorg/partiql/spi/catalog/Namespace;Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun forEach (Ljava/util/function/Consumer;)V
	public final fun getName ()Ljava/lang/String;
	public final fun getNamespace ()Lorg/partiql/spi/catalog/Namespace;
	public final fun hasNamespace ()Z
	public fun hashCode ()I
	public fun iterator ()Ljava/util/Iterator;
	public static final fun of (Ljava/util/List;)Lorg/partiql/spi/catalog/Name;
	public static final fun of ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Name;
	public fun spliterator ()Ljava/util/Spliterator;
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/spi/catalog/Name$Companion {
	public final fun of (Ljava/util/List;)Lorg/partiql/spi/catalog/Name;
	public final fun of ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Name;
}

public final class org/partiql/spi/catalog/Namespace : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lorg/partiql/spi/catalog/Namespace$Companion;
	public synthetic fun <init> ([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun append ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Namespace;
	public final fun asIdentifier ()Lorg/partiql/spi/catalog/Identifier;
	public fun equals (Ljava/lang/Object;)Z
	public fun forEach (Ljava/util/function/Consumer;)V
	public final fun get (I)Ljava/lang/String;
	public final fun getLength ()I
	public final fun getLevels ()[Ljava/lang/String;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public static final fun of (Ljava/util/List;)Lorg/partiql/spi/catalog/Namespace;
	public static final fun of ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Namespace;
	public fun spliterator ()Ljava/util/Spliterator;
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/spi/catalog/Namespace$Companion {
	public final fun empty ()Lorg/partiql/spi/catalog/Namespace;
	public final fun of (Ljava/util/List;)Lorg/partiql/spi/catalog/Namespace;
	public final fun of ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Namespace;
}

public final class org/partiql/spi/catalog/Path : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lorg/partiql/spi/catalog/Path$Companion;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun forEach (Ljava/util/function/Consumer;)V
	public final fun get (I)Lorg/partiql/spi/catalog/Namespace;
	public final fun getLength ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public static final fun of ([Lorg/partiql/spi/catalog/Namespace;)Lorg/partiql/spi/catalog/Path;
	public fun spliterator ()Ljava/util/Spliterator;
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/spi/catalog/Path$Companion {
	public final fun of ([Lorg/partiql/spi/catalog/Namespace;)Lorg/partiql/spi/catalog/Path;
}

public abstract interface class org/partiql/spi/catalog/Session {
	public static final field Companion Lorg/partiql/spi/catalog/Session$Companion;
	public static fun builder ()Lorg/partiql/spi/catalog/Session$Builder;
	public static fun empty ()Lorg/partiql/spi/catalog/Session;
	public abstract fun getCatalog ()Ljava/lang/String;
	public abstract fun getCatalogs ()Lorg/partiql/spi/catalog/Catalogs;
	public abstract fun getIdentity ()Ljava/lang/String;
	public abstract fun getNamespace ()Lorg/partiql/spi/catalog/Namespace;
	public abstract fun getPath ()Lorg/partiql/spi/catalog/Path;
	public abstract fun getProperties ()Ljava/util/Map;
}

public final class org/partiql/spi/catalog/Session$Builder {
	public fun <init> ()V
	public final fun build ()Lorg/partiql/spi/catalog/Session;
	public final fun catalog (Ljava/lang/String;)Lorg/partiql/spi/catalog/Session$Builder;
	public final fun catalogs ([Lorg/partiql/spi/catalog/Catalog;)Lorg/partiql/spi/catalog/Session$Builder;
	public final fun identity (Ljava/lang/String;)Lorg/partiql/spi/catalog/Session$Builder;
	public final fun namespace (Ljava/util/List;)Lorg/partiql/spi/catalog/Session$Builder;
	public final fun namespace (Lorg/partiql/spi/catalog/Namespace;)Lorg/partiql/spi/catalog/Session$Builder;
	public final fun namespace ([Ljava/lang/String;)Lorg/partiql/spi/catalog/Session$Builder;
	public final fun property (Ljava/lang/String;Ljava/lang/String;)Lorg/partiql/spi/catalog/Session$Builder;
	public final fun system (Lorg/partiql/spi/catalog/Catalog;)Lorg/partiql/spi/catalog/Session$Builder;
}

public final class org/partiql/spi/catalog/Session$Companion {
	public final fun builder ()Lorg/partiql/spi/catalog/Session$Builder;
	public final fun empty ()Lorg/partiql/spi/catalog/Session;
}

public final class org/partiql/spi/catalog/Session$DefaultImpls {
	public static fun getPath (Lorg/partiql/spi/catalog/Session;)Lorg/partiql/spi/catalog/Path;
	public static fun getProperties (Lorg/partiql/spi/catalog/Session;)Ljava/util/Map;
}

public abstract interface class org/partiql/spi/catalog/Table {
	public static final field Companion Lorg/partiql/spi/catalog/Table$Companion;
	public static fun builder ()Lorg/partiql/spi/catalog/Table$Builder;
	public static fun empty (Ljava/lang/String;)Lorg/partiql/spi/catalog/Table;
	public static fun empty (Ljava/lang/String;Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/catalog/Table;
	public static fun empty (Lorg/partiql/spi/catalog/Name;)Lorg/partiql/spi/catalog/Table;
	public static fun empty (Lorg/partiql/spi/catalog/Name;Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/catalog/Table;
	public abstract fun getDatum ()Lorg/partiql/spi/value/Datum;
	public abstract fun getName ()Lorg/partiql/spi/catalog/Name;
	public abstract fun getSchema ()Lorg/partiql/spi/types/PType;
	public static fun standard (Lorg/partiql/spi/catalog/Name;Lorg/partiql/spi/types/PType;Lorg/partiql/spi/value/Datum;)Lorg/partiql/spi/catalog/Table;
	public static fun standard (Lorg/partiql/spi/catalog/Name;Lorg/partiql/spi/value/Datum;)Lorg/partiql/spi/catalog/Table;
}

public final class org/partiql/spi/catalog/Table$Builder {
	public fun <init> ()V
	public final fun build ()Lorg/partiql/spi/catalog/Table;
	public final fun datum (Lorg/partiql/spi/value/Datum;)Lorg/partiql/spi/catalog/Table$Builder;
	public final fun name (Ljava/lang/String;)Lorg/partiql/spi/catalog/Table$Builder;
	public final fun schema (Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/catalog/Table$Builder;
}

public final class org/partiql/spi/catalog/Table$Companion {
	public final fun builder ()Lorg/partiql/spi/catalog/Table$Builder;
	public final fun empty (Ljava/lang/String;)Lorg/partiql/spi/catalog/Table;
	public final fun empty (Ljava/lang/String;Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/catalog/Table;
	public final fun empty (Lorg/partiql/spi/catalog/Name;)Lorg/partiql/spi/catalog/Table;
	public final fun empty (Lorg/partiql/spi/catalog/Name;Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/catalog/Table;
	public final fun standard (Lorg/partiql/spi/catalog/Name;Lorg/partiql/spi/types/PType;Lorg/partiql/spi/value/Datum;)Lorg/partiql/spi/catalog/Table;
	public final fun standard (Lorg/partiql/spi/catalog/Name;Lorg/partiql/spi/value/Datum;)Lorg/partiql/spi/catalog/Table;
}

public final class org/partiql/spi/catalog/Table$DefaultImpls {
	public static fun getDatum (Lorg/partiql/spi/catalog/Table;)Lorg/partiql/spi/value/Datum;
	public static fun getSchema (Lorg/partiql/spi/catalog/Table;)Lorg/partiql/spi/types/PType;
}

public final class org/partiql/spi/errors/CardinalityViolation : java/lang/RuntimeException {
	public fun <init> ()V
	public fun fillInStackTrace ()Ljava/lang/Throwable;
}

public final class org/partiql/spi/errors/DataException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;)V
	public fun fillInStackTrace ()Ljava/lang/Throwable;
	public fun getMessage ()Ljava/lang/String;
}

public final class org/partiql/spi/errors/PError : org/partiql/spi/Enum {
	public static final field ALWAYS_MISSING I
	public static final field FEATURE_NOT_SUPPORTED I
	public static final field FUNCTION_NOT_FOUND I
	public static final field FUNCTION_TYPE_MISMATCH I
	public static final field INTERNAL_ERROR I
	public static final field PATH_INDEX_NEVER_SUCCEEDS I
	public static final field PATH_KEY_NEVER_SUCCEEDS I
	public static final field PATH_SYMBOL_NEVER_SUCCEEDS I
	public static final field TYPE_UNEXPECTED I
	public static final field UNDEFINED_CAST I
	public static final field UNEXPECTED_TOKEN I
	public static final field UNRECOGNIZED_TOKEN I
	public static final field VAR_REF_AMBIGUOUS I
	public static final field VAR_REF_NOT_FOUND I
	public field kind Lorg/partiql/spi/errors/PErrorKind;
	public field location Lorg/partiql/spi/SourceLocation;
	public field severity Lorg/partiql/spi/errors/Severity;
	public fun <init> (ILorg/partiql/spi/errors/Severity;Lorg/partiql/spi/errors/PErrorKind;Lorg/partiql/spi/SourceLocation;Ljava/util/Map;)V
	public static fun INTERNAL_ERROR (Lorg/partiql/spi/errors/PErrorKind;Lorg/partiql/spi/SourceLocation;Ljava/lang/Throwable;)Lorg/partiql/spi/errors/PError;
	public fun equals (Ljava/lang/Object;)Z
	public fun get (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
	public fun getList (Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
	public fun getListOrNull (Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
	public fun getOrNull (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/spi/errors/PErrorException : org/partiql/spi/errors/PErrorListenerException {
	public field error Lorg/partiql/spi/errors/PError;
	public fun <init> (Lorg/partiql/spi/errors/PError;)V
	public fun <init> (Lorg/partiql/spi/errors/PError;Ljava/lang/Throwable;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/spi/errors/PErrorKind : org/partiql/spi/Enum {
	public static final field COMPILATION I
	public static final field EXECUTION I
	public static final field SEMANTIC I
	public static final field SYNTAX I
	public static fun COMPILATION ()Lorg/partiql/spi/errors/PErrorKind;
	public static fun EXECUTION ()Lorg/partiql/spi/errors/PErrorKind;
	public static fun SEMANTIC ()Lorg/partiql/spi/errors/PErrorKind;
	public static fun SYNTAX ()Lorg/partiql/spi/errors/PErrorKind;
	public fun name ()Ljava/lang/String;
}

public abstract interface class org/partiql/spi/errors/PErrorListener {
	public static fun abortOnError ()Lorg/partiql/spi/errors/PErrorListener;
	public static fun chain ([Lorg/partiql/spi/errors/PErrorListener;)Lorg/partiql/spi/errors/PErrorListener;
	public abstract fun report (Lorg/partiql/spi/errors/PError;)V
}

public class org/partiql/spi/errors/PErrorListenerException : java/lang/Exception {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class org/partiql/spi/errors/Severity : org/partiql/spi/Enum {
	public static final field ERROR I
	public static final field WARNING I
	public static fun ERROR ()Lorg/partiql/spi/errors/Severity;
	public static fun WARNING ()Lorg/partiql/spi/errors/Severity;
	public fun name ()Ljava/lang/String;
}

public final class org/partiql/spi/errors/TypeCheckException : java/lang/RuntimeException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun fillInStackTrace ()Ljava/lang/Throwable;
}

public abstract interface class org/partiql/spi/function/Aggregation : org/partiql/spi/function/Routine {
	public static final field Companion Lorg/partiql/spi/function/Aggregation$Companion;
	public abstract fun getAccumulator ([Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/function/Aggregation$Accumulator;
	public static fun static (Ljava/lang/String;[Lorg/partiql/spi/function/Parameter;Lorg/partiql/spi/types/PType;Lkotlin/jvm/functions/Function0;)Lorg/partiql/spi/function/Aggregation;
}

public abstract interface class org/partiql/spi/function/Aggregation$Accumulator {
	public abstract fun next ([Lorg/partiql/spi/value/Datum;)V
	public abstract fun value ()Lorg/partiql/spi/value/Datum;
}

public final class org/partiql/spi/function/Aggregation$Companion {
	public final fun static (Ljava/lang/String;[Lorg/partiql/spi/function/Parameter;Lorg/partiql/spi/types/PType;Lkotlin/jvm/functions/Function0;)Lorg/partiql/spi/function/Aggregation;
}

public final class org/partiql/spi/function/Aggregation$DefaultImpls {
	public static fun getAccumulator (Lorg/partiql/spi/function/Aggregation;[Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/function/Aggregation$Accumulator;
	public static fun getParameters (Lorg/partiql/spi/function/Aggregation;)[Lorg/partiql/spi/function/Parameter;
}

public abstract interface class org/partiql/spi/function/Function : org/partiql/spi/function/Routine {
	public static final field Companion Lorg/partiql/spi/function/Function$Companion;
	public abstract fun getInstance ([Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/function/Function$Instance;
	public static fun instance (Ljava/lang/String;[Lorg/partiql/spi/function/Parameter;Lorg/partiql/spi/types/PType;ZZLkotlin/jvm/functions/Function1;)Lorg/partiql/spi/function/Function$Instance;
	public static fun static (Ljava/lang/String;[Lorg/partiql/spi/function/Parameter;Lorg/partiql/spi/types/PType;ZZLkotlin/jvm/functions/Function1;)Lorg/partiql/spi/function/Function;
}

public final class org/partiql/spi/function/Function$Companion {
	public final fun instance (Ljava/lang/String;[Lorg/partiql/spi/function/Parameter;Lorg/partiql/spi/types/PType;ZZLkotlin/jvm/functions/Function1;)Lorg/partiql/spi/function/Function$Instance;
	public static synthetic fun instance$default (Lorg/partiql/spi/function/Function$Companion;Ljava/lang/String;[Lorg/partiql/spi/function/Parameter;Lorg/partiql/spi/types/PType;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/spi/function/Function$Instance;
	public final fun static (Ljava/lang/String;[Lorg/partiql/spi/function/Parameter;Lorg/partiql/spi/types/PType;ZZLkotlin/jvm/functions/Function1;)Lorg/partiql/spi/function/Function;
	public static synthetic fun static$default (Lorg/partiql/spi/function/Function$Companion;Ljava/lang/String;[Lorg/partiql/spi/function/Parameter;Lorg/partiql/spi/types/PType;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/spi/function/Function;
}

public final class org/partiql/spi/function/Function$DefaultImpls {
	public static fun getInstance (Lorg/partiql/spi/function/Function;[Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/function/Function$Instance;
	public static fun getParameters (Lorg/partiql/spi/function/Function;)[Lorg/partiql/spi/function/Parameter;
}

public abstract class org/partiql/spi/function/Function$Instance {
	public final field isMissingCall Z
	public final field isNullCall Z
	public final field name Ljava/lang/String;
	public final field parameters [Lorg/partiql/spi/types/PType;
	public final field returns Lorg/partiql/spi/types/PType;
	public fun <init> (Ljava/lang/String;[Lorg/partiql/spi/types/PType;Lorg/partiql/spi/types/PType;ZZ)V
	public synthetic fun <init> (Ljava/lang/String;[Lorg/partiql/spi/types/PType;Lorg/partiql/spi/types/PType;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public abstract fun invoke ([Lorg/partiql/spi/value/Datum;)Lorg/partiql/spi/value/Datum;
}

public final class org/partiql/spi/function/Parameter {
	public static final field Companion Lorg/partiql/spi/function/Parameter$Companion;
	public fun <init> (Ljava/lang/String;Lorg/partiql/spi/types/PType;)V
	public static final fun collection (Ljava/lang/String;)Lorg/partiql/spi/function/Parameter;
	public static final fun dynamic (Ljava/lang/String;)Lorg/partiql/spi/function/Parameter;
	public final fun getMatch (Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/types/PType;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Lorg/partiql/spi/types/PType;
	public static final fun number (Ljava/lang/String;)Lorg/partiql/spi/function/Parameter;
	public static final fun text (Ljava/lang/String;)Lorg/partiql/spi/function/Parameter;
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/spi/function/Parameter$Companion {
	public final fun collection (Ljava/lang/String;)Lorg/partiql/spi/function/Parameter;
	public final fun dynamic (Ljava/lang/String;)Lorg/partiql/spi/function/Parameter;
	public final fun number (Ljava/lang/String;)Lorg/partiql/spi/function/Parameter;
	public final fun text (Ljava/lang/String;)Lorg/partiql/spi/function/Parameter;
}

public abstract interface class org/partiql/spi/function/Routine {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getParameters ()[Lorg/partiql/spi/function/Parameter;
	public abstract fun getReturnType ([Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/types/PType;
}

public final class org/partiql/spi/function/Routine$DefaultImpls {
	public static fun getParameters (Lorg/partiql/spi/function/Routine;)[Lorg/partiql/spi/function/Parameter;
}

public abstract interface class org/partiql/spi/types/Field {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getType ()Lorg/partiql/spi/types/PType;
	public static fun of (Ljava/lang/String;Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/types/Field;
}

public abstract class org/partiql/spi/types/PType : org/partiql/spi/Enum {
	public static final field ARRAY I
	public static final field BAG I
	public static final field BIGINT I
	public static final field BLOB I
	public static final field BOOL I
	public static final field CHAR I
	public static final field CLOB I
	public static final field DATE I
	public static final field DECIMAL I
	public static final field DOUBLE I
	public static final field DYNAMIC I
	public static final field INTEGER I
	public static final field NUMERIC I
	public static final field REAL I
	public static final field ROW I
	public static final field SMALLINT I
	public static final field STRING I
	public static final field STRUCT I
	public static final field TIME I
	public static final field TIMESTAMP I
	public static final field TIMESTAMPZ I
	public static final field TIMEZ I
	public static final field TINYINT I
	public static final field UNKNOWN I
	public static final field VARCHAR I
	public static final field VARIANT I
	protected fun <init> (I)V
	public static fun array ()Lorg/partiql/spi/types/PType;
	public static fun array (Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/types/PType;
	public static fun bag ()Lorg/partiql/spi/types/PType;
	public static fun bag (Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/types/PType;
	public static fun bigint ()Lorg/partiql/spi/types/PType;
	public static fun blob ()Lorg/partiql/spi/types/PType;
	public static fun blob (I)Lorg/partiql/spi/types/PType;
	public static fun bool ()Lorg/partiql/spi/types/PType;
	public static fun character ()Lorg/partiql/spi/types/PType;
	public static fun character (I)Lorg/partiql/spi/types/PType;
	public static fun clob ()Lorg/partiql/spi/types/PType;
	public static fun clob (I)Lorg/partiql/spi/types/PType;
	public static fun codes ()[I
	public static fun date ()Lorg/partiql/spi/types/PType;
	public static fun decimal ()Lorg/partiql/spi/types/PType;
	public static fun decimal (II)Lorg/partiql/spi/types/PType;
	public static fun doublePrecision ()Lorg/partiql/spi/types/PType;
	public static fun dynamic ()Lorg/partiql/spi/types/PType;
	public fun getFields ()Ljava/util/Collection;
	public fun getLength ()I
	public fun getPrecision ()I
	public fun getScale ()I
	public fun getTypeParameter ()Lorg/partiql/spi/types/PType;
	public static fun integer ()Lorg/partiql/spi/types/PType;
	public fun name ()Ljava/lang/String;
	public static fun numeric ()Lorg/partiql/spi/types/PType;
	public static fun numeric (II)Lorg/partiql/spi/types/PType;
	public static fun of (I)Lorg/partiql/spi/types/PType;
	public static fun real ()Lorg/partiql/spi/types/PType;
	public static fun row (Ljava/util/Collection;)Lorg/partiql/spi/types/PType;
	public static fun row ([Lorg/partiql/spi/types/Field;)Lorg/partiql/spi/types/PType;
	public static fun smallint ()Lorg/partiql/spi/types/PType;
	public static fun string ()Lorg/partiql/spi/types/PType;
	public static fun struct ()Lorg/partiql/spi/types/PType;
	public static fun time ()Lorg/partiql/spi/types/PType;
	public static fun time (I)Lorg/partiql/spi/types/PType;
	public static fun timestamp ()Lorg/partiql/spi/types/PType;
	public static fun timestamp (I)Lorg/partiql/spi/types/PType;
	public static fun timestampz ()Lorg/partiql/spi/types/PType;
	public static fun timestampz (I)Lorg/partiql/spi/types/PType;
	public static fun timez ()Lorg/partiql/spi/types/PType;
	public static fun timez (I)Lorg/partiql/spi/types/PType;
	public static fun tinyint ()Lorg/partiql/spi/types/PType;
	public static fun unknown ()Lorg/partiql/spi/types/PType;
	public static fun varchar ()Lorg/partiql/spi/types/PType;
	public static fun varchar (I)Lorg/partiql/spi/types/PType;
	public static fun variant (Ljava/lang/String;)Lorg/partiql/spi/types/PType;
}

public abstract interface class org/partiql/spi/value/Datum : java/lang/Iterable {
	public static fun array (Ljava/lang/Iterable;)Lorg/partiql/spi/value/Datum;
	public static fun bag (Ljava/lang/Iterable;)Lorg/partiql/spi/value/Datum;
	public static fun bigint (J)Lorg/partiql/spi/value/Datum;
	public static fun blob ([B)Lorg/partiql/spi/value/Datum;
	public static fun blob ([BI)Lorg/partiql/spi/value/Datum;
	public static fun bool (Z)Lorg/partiql/spi/value/Datum;
	public static fun character (Ljava/lang/String;)Lorg/partiql/spi/value/Datum;
	public static fun character (Ljava/lang/String;I)Lorg/partiql/spi/value/Datum;
	public static fun clob ([B)Lorg/partiql/spi/value/Datum;
	public static fun clob ([BI)Lorg/partiql/spi/value/Datum;
	public static fun comparator ()Ljava/util/Comparator;
	public static fun comparator (Z)Ljava/util/Comparator;
	public static fun date (Ljava/time/LocalDate;)Lorg/partiql/spi/value/Datum;
	public static fun decimal (Ljava/math/BigDecimal;)Lorg/partiql/spi/value/Datum;
	public static fun decimal (Ljava/math/BigDecimal;II)Lorg/partiql/spi/value/Datum;
	public static fun doublePrecision (D)Lorg/partiql/spi/value/Datum;
	public fun get (Ljava/lang/String;)Lorg/partiql/spi/value/Datum;
	public fun getBigDecimal ()Ljava/math/BigDecimal;
	public fun getBoolean ()Z
	public fun getByte ()B
	public fun getBytes ()[B
	public fun getDouble ()D
	public fun getFields ()Ljava/util/Iterator;
	public fun getFloat ()F
	public fun getInsensitive (Ljava/lang/String;)Lorg/partiql/spi/value/Datum;
	public fun getInt ()I
	public fun getLocalDate ()Ljava/time/LocalDate;
	public fun getLocalDateTime ()Ljava/time/LocalDateTime;
	public fun getLocalTime ()Ljava/time/LocalTime;
	public fun getLong ()J
	public fun getOffsetDateTime ()Ljava/time/OffsetDateTime;
	public fun getOffsetTime ()Ljava/time/OffsetTime;
	public fun getShort ()S
	public fun getString ()Ljava/lang/String;
	public abstract fun getType ()Lorg/partiql/spi/types/PType;
	public static fun integer (I)Lorg/partiql/spi/value/Datum;
	public static fun ion (Ljava/lang/String;)Lorg/partiql/spi/value/Datum;
	public fun isMissing ()Z
	public fun isNull ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun lower ()Lorg/partiql/spi/value/Datum;
	public static fun missing ()Lorg/partiql/spi/value/Datum;
	public static fun missing (Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/value/Datum;
	public static fun nullValue ()Lorg/partiql/spi/value/Datum;
	public static fun nullValue (Lorg/partiql/spi/types/PType;)Lorg/partiql/spi/value/Datum;
	public static fun numeric (Ljava/math/BigDecimal;)Lorg/partiql/spi/value/Datum;
	public static fun numeric (Ljava/math/BigDecimal;II)Lorg/partiql/spi/value/Datum;
	public fun pack (Ljava/nio/charset/Charset;)[B
	public static fun real (F)Lorg/partiql/spi/value/Datum;
	public static fun smallint (S)Lorg/partiql/spi/value/Datum;
	public static fun string (Ljava/lang/String;)Lorg/partiql/spi/value/Datum;
	public static fun struct ()Lorg/partiql/spi/value/Datum;
	public static fun struct (Ljava/lang/Iterable;)Lorg/partiql/spi/value/Datum;
	public static fun time (Ljava/time/LocalTime;I)Lorg/partiql/spi/value/Datum;
	public static fun timestamp (Ljava/time/LocalDateTime;I)Lorg/partiql/spi/value/Datum;
	public static fun timestampz (Ljava/time/OffsetDateTime;I)Lorg/partiql/spi/value/Datum;
	public static fun timez (Ljava/time/OffsetTime;I)Lorg/partiql/spi/value/Datum;
	public static fun tinyint (B)Lorg/partiql/spi/value/Datum;
	public static fun varchar (Ljava/lang/String;)Lorg/partiql/spi/value/Datum;
	public static fun varchar (Ljava/lang/String;I)Lorg/partiql/spi/value/Datum;
}

public abstract interface class org/partiql/spi/value/DatumReader : java/lang/AutoCloseable {
	public static fun builder ()Lorg/partiql/spi/value/DatumReader$Builder;
	public static fun ion (Ljava/io/InputStream;)Lorg/partiql/spi/value/DatumReader;
	public abstract fun next ()Lorg/partiql/spi/value/Datum;
}

public class org/partiql/spi/value/DatumReader$Builder {
	public fun <init> ()V
	public fun build (Ljava/io/InputStream;)Lorg/partiql/spi/value/DatumReader;
	public fun encoding (Lorg/partiql/spi/value/Encoding;)Lorg/partiql/spi/value/DatumReader$Builder;
	public fun register (Lorg/partiql/spi/value/Encoding;Lorg/partiql/spi/value/DatumReader;)Lorg/partiql/spi/value/DatumReader$Builder;
}

public abstract interface class org/partiql/spi/value/DatumWriter : java/lang/AutoCloseable {
	public abstract fun write (Lorg/partiql/spi/value/Datum;)Lorg/partiql/spi/value/DatumWriter;
}

public class org/partiql/spi/value/Encoding : org/partiql/spi/Enum {
	public static final field ION I
	public static fun ION ()Lorg/partiql/spi/value/Encoding;
	public fun name ()Ljava/lang/String;
}

public abstract interface class org/partiql/spi/value/Field {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getValue ()Lorg/partiql/spi/value/Datum;
	public static fun of (Ljava/lang/String;Lorg/partiql/spi/value/Datum;)Lorg/partiql/spi/value/Field;
}

public final class org/partiql/spi/value/InvalidOperationException : java/lang/RuntimeException {
	public fun <init> (Lorg/partiql/spi/types/PType;Ljava/lang/String;)V
	public fun getMessage ()Ljava/lang/String;
}

