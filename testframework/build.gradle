/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License').
 *  You may not use this file except in compliance with the License.
 * A copy of the License is located at:
 *
 *      http://aws.amazon.com/apache2.0/
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
 *  language governing permissions and limitations under the License.
 */

import java.nio.file.Paths

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'io.gitlab.arturbosch.detekt'
    id 'application'
}


application {
    mainClassName = 'org.partiql.testframework.testdriver.Main'
}

dependencies {
    implementation project(':lang')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.openjdk.jmh:jmh-core-ct:1.8'
    implementation 'net.sf.jopt-simple:jopt-simple:[5.0,6.0)'

    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    testImplementation 'pl.pragmatists:JUnitParams:[1.0.0,1.1.0)'
    testImplementation'org.assertj:assertj-core:[3.11.0,3.12.0)'
}

/** This is the location of all the test scripts and their associated data. */
def inputFiles = rootProject.fileTree('integration-test/test-scripts')
/** The contents of this file are never actually used except used by Gradle to enable incremental 'compilation'. */
def sqlTestOutputFile = Paths.get(buildDir.absolutePath, 'integration-test-output.ion')

//noinspection GroovyAssignabilityCheck
task integrationTest(type: JavaExec, group: 'verification') {
    // Forces rebuild of :lang if it's changed.
    dependsOn ':lang:test'
    // Forces rebuild of this project if it's changed.
    dependsOn ':testframework:test'

    // Forces this task to re-execute if any of the input files have changed
    inputs.files(inputFiles)

    // Forces this task to re-execute if it hasn't executed before and prevents this task from executing if all of
    // its dependencies (including input files) have not changed since the last successful execution of this task.
    outputs.file(sqlTestOutputFile)

    main = 'org.partiql.testframework.testdriver.Main'
    classpath = sourceSets['main'].runtimeClasspath
    args = [Paths.get(rootDir.absolutePath, 'integration-test/test-scripts').toString(), "--output=${sqlTestOutputFile}"]
}

// Sets up 'integrationTest' as a dependency of the pre-existing 'check' task.
tasks['check'].dependsOn('integrationTest')