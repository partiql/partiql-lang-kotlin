name: "Build and Report Generation"
on: 
  push:
    branches : [main]
    paths:
      - '**'
      - '!docs/**'
      - '!**/*.md'
  pull_request:
    paths:
      - '**'
      - '!docs/**'
      - '!**.*.md'

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [11, 17]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Use Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Test and Report
        env:
          DOKKA: false
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-XX:MaxMetaspaceSize=1g"
        run: ./gradlew build jacocoTestReport

      # Upload coverage for CLI, LANG, PTS, TEST_SCRIPT, and EXAMPLES
      - name: Upload CLI coverage
        uses: codecov/codecov-action@v3
        with:
          file: partiql-cli/build/reports/jacoco/test/jacocoTestReport.xml
          flags: CLI

      - name: Upload LANG coverage
        uses: codecov/codecov-action@v3
        with:
          file: partiql-lang/build/reports/jacoco/test/jacocoTestReport.xml
          flags: LANG

      - name: Upload EXAMPLES coverage
        uses: codecov/codecov-action@v3
        with:
          file: examples/build/reports/jacoco/test/jacocoTestReport.xml
          flags: EXAMPLES

  randomized-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [ 11, 17 ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Use Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java }}
          cache: gradle
      - name: Build and test
        run: ./gradlew :test:partiql-randomized-tests:test -PrandomTests
