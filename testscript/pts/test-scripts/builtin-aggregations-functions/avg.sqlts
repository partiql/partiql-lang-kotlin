/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 *  You may not use this file except in compliance with the License.
 * A copy of the License is located at:
 *
 *      http://aws.amazon.com/apache2.0/
 *
 *  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
 *  language governing permissions and limitations under the License.
 */
 
set_default_environment::{
     data: [1, 1, 1, 2],
}

for::{
    template: [
        test::{
            id: 'avg top level',
            statement: "$agg",
            expected: $result
        },
    ],
    variable_sets: [
        { agg: 'AVG(data)',          result: (success 1.25) },
        { agg: 'AVG(ALL data)',      result: (success 1.25) },
        { agg: 'AVG(DISTINCT data)', result: (success 1.5) }, 
    ]
}

for::{
    template: [
        test::{
            id: 'avg select',
            statement: "SELECT $agg AS a FROM data d",
            expected: (success (bag {a: $result}))
        },
    ],
    variable_sets: [
        { agg: 'AVG(d)',          result: 1.25 },
        { agg: 'AVG(ALL d)',      result: 1.25 },
        { agg: 'AVG(DISTINCT d)', result: 1.5 },
    ]
}

for::{
    template: [ 
        test::{
            id: 'avg group by',
            statement: '''
                SELECT t.a, $agg as c 
                FROM <<
                    {'a': 'f1', 'b': 1},
                    {'a': 'f1', 'b': 1},
                    {'a': 'f1', 'b': 1},
                    {'a': 'f1', 'b': 2},
                    
                    {'a': 'f2', 'b': 2},
                    {'a': 'f2', 'b': 4}
                >> AS t
                GROUP BY t.a
            ''',
            
            expected: (success (bag 
                {a: "f1", c: $expectedF1} 
                {a: "f2", c: $expectedF2}))
        },
    ],
    variable_sets: [
        { agg: 'AVG(t.b)',          expectedF1: 1.25, expectedF2: 3. },
        { agg: 'AVG(ALL t.b)',      expectedF1: 1.25, expectedF2: 3. },
        { agg: 'AVG(DISTINCT t.b)', expectedF1: 1.5,  expectedF2: 3. },
    ]
}
