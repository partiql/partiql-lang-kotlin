public final class org/partiql/parser/PartiQLLexerException : org/partiql/parser/PartiQLSyntaxException {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lorg/partiql/parser/SourceLocation;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lorg/partiql/parser/SourceLocation;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getToken ()Ljava/lang/String;
	public final fun getTokenType ()Ljava/lang/String;
}

public abstract interface class org/partiql/parser/PartiQLParser {
	public static final field Companion Lorg/partiql/parser/PartiQLParser$Companion;
	public static fun builder ()Lorg/partiql/parser/PartiQLParserBuilder;
	public static fun default ()Lorg/partiql/parser/PartiQLParser;
	public abstract fun parse (Ljava/lang/String;)Lorg/partiql/parser/PartiQLParser$Result;
}

public final class org/partiql/parser/PartiQLParser$Companion {
	public final fun builder ()Lorg/partiql/parser/PartiQLParserBuilder;
	public final fun default ()Lorg/partiql/parser/PartiQLParser;
}

public final class org/partiql/parser/PartiQLParser$Result {
	public fun <init> (Ljava/lang/String;Lorg/partiql/ast/Statement;Lorg/partiql/parser/SourceLocations;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/partiql/ast/Statement;
	public final fun component3 ()Lorg/partiql/parser/SourceLocations;
	public final fun copy (Ljava/lang/String;Lorg/partiql/ast/Statement;Lorg/partiql/parser/SourceLocations;)Lorg/partiql/parser/PartiQLParser$Result;
	public static synthetic fun copy$default (Lorg/partiql/parser/PartiQLParser$Result;Ljava/lang/String;Lorg/partiql/ast/Statement;Lorg/partiql/parser/SourceLocations;ILjava/lang/Object;)Lorg/partiql/parser/PartiQLParser$Result;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocations ()Lorg/partiql/parser/SourceLocations;
	public final fun getRoot ()Lorg/partiql/ast/Statement;
	public final fun getSource ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/parser/PartiQLParserBuilder {
	public fun <init> ()V
	public final fun build ()Lorg/partiql/parser/PartiQLParser;
}

public final class org/partiql/parser/PartiQLParserException : org/partiql/parser/PartiQLSyntaxException {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lorg/partiql/parser/SourceLocation;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lorg/partiql/parser/SourceLocation;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getRule ()Ljava/lang/String;
	public final fun getToken ()Ljava/lang/String;
	public final fun getTokenType ()Ljava/lang/String;
}

public class org/partiql/parser/PartiQLSyntaxException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;Lorg/partiql/parser/SourceLocation;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;Lorg/partiql/parser/SourceLocation;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCause ()Ljava/lang/Throwable;
	public final fun getLocation ()Lorg/partiql/parser/SourceLocation;
	public fun getMessage ()Ljava/lang/String;
}

public final class org/partiql/parser/SourceLocation {
	public static final field Companion Lorg/partiql/parser/SourceLocation$Companion;
	public fun <init> (IIII)V
	public synthetic fun <init> (IIIIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun copy (IIII)Lorg/partiql/parser/SourceLocation;
	public static synthetic fun copy$default (Lorg/partiql/parser/SourceLocation;IIIIILjava/lang/Object;)Lorg/partiql/parser/SourceLocation;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLength ()I
	public final fun getLengthLegacy ()I
	public final fun getLine ()I
	public final fun getOffset ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/parser/SourceLocation$Companion {
	public final fun getUNKNOWN ()Lorg/partiql/parser/SourceLocation;
}

public final class org/partiql/parser/SourceLocations : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear ()V
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun compute (Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/partiql/parser/SourceLocation;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/String;Ljava/util/function/Function;)Lorg/partiql/parser/SourceLocation;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/String;Ljava/util/function/BiFunction;)Lorg/partiql/parser/SourceLocation;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public fun containsValue (Lorg/partiql/parser/SourceLocation;)Z
	public final fun entrySet ()Ljava/util/Set;
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;)Lorg/partiql/parser/SourceLocation;
	public fun get (Ljava/lang/String;)Lorg/partiql/parser/SourceLocation;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun merge (Ljava/lang/String;Lorg/partiql/parser/SourceLocation;Ljava/util/function/BiFunction;)Lorg/partiql/parser/SourceLocation;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Lorg/partiql/parser/SourceLocation;)Lorg/partiql/parser/SourceLocation;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putIfAbsent (Ljava/lang/String;Lorg/partiql/parser/SourceLocation;)Lorg/partiql/parser/SourceLocation;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Lorg/partiql/parser/SourceLocation;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/String;Lorg/partiql/parser/SourceLocation;)Lorg/partiql/parser/SourceLocation;
	public fun replace (Ljava/lang/String;Lorg/partiql/parser/SourceLocation;Lorg/partiql/parser/SourceLocation;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public class org/partiql/parser/antlr/PartiQLBaseListener : org/partiql/parser/antlr/PartiQLListener {
	public fun <init> ()V
	public fun enterAggregateBase (Lorg/partiql/parser/antlr/PartiQLParser$AggregateBaseContext;)V
	public fun enterAnd (Lorg/partiql/parser/antlr/PartiQLParser$AndContext;)V
	public fun enterArray (Lorg/partiql/parser/antlr/PartiQLParser$ArrayContext;)V
	public fun enterAsIdent (Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;)V
	public fun enterAtIdent (Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;)V
	public fun enterBag (Lorg/partiql/parser/antlr/PartiQLParser$BagContext;)V
	public fun enterByIdent (Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;)V
	public fun enterCanCast (Lorg/partiql/parser/antlr/PartiQLParser$CanCastContext;)V
	public fun enterCanLosslessCast (Lorg/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext;)V
	public fun enterCaseExpr (Lorg/partiql/parser/antlr/PartiQLParser$CaseExprContext;)V
	public fun enterCast (Lorg/partiql/parser/antlr/PartiQLParser$CastContext;)V
	public fun enterCheckConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;)V
	public fun enterCoalesce (Lorg/partiql/parser/antlr/PartiQLParser$CoalesceContext;)V
	public fun enterColConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrCheckContext;)V
	public fun enterColConstrNotNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNotNullContext;)V
	public fun enterColConstrNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNullContext;)V
	public fun enterColConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrUniqueContext;)V
	public fun enterCollection (Lorg/partiql/parser/antlr/PartiQLParser$CollectionContext;)V
	public fun enterColumnConstraint (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext;)V
	public fun enterColumnDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$ColumnDeclarationContext;)V
	public fun enterColumnName (Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;)V
	public fun enterConflictAction (Lorg/partiql/parser/antlr/PartiQLParser$ConflictActionContext;)V
	public fun enterConflictTarget (Lorg/partiql/parser/antlr/PartiQLParser$ConflictTargetContext;)V
	public fun enterConstraintName (Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;)V
	public fun enterCountAll (Lorg/partiql/parser/antlr/PartiQLParser$CountAllContext;)V
	public fun enterCreateIndex (Lorg/partiql/parser/antlr/PartiQLParser$CreateIndexContext;)V
	public fun enterCreateTable (Lorg/partiql/parser/antlr/PartiQLParser$CreateTableContext;)V
	public fun enterDateFunction (Lorg/partiql/parser/antlr/PartiQLParser$DateFunctionContext;)V
	public fun enterDdl (Lorg/partiql/parser/antlr/PartiQLParser$DdlContext;)V
	public fun enterDeleteCommand (Lorg/partiql/parser/antlr/PartiQLParser$DeleteCommandContext;)V
	public fun enterDmlBase (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseContext;)V
	public fun enterDmlBaseCommand (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;)V
	public fun enterDmlBaseWrapper (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseWrapperContext;)V
	public fun enterDmlDelete (Lorg/partiql/parser/antlr/PartiQLParser$DmlDeleteContext;)V
	public fun enterDmlInsertReturning (Lorg/partiql/parser/antlr/PartiQLParser$DmlInsertReturningContext;)V
	public fun enterDoReplace (Lorg/partiql/parser/antlr/PartiQLParser$DoReplaceContext;)V
	public fun enterDoUpdate (Lorg/partiql/parser/antlr/PartiQLParser$DoUpdateContext;)V
	public fun enterDql (Lorg/partiql/parser/antlr/PartiQLParser$DqlContext;)V
	public fun enterDropIndex (Lorg/partiql/parser/antlr/PartiQLParser$DropIndexContext;)V
	public fun enterDropTable (Lorg/partiql/parser/antlr/PartiQLParser$DropTableContext;)V
	public fun enterEdgeAbbrev (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext;)V
	public fun enterEdgeAbbreviated (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbreviatedContext;)V
	public fun enterEdgeSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;)V
	public fun enterEdgeSpecBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecBidirectionalContext;)V
	public fun enterEdgeSpecLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecLeftContext;)V
	public fun enterEdgeSpecRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecRightContext;)V
	public fun enterEdgeSpecUndirected (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedContext;)V
	public fun enterEdgeSpecUndirectedBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedBidirectionalContext;)V
	public fun enterEdgeSpecUndirectedLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedLeftContext;)V
	public fun enterEdgeSpecUndirectedRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedRightContext;)V
	public fun enterEdgeWithSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWithSpecContext;)V
	public fun enterEveryRule (Lorg/antlr/v4/runtime/ParserRuleContext;)V
	public fun enterExcept (Lorg/partiql/parser/antlr/PartiQLParser$ExceptContext;)V
	public fun enterExcludeClause (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;)V
	public fun enterExcludeExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprContext;)V
	public fun enterExcludeExprCollectionAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionAttrContext;)V
	public fun enterExcludeExprCollectionIndex (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionIndexContext;)V
	public fun enterExcludeExprCollectionWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionWildcardContext;)V
	public fun enterExcludeExprTupleAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleAttrContext;)V
	public fun enterExcludeExprTupleWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleWildcardContext;)V
	public fun enterExecCommand (Lorg/partiql/parser/antlr/PartiQLParser$ExecCommandContext;)V
	public fun enterExplainOption (Lorg/partiql/parser/antlr/PartiQLParser$ExplainOptionContext;)V
	public fun enterExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;)V
	public fun enterExprAndBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndBaseContext;)V
	public fun enterExprGraphMatchMany (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext;)V
	public fun enterExprGraphMatchOne (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;)V
	public fun enterExprNotBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotBaseContext;)V
	public fun enterExprOrBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrBaseContext;)V
	public fun enterExprPrimaryBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryBaseContext;)V
	public fun enterExprPrimaryPath (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryPathContext;)V
	public fun enterExprTermBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermBaseContext;)V
	public fun enterExprTermCurrentDate (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentDateContext;)V
	public fun enterExprTermCurrentUser (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentUserContext;)V
	public fun enterExprTermWrappedQuery (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermWrappedQueryContext;)V
	public fun enterExtract (Lorg/partiql/parser/antlr/PartiQLParser$ExtractContext;)V
	public fun enterFromClause (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;)V
	public fun enterFromClauseSimpleExplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleExplicitContext;)V
	public fun enterFromClauseSimpleImplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleImplicitContext;)V
	public fun enterFunctionCall (Lorg/partiql/parser/antlr/PartiQLParser$FunctionCallContext;)V
	public fun enterFunctionNameReserved (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameReservedContext;)V
	public fun enterFunctionNameSymbol (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameSymbolContext;)V
	public fun enterGpmlPattern (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternContext;)V
	public fun enterGpmlPatternList (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext;)V
	public fun enterGraphPart (Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;)V
	public fun enterGroupAlias (Lorg/partiql/parser/antlr/PartiQLParser$GroupAliasContext;)V
	public fun enterGroupClause (Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;)V
	public fun enterGroupKey (Lorg/partiql/parser/antlr/PartiQLParser$GroupKeyContext;)V
	public fun enterHavingClause (Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;)V
	public fun enterInsertCommandReturning (Lorg/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext;)V
	public fun enterInsertStatement (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementContext;)V
	public fun enterInsertStatementLegacy (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext;)V
	public fun enterIntersect (Lorg/partiql/parser/antlr/PartiQLParser$IntersectContext;)V
	public fun enterJoinRhsBase (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsBaseContext;)V
	public fun enterJoinRhsTableJoined (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsTableJoinedContext;)V
	public fun enterJoinSpec (Lorg/partiql/parser/antlr/PartiQLParser$JoinSpecContext;)V
	public fun enterJoinType (Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;)V
	public fun enterLabelFactorNot (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorNotContext;)V
	public fun enterLabelFactorPrimary (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorPrimaryContext;)V
	public fun enterLabelPrimaryName (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryNameContext;)V
	public fun enterLabelPrimaryParen (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryParenContext;)V
	public fun enterLabelPrimaryWild (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryWildContext;)V
	public fun enterLabelSpecOr (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecOrContext;)V
	public fun enterLabelSpecTerm (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecTermContext;)V
	public fun enterLabelTermAnd (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermAndContext;)V
	public fun enterLabelTermFactor (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermFactorContext;)V
	public fun enterLagLeadFunction (Lorg/partiql/parser/antlr/PartiQLParser$LagLeadFunctionContext;)V
	public fun enterLetBinding (Lorg/partiql/parser/antlr/PartiQLParser$LetBindingContext;)V
	public fun enterLetClause (Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;)V
	public fun enterLimitClause (Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;)V
	public fun enterLiteralDate (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDateContext;)V
	public fun enterLiteralDecimal (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDecimalContext;)V
	public fun enterLiteralFalse (Lorg/partiql/parser/antlr/PartiQLParser$LiteralFalseContext;)V
	public fun enterLiteralInteger (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIntegerContext;)V
	public fun enterLiteralIon (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIonContext;)V
	public fun enterLiteralMissing (Lorg/partiql/parser/antlr/PartiQLParser$LiteralMissingContext;)V
	public fun enterLiteralNull (Lorg/partiql/parser/antlr/PartiQLParser$LiteralNullContext;)V
	public fun enterLiteralString (Lorg/partiql/parser/antlr/PartiQLParser$LiteralStringContext;)V
	public fun enterLiteralTime (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimeContext;)V
	public fun enterLiteralTimestamp (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimestampContext;)V
	public fun enterLiteralTrue (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTrueContext;)V
	public fun enterMatchPattern (Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;)V
	public fun enterMathOp00 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;)V
	public fun enterMathOp01 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;)V
	public fun enterMathOp02 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;)V
	public fun enterNode (Lorg/partiql/parser/antlr/PartiQLParser$NodeContext;)V
	public fun enterNonReservedKeywords (Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;)V
	public fun enterNot (Lorg/partiql/parser/antlr/PartiQLParser$NotContext;)V
	public fun enterNullIf (Lorg/partiql/parser/antlr/PartiQLParser$NullIfContext;)V
	public fun enterOffsetByClause (Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;)V
	public fun enterOnConflict (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictContext;)V
	public fun enterOnConflictLegacy (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;)V
	public fun enterOr (Lorg/partiql/parser/antlr/PartiQLParser$OrContext;)V
	public fun enterOrderByClause (Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;)V
	public fun enterOrderSortSpec (Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;)V
	public fun enterOver (Lorg/partiql/parser/antlr/PartiQLParser$OverContext;)V
	public fun enterOverlay (Lorg/partiql/parser/antlr/PartiQLParser$OverlayContext;)V
	public fun enterPair (Lorg/partiql/parser/antlr/PartiQLParser$PairContext;)V
	public fun enterParameter (Lorg/partiql/parser/antlr/PartiQLParser$ParameterContext;)V
	public fun enterPathSimple (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;)V
	public fun enterPathSimpleDotSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleDotSymbolContext;)V
	public fun enterPathSimpleLiteral (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleLiteralContext;)V
	public fun enterPathSimpleSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleSymbolContext;)V
	public fun enterPathStepDotAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotAllContext;)V
	public fun enterPathStepDotExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotExprContext;)V
	public fun enterPathStepIndexAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexAllContext;)V
	public fun enterPathStepIndexExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexExprContext;)V
	public fun enterPattern (Lorg/partiql/parser/antlr/PartiQLParser$PatternContext;)V
	public fun enterPatternPathVariable (Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;)V
	public fun enterPatternQuantifier (Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;)V
	public fun enterPatternRestrictor (Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;)V
	public fun enterPosition (Lorg/partiql/parser/antlr/PartiQLParser$PositionContext;)V
	public fun enterPredicateBase (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBaseContext;)V
	public fun enterPredicateBetween (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBetweenContext;)V
	public fun enterPredicateComparison (Lorg/partiql/parser/antlr/PartiQLParser$PredicateComparisonContext;)V
	public fun enterPredicateIn (Lorg/partiql/parser/antlr/PartiQLParser$PredicateInContext;)V
	public fun enterPredicateIs (Lorg/partiql/parser/antlr/PartiQLParser$PredicateIsContext;)V
	public fun enterPredicateLike (Lorg/partiql/parser/antlr/PartiQLParser$PredicateLikeContext;)V
	public fun enterPrimaryKey (Lorg/partiql/parser/antlr/PartiQLParser$PrimaryKeyContext;)V
	public fun enterProjectionItem (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemContext;)V
	public fun enterProjectionItems (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext;)V
	public fun enterQualifiedName (Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;)V
	public fun enterQueryBase (Lorg/partiql/parser/antlr/PartiQLParser$QueryBaseContext;)V
	public fun enterQueryDdl (Lorg/partiql/parser/antlr/PartiQLParser$QueryDdlContext;)V
	public fun enterQueryDml (Lorg/partiql/parser/antlr/PartiQLParser$QueryDmlContext;)V
	public fun enterQueryDql (Lorg/partiql/parser/antlr/PartiQLParser$QueryDqlContext;)V
	public fun enterQueryExec (Lorg/partiql/parser/antlr/PartiQLParser$QueryExecContext;)V
	public fun enterRemoveCommand (Lorg/partiql/parser/antlr/PartiQLParser$RemoveCommandContext;)V
	public fun enterReplaceCommand (Lorg/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext;)V
	public fun enterReturningClause (Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;)V
	public fun enterReturningColumn (Lorg/partiql/parser/antlr/PartiQLParser$ReturningColumnContext;)V
	public fun enterRoot (Lorg/partiql/parser/antlr/PartiQLParser$RootContext;)V
	public fun enterSearchCondition (Lorg/partiql/parser/antlr/PartiQLParser$SearchConditionContext;)V
	public fun enterSelectAll (Lorg/partiql/parser/antlr/PartiQLParser$SelectAllContext;)V
	public fun enterSelectItems (Lorg/partiql/parser/antlr/PartiQLParser$SelectItemsContext;)V
	public fun enterSelectPivot (Lorg/partiql/parser/antlr/PartiQLParser$SelectPivotContext;)V
	public fun enterSelectValue (Lorg/partiql/parser/antlr/PartiQLParser$SelectValueContext;)V
	public fun enterSelectorAny (Lorg/partiql/parser/antlr/PartiQLParser$SelectorAnyContext;)V
	public fun enterSelectorBasic (Lorg/partiql/parser/antlr/PartiQLParser$SelectorBasicContext;)V
	public fun enterSelectorShortest (Lorg/partiql/parser/antlr/PartiQLParser$SelectorShortestContext;)V
	public fun enterSequenceConstructor (Lorg/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext;)V
	public fun enterSetAssignment (Lorg/partiql/parser/antlr/PartiQLParser$SetAssignmentContext;)V
	public fun enterSetCommand (Lorg/partiql/parser/antlr/PartiQLParser$SetCommandContext;)V
	public fun enterSetQuantifierStrategy (Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;)V
	public fun enterSfwBase (Lorg/partiql/parser/antlr/PartiQLParser$SfwBaseContext;)V
	public fun enterSfwQuery (Lorg/partiql/parser/antlr/PartiQLParser$SfwQueryContext;)V
	public fun enterSubstring (Lorg/partiql/parser/antlr/PartiQLParser$SubstringContext;)V
	public fun enterSymbolPrimitive (Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;)V
	public fun enterTableBaseRefClauses (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefClausesContext;)V
	public fun enterTableBaseRefMatch (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefMatchContext;)V
	public fun enterTableBaseRefSymbol (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefSymbolContext;)V
	public fun enterTableConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrCheckContext;)V
	public fun enterTableConstrDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrDeclarationContext;)V
	public fun enterTableConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrUniqueContext;)V
	public fun enterTableCrossJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableCrossJoinContext;)V
	public fun enterTableDef (Lorg/partiql/parser/antlr/PartiQLParser$TableDefContext;)V
	public fun enterTableName (Lorg/partiql/parser/antlr/PartiQLParser$TableNameContext;)V
	public fun enterTableNonJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;)V
	public fun enterTableQualifiedJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableQualifiedJoinContext;)V
	public fun enterTableRefBase (Lorg/partiql/parser/antlr/PartiQLParser$TableRefBaseContext;)V
	public fun enterTableUnpivot (Lorg/partiql/parser/antlr/PartiQLParser$TableUnpivotContext;)V
	public fun enterTableWrapped (Lorg/partiql/parser/antlr/PartiQLParser$TableWrappedContext;)V
	public fun enterTrimFunction (Lorg/partiql/parser/antlr/PartiQLParser$TrimFunctionContext;)V
	public fun enterTuple (Lorg/partiql/parser/antlr/PartiQLParser$TupleContext;)V
	public fun enterTypeArgDouble (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgDoubleContext;)V
	public fun enterTypeArgSingle (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgSingleContext;)V
	public fun enterTypeAtomic (Lorg/partiql/parser/antlr/PartiQLParser$TypeAtomicContext;)V
	public fun enterTypeCustom (Lorg/partiql/parser/antlr/PartiQLParser$TypeCustomContext;)V
	public fun enterTypeTimeZone (Lorg/partiql/parser/antlr/PartiQLParser$TypeTimeZoneContext;)V
	public fun enterTypeVarChar (Lorg/partiql/parser/antlr/PartiQLParser$TypeVarCharContext;)V
	public fun enterUnion (Lorg/partiql/parser/antlr/PartiQLParser$UnionContext;)V
	public fun enterUnique (Lorg/partiql/parser/antlr/PartiQLParser$UniqueContext;)V
	public fun enterUniqueConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext;)V
	public fun enterUpdateClause (Lorg/partiql/parser/antlr/PartiQLParser$UpdateClauseContext;)V
	public fun enterUpsertCommand (Lorg/partiql/parser/antlr/PartiQLParser$UpsertCommandContext;)V
	public fun enterValueExpr (Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;)V
	public fun enterValueList (Lorg/partiql/parser/antlr/PartiQLParser$ValueListContext;)V
	public fun enterValueRow (Lorg/partiql/parser/antlr/PartiQLParser$ValueRowContext;)V
	public fun enterValues (Lorg/partiql/parser/antlr/PartiQLParser$ValuesContext;)V
	public fun enterVariableIdentifier (Lorg/partiql/parser/antlr/PartiQLParser$VariableIdentifierContext;)V
	public fun enterVariableKeyword (Lorg/partiql/parser/antlr/PartiQLParser$VariableKeywordContext;)V
	public fun enterWhereClause (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;)V
	public fun enterWhereClauseSelect (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;)V
	public fun enterWindowPartitionList (Lorg/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext;)V
	public fun enterWindowSortSpecList (Lorg/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext;)V
	public fun exitAggregateBase (Lorg/partiql/parser/antlr/PartiQLParser$AggregateBaseContext;)V
	public fun exitAnd (Lorg/partiql/parser/antlr/PartiQLParser$AndContext;)V
	public fun exitArray (Lorg/partiql/parser/antlr/PartiQLParser$ArrayContext;)V
	public fun exitAsIdent (Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;)V
	public fun exitAtIdent (Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;)V
	public fun exitBag (Lorg/partiql/parser/antlr/PartiQLParser$BagContext;)V
	public fun exitByIdent (Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;)V
	public fun exitCanCast (Lorg/partiql/parser/antlr/PartiQLParser$CanCastContext;)V
	public fun exitCanLosslessCast (Lorg/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext;)V
	public fun exitCaseExpr (Lorg/partiql/parser/antlr/PartiQLParser$CaseExprContext;)V
	public fun exitCast (Lorg/partiql/parser/antlr/PartiQLParser$CastContext;)V
	public fun exitCheckConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;)V
	public fun exitCoalesce (Lorg/partiql/parser/antlr/PartiQLParser$CoalesceContext;)V
	public fun exitColConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrCheckContext;)V
	public fun exitColConstrNotNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNotNullContext;)V
	public fun exitColConstrNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNullContext;)V
	public fun exitColConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrUniqueContext;)V
	public fun exitCollection (Lorg/partiql/parser/antlr/PartiQLParser$CollectionContext;)V
	public fun exitColumnConstraint (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext;)V
	public fun exitColumnDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$ColumnDeclarationContext;)V
	public fun exitColumnName (Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;)V
	public fun exitConflictAction (Lorg/partiql/parser/antlr/PartiQLParser$ConflictActionContext;)V
	public fun exitConflictTarget (Lorg/partiql/parser/antlr/PartiQLParser$ConflictTargetContext;)V
	public fun exitConstraintName (Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;)V
	public fun exitCountAll (Lorg/partiql/parser/antlr/PartiQLParser$CountAllContext;)V
	public fun exitCreateIndex (Lorg/partiql/parser/antlr/PartiQLParser$CreateIndexContext;)V
	public fun exitCreateTable (Lorg/partiql/parser/antlr/PartiQLParser$CreateTableContext;)V
	public fun exitDateFunction (Lorg/partiql/parser/antlr/PartiQLParser$DateFunctionContext;)V
	public fun exitDdl (Lorg/partiql/parser/antlr/PartiQLParser$DdlContext;)V
	public fun exitDeleteCommand (Lorg/partiql/parser/antlr/PartiQLParser$DeleteCommandContext;)V
	public fun exitDmlBase (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseContext;)V
	public fun exitDmlBaseCommand (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;)V
	public fun exitDmlBaseWrapper (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseWrapperContext;)V
	public fun exitDmlDelete (Lorg/partiql/parser/antlr/PartiQLParser$DmlDeleteContext;)V
	public fun exitDmlInsertReturning (Lorg/partiql/parser/antlr/PartiQLParser$DmlInsertReturningContext;)V
	public fun exitDoReplace (Lorg/partiql/parser/antlr/PartiQLParser$DoReplaceContext;)V
	public fun exitDoUpdate (Lorg/partiql/parser/antlr/PartiQLParser$DoUpdateContext;)V
	public fun exitDql (Lorg/partiql/parser/antlr/PartiQLParser$DqlContext;)V
	public fun exitDropIndex (Lorg/partiql/parser/antlr/PartiQLParser$DropIndexContext;)V
	public fun exitDropTable (Lorg/partiql/parser/antlr/PartiQLParser$DropTableContext;)V
	public fun exitEdgeAbbrev (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext;)V
	public fun exitEdgeAbbreviated (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbreviatedContext;)V
	public fun exitEdgeSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;)V
	public fun exitEdgeSpecBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecBidirectionalContext;)V
	public fun exitEdgeSpecLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecLeftContext;)V
	public fun exitEdgeSpecRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecRightContext;)V
	public fun exitEdgeSpecUndirected (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedContext;)V
	public fun exitEdgeSpecUndirectedBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedBidirectionalContext;)V
	public fun exitEdgeSpecUndirectedLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedLeftContext;)V
	public fun exitEdgeSpecUndirectedRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedRightContext;)V
	public fun exitEdgeWithSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWithSpecContext;)V
	public fun exitEveryRule (Lorg/antlr/v4/runtime/ParserRuleContext;)V
	public fun exitExcept (Lorg/partiql/parser/antlr/PartiQLParser$ExceptContext;)V
	public fun exitExcludeClause (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;)V
	public fun exitExcludeExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprContext;)V
	public fun exitExcludeExprCollectionAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionAttrContext;)V
	public fun exitExcludeExprCollectionIndex (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionIndexContext;)V
	public fun exitExcludeExprCollectionWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionWildcardContext;)V
	public fun exitExcludeExprTupleAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleAttrContext;)V
	public fun exitExcludeExprTupleWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleWildcardContext;)V
	public fun exitExecCommand (Lorg/partiql/parser/antlr/PartiQLParser$ExecCommandContext;)V
	public fun exitExplainOption (Lorg/partiql/parser/antlr/PartiQLParser$ExplainOptionContext;)V
	public fun exitExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;)V
	public fun exitExprAndBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndBaseContext;)V
	public fun exitExprGraphMatchMany (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext;)V
	public fun exitExprGraphMatchOne (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;)V
	public fun exitExprNotBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotBaseContext;)V
	public fun exitExprOrBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrBaseContext;)V
	public fun exitExprPrimaryBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryBaseContext;)V
	public fun exitExprPrimaryPath (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryPathContext;)V
	public fun exitExprTermBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermBaseContext;)V
	public fun exitExprTermCurrentDate (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentDateContext;)V
	public fun exitExprTermCurrentUser (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentUserContext;)V
	public fun exitExprTermWrappedQuery (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermWrappedQueryContext;)V
	public fun exitExtract (Lorg/partiql/parser/antlr/PartiQLParser$ExtractContext;)V
	public fun exitFromClause (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;)V
	public fun exitFromClauseSimpleExplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleExplicitContext;)V
	public fun exitFromClauseSimpleImplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleImplicitContext;)V
	public fun exitFunctionCall (Lorg/partiql/parser/antlr/PartiQLParser$FunctionCallContext;)V
	public fun exitFunctionNameReserved (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameReservedContext;)V
	public fun exitFunctionNameSymbol (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameSymbolContext;)V
	public fun exitGpmlPattern (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternContext;)V
	public fun exitGpmlPatternList (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext;)V
	public fun exitGraphPart (Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;)V
	public fun exitGroupAlias (Lorg/partiql/parser/antlr/PartiQLParser$GroupAliasContext;)V
	public fun exitGroupClause (Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;)V
	public fun exitGroupKey (Lorg/partiql/parser/antlr/PartiQLParser$GroupKeyContext;)V
	public fun exitHavingClause (Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;)V
	public fun exitInsertCommandReturning (Lorg/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext;)V
	public fun exitInsertStatement (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementContext;)V
	public fun exitInsertStatementLegacy (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext;)V
	public fun exitIntersect (Lorg/partiql/parser/antlr/PartiQLParser$IntersectContext;)V
	public fun exitJoinRhsBase (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsBaseContext;)V
	public fun exitJoinRhsTableJoined (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsTableJoinedContext;)V
	public fun exitJoinSpec (Lorg/partiql/parser/antlr/PartiQLParser$JoinSpecContext;)V
	public fun exitJoinType (Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;)V
	public fun exitLabelFactorNot (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorNotContext;)V
	public fun exitLabelFactorPrimary (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorPrimaryContext;)V
	public fun exitLabelPrimaryName (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryNameContext;)V
	public fun exitLabelPrimaryParen (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryParenContext;)V
	public fun exitLabelPrimaryWild (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryWildContext;)V
	public fun exitLabelSpecOr (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecOrContext;)V
	public fun exitLabelSpecTerm (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecTermContext;)V
	public fun exitLabelTermAnd (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermAndContext;)V
	public fun exitLabelTermFactor (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermFactorContext;)V
	public fun exitLagLeadFunction (Lorg/partiql/parser/antlr/PartiQLParser$LagLeadFunctionContext;)V
	public fun exitLetBinding (Lorg/partiql/parser/antlr/PartiQLParser$LetBindingContext;)V
	public fun exitLetClause (Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;)V
	public fun exitLimitClause (Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;)V
	public fun exitLiteralDate (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDateContext;)V
	public fun exitLiteralDecimal (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDecimalContext;)V
	public fun exitLiteralFalse (Lorg/partiql/parser/antlr/PartiQLParser$LiteralFalseContext;)V
	public fun exitLiteralInteger (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIntegerContext;)V
	public fun exitLiteralIon (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIonContext;)V
	public fun exitLiteralMissing (Lorg/partiql/parser/antlr/PartiQLParser$LiteralMissingContext;)V
	public fun exitLiteralNull (Lorg/partiql/parser/antlr/PartiQLParser$LiteralNullContext;)V
	public fun exitLiteralString (Lorg/partiql/parser/antlr/PartiQLParser$LiteralStringContext;)V
	public fun exitLiteralTime (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimeContext;)V
	public fun exitLiteralTimestamp (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimestampContext;)V
	public fun exitLiteralTrue (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTrueContext;)V
	public fun exitMatchPattern (Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;)V
	public fun exitMathOp00 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;)V
	public fun exitMathOp01 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;)V
	public fun exitMathOp02 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;)V
	public fun exitNode (Lorg/partiql/parser/antlr/PartiQLParser$NodeContext;)V
	public fun exitNonReservedKeywords (Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;)V
	public fun exitNot (Lorg/partiql/parser/antlr/PartiQLParser$NotContext;)V
	public fun exitNullIf (Lorg/partiql/parser/antlr/PartiQLParser$NullIfContext;)V
	public fun exitOffsetByClause (Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;)V
	public fun exitOnConflict (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictContext;)V
	public fun exitOnConflictLegacy (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;)V
	public fun exitOr (Lorg/partiql/parser/antlr/PartiQLParser$OrContext;)V
	public fun exitOrderByClause (Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;)V
	public fun exitOrderSortSpec (Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;)V
	public fun exitOver (Lorg/partiql/parser/antlr/PartiQLParser$OverContext;)V
	public fun exitOverlay (Lorg/partiql/parser/antlr/PartiQLParser$OverlayContext;)V
	public fun exitPair (Lorg/partiql/parser/antlr/PartiQLParser$PairContext;)V
	public fun exitParameter (Lorg/partiql/parser/antlr/PartiQLParser$ParameterContext;)V
	public fun exitPathSimple (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;)V
	public fun exitPathSimpleDotSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleDotSymbolContext;)V
	public fun exitPathSimpleLiteral (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleLiteralContext;)V
	public fun exitPathSimpleSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleSymbolContext;)V
	public fun exitPathStepDotAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotAllContext;)V
	public fun exitPathStepDotExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotExprContext;)V
	public fun exitPathStepIndexAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexAllContext;)V
	public fun exitPathStepIndexExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexExprContext;)V
	public fun exitPattern (Lorg/partiql/parser/antlr/PartiQLParser$PatternContext;)V
	public fun exitPatternPathVariable (Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;)V
	public fun exitPatternQuantifier (Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;)V
	public fun exitPatternRestrictor (Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;)V
	public fun exitPosition (Lorg/partiql/parser/antlr/PartiQLParser$PositionContext;)V
	public fun exitPredicateBase (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBaseContext;)V
	public fun exitPredicateBetween (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBetweenContext;)V
	public fun exitPredicateComparison (Lorg/partiql/parser/antlr/PartiQLParser$PredicateComparisonContext;)V
	public fun exitPredicateIn (Lorg/partiql/parser/antlr/PartiQLParser$PredicateInContext;)V
	public fun exitPredicateIs (Lorg/partiql/parser/antlr/PartiQLParser$PredicateIsContext;)V
	public fun exitPredicateLike (Lorg/partiql/parser/antlr/PartiQLParser$PredicateLikeContext;)V
	public fun exitPrimaryKey (Lorg/partiql/parser/antlr/PartiQLParser$PrimaryKeyContext;)V
	public fun exitProjectionItem (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemContext;)V
	public fun exitProjectionItems (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext;)V
	public fun exitQualifiedName (Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;)V
	public fun exitQueryBase (Lorg/partiql/parser/antlr/PartiQLParser$QueryBaseContext;)V
	public fun exitQueryDdl (Lorg/partiql/parser/antlr/PartiQLParser$QueryDdlContext;)V
	public fun exitQueryDml (Lorg/partiql/parser/antlr/PartiQLParser$QueryDmlContext;)V
	public fun exitQueryDql (Lorg/partiql/parser/antlr/PartiQLParser$QueryDqlContext;)V
	public fun exitQueryExec (Lorg/partiql/parser/antlr/PartiQLParser$QueryExecContext;)V
	public fun exitRemoveCommand (Lorg/partiql/parser/antlr/PartiQLParser$RemoveCommandContext;)V
	public fun exitReplaceCommand (Lorg/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext;)V
	public fun exitReturningClause (Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;)V
	public fun exitReturningColumn (Lorg/partiql/parser/antlr/PartiQLParser$ReturningColumnContext;)V
	public fun exitRoot (Lorg/partiql/parser/antlr/PartiQLParser$RootContext;)V
	public fun exitSearchCondition (Lorg/partiql/parser/antlr/PartiQLParser$SearchConditionContext;)V
	public fun exitSelectAll (Lorg/partiql/parser/antlr/PartiQLParser$SelectAllContext;)V
	public fun exitSelectItems (Lorg/partiql/parser/antlr/PartiQLParser$SelectItemsContext;)V
	public fun exitSelectPivot (Lorg/partiql/parser/antlr/PartiQLParser$SelectPivotContext;)V
	public fun exitSelectValue (Lorg/partiql/parser/antlr/PartiQLParser$SelectValueContext;)V
	public fun exitSelectorAny (Lorg/partiql/parser/antlr/PartiQLParser$SelectorAnyContext;)V
	public fun exitSelectorBasic (Lorg/partiql/parser/antlr/PartiQLParser$SelectorBasicContext;)V
	public fun exitSelectorShortest (Lorg/partiql/parser/antlr/PartiQLParser$SelectorShortestContext;)V
	public fun exitSequenceConstructor (Lorg/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext;)V
	public fun exitSetAssignment (Lorg/partiql/parser/antlr/PartiQLParser$SetAssignmentContext;)V
	public fun exitSetCommand (Lorg/partiql/parser/antlr/PartiQLParser$SetCommandContext;)V
	public fun exitSetQuantifierStrategy (Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;)V
	public fun exitSfwBase (Lorg/partiql/parser/antlr/PartiQLParser$SfwBaseContext;)V
	public fun exitSfwQuery (Lorg/partiql/parser/antlr/PartiQLParser$SfwQueryContext;)V
	public fun exitSubstring (Lorg/partiql/parser/antlr/PartiQLParser$SubstringContext;)V
	public fun exitSymbolPrimitive (Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;)V
	public fun exitTableBaseRefClauses (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefClausesContext;)V
	public fun exitTableBaseRefMatch (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefMatchContext;)V
	public fun exitTableBaseRefSymbol (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefSymbolContext;)V
	public fun exitTableConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrCheckContext;)V
	public fun exitTableConstrDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrDeclarationContext;)V
	public fun exitTableConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrUniqueContext;)V
	public fun exitTableCrossJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableCrossJoinContext;)V
	public fun exitTableDef (Lorg/partiql/parser/antlr/PartiQLParser$TableDefContext;)V
	public fun exitTableName (Lorg/partiql/parser/antlr/PartiQLParser$TableNameContext;)V
	public fun exitTableNonJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;)V
	public fun exitTableQualifiedJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableQualifiedJoinContext;)V
	public fun exitTableRefBase (Lorg/partiql/parser/antlr/PartiQLParser$TableRefBaseContext;)V
	public fun exitTableUnpivot (Lorg/partiql/parser/antlr/PartiQLParser$TableUnpivotContext;)V
	public fun exitTableWrapped (Lorg/partiql/parser/antlr/PartiQLParser$TableWrappedContext;)V
	public fun exitTrimFunction (Lorg/partiql/parser/antlr/PartiQLParser$TrimFunctionContext;)V
	public fun exitTuple (Lorg/partiql/parser/antlr/PartiQLParser$TupleContext;)V
	public fun exitTypeArgDouble (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgDoubleContext;)V
	public fun exitTypeArgSingle (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgSingleContext;)V
	public fun exitTypeAtomic (Lorg/partiql/parser/antlr/PartiQLParser$TypeAtomicContext;)V
	public fun exitTypeCustom (Lorg/partiql/parser/antlr/PartiQLParser$TypeCustomContext;)V
	public fun exitTypeTimeZone (Lorg/partiql/parser/antlr/PartiQLParser$TypeTimeZoneContext;)V
	public fun exitTypeVarChar (Lorg/partiql/parser/antlr/PartiQLParser$TypeVarCharContext;)V
	public fun exitUnion (Lorg/partiql/parser/antlr/PartiQLParser$UnionContext;)V
	public fun exitUnique (Lorg/partiql/parser/antlr/PartiQLParser$UniqueContext;)V
	public fun exitUniqueConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext;)V
	public fun exitUpdateClause (Lorg/partiql/parser/antlr/PartiQLParser$UpdateClauseContext;)V
	public fun exitUpsertCommand (Lorg/partiql/parser/antlr/PartiQLParser$UpsertCommandContext;)V
	public fun exitValueExpr (Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;)V
	public fun exitValueList (Lorg/partiql/parser/antlr/PartiQLParser$ValueListContext;)V
	public fun exitValueRow (Lorg/partiql/parser/antlr/PartiQLParser$ValueRowContext;)V
	public fun exitValues (Lorg/partiql/parser/antlr/PartiQLParser$ValuesContext;)V
	public fun exitVariableIdentifier (Lorg/partiql/parser/antlr/PartiQLParser$VariableIdentifierContext;)V
	public fun exitVariableKeyword (Lorg/partiql/parser/antlr/PartiQLParser$VariableKeywordContext;)V
	public fun exitWhereClause (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;)V
	public fun exitWhereClauseSelect (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;)V
	public fun exitWindowPartitionList (Lorg/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext;)V
	public fun exitWindowSortSpecList (Lorg/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext;)V
	public fun visitErrorNode (Lorg/antlr/v4/runtime/tree/ErrorNode;)V
	public fun visitTerminal (Lorg/antlr/v4/runtime/tree/TerminalNode;)V
}

public class org/partiql/parser/antlr/PartiQLBaseVisitor : org/antlr/v4/runtime/tree/AbstractParseTreeVisitor, org/partiql/parser/antlr/PartiQLVisitor {
	public fun <init> ()V
	public fun visitAggregateBase (Lorg/partiql/parser/antlr/PartiQLParser$AggregateBaseContext;)Ljava/lang/Object;
	public fun visitAnd (Lorg/partiql/parser/antlr/PartiQLParser$AndContext;)Ljava/lang/Object;
	public fun visitArray (Lorg/partiql/parser/antlr/PartiQLParser$ArrayContext;)Ljava/lang/Object;
	public fun visitAsIdent (Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;)Ljava/lang/Object;
	public fun visitAtIdent (Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;)Ljava/lang/Object;
	public fun visitBag (Lorg/partiql/parser/antlr/PartiQLParser$BagContext;)Ljava/lang/Object;
	public fun visitByIdent (Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;)Ljava/lang/Object;
	public fun visitCanCast (Lorg/partiql/parser/antlr/PartiQLParser$CanCastContext;)Ljava/lang/Object;
	public fun visitCanLosslessCast (Lorg/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext;)Ljava/lang/Object;
	public fun visitCaseExpr (Lorg/partiql/parser/antlr/PartiQLParser$CaseExprContext;)Ljava/lang/Object;
	public fun visitCast (Lorg/partiql/parser/antlr/PartiQLParser$CastContext;)Ljava/lang/Object;
	public fun visitCheckConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;)Ljava/lang/Object;
	public fun visitCoalesce (Lorg/partiql/parser/antlr/PartiQLParser$CoalesceContext;)Ljava/lang/Object;
	public fun visitColConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrCheckContext;)Ljava/lang/Object;
	public fun visitColConstrNotNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNotNullContext;)Ljava/lang/Object;
	public fun visitColConstrNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNullContext;)Ljava/lang/Object;
	public fun visitColConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrUniqueContext;)Ljava/lang/Object;
	public fun visitCollection (Lorg/partiql/parser/antlr/PartiQLParser$CollectionContext;)Ljava/lang/Object;
	public fun visitColumnConstraint (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext;)Ljava/lang/Object;
	public fun visitColumnDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$ColumnDeclarationContext;)Ljava/lang/Object;
	public fun visitColumnName (Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;)Ljava/lang/Object;
	public fun visitConflictAction (Lorg/partiql/parser/antlr/PartiQLParser$ConflictActionContext;)Ljava/lang/Object;
	public fun visitConflictTarget (Lorg/partiql/parser/antlr/PartiQLParser$ConflictTargetContext;)Ljava/lang/Object;
	public fun visitConstraintName (Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;)Ljava/lang/Object;
	public fun visitCountAll (Lorg/partiql/parser/antlr/PartiQLParser$CountAllContext;)Ljava/lang/Object;
	public fun visitCreateIndex (Lorg/partiql/parser/antlr/PartiQLParser$CreateIndexContext;)Ljava/lang/Object;
	public fun visitCreateTable (Lorg/partiql/parser/antlr/PartiQLParser$CreateTableContext;)Ljava/lang/Object;
	public fun visitDateFunction (Lorg/partiql/parser/antlr/PartiQLParser$DateFunctionContext;)Ljava/lang/Object;
	public fun visitDdl (Lorg/partiql/parser/antlr/PartiQLParser$DdlContext;)Ljava/lang/Object;
	public fun visitDeleteCommand (Lorg/partiql/parser/antlr/PartiQLParser$DeleteCommandContext;)Ljava/lang/Object;
	public fun visitDmlBase (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseContext;)Ljava/lang/Object;
	public fun visitDmlBaseCommand (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;)Ljava/lang/Object;
	public fun visitDmlBaseWrapper (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseWrapperContext;)Ljava/lang/Object;
	public fun visitDmlDelete (Lorg/partiql/parser/antlr/PartiQLParser$DmlDeleteContext;)Ljava/lang/Object;
	public fun visitDmlInsertReturning (Lorg/partiql/parser/antlr/PartiQLParser$DmlInsertReturningContext;)Ljava/lang/Object;
	public fun visitDoReplace (Lorg/partiql/parser/antlr/PartiQLParser$DoReplaceContext;)Ljava/lang/Object;
	public fun visitDoUpdate (Lorg/partiql/parser/antlr/PartiQLParser$DoUpdateContext;)Ljava/lang/Object;
	public fun visitDql (Lorg/partiql/parser/antlr/PartiQLParser$DqlContext;)Ljava/lang/Object;
	public fun visitDropIndex (Lorg/partiql/parser/antlr/PartiQLParser$DropIndexContext;)Ljava/lang/Object;
	public fun visitDropTable (Lorg/partiql/parser/antlr/PartiQLParser$DropTableContext;)Ljava/lang/Object;
	public fun visitEdgeAbbrev (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext;)Ljava/lang/Object;
	public fun visitEdgeAbbreviated (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbreviatedContext;)Ljava/lang/Object;
	public fun visitEdgeSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;)Ljava/lang/Object;
	public fun visitEdgeSpecBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecBidirectionalContext;)Ljava/lang/Object;
	public fun visitEdgeSpecLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecLeftContext;)Ljava/lang/Object;
	public fun visitEdgeSpecRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecRightContext;)Ljava/lang/Object;
	public fun visitEdgeSpecUndirected (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedContext;)Ljava/lang/Object;
	public fun visitEdgeSpecUndirectedBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedBidirectionalContext;)Ljava/lang/Object;
	public fun visitEdgeSpecUndirectedLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedLeftContext;)Ljava/lang/Object;
	public fun visitEdgeSpecUndirectedRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedRightContext;)Ljava/lang/Object;
	public fun visitEdgeWithSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWithSpecContext;)Ljava/lang/Object;
	public fun visitExcept (Lorg/partiql/parser/antlr/PartiQLParser$ExceptContext;)Ljava/lang/Object;
	public fun visitExcludeClause (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;)Ljava/lang/Object;
	public fun visitExcludeExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprContext;)Ljava/lang/Object;
	public fun visitExcludeExprCollectionAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionAttrContext;)Ljava/lang/Object;
	public fun visitExcludeExprCollectionIndex (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionIndexContext;)Ljava/lang/Object;
	public fun visitExcludeExprCollectionWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionWildcardContext;)Ljava/lang/Object;
	public fun visitExcludeExprTupleAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleAttrContext;)Ljava/lang/Object;
	public fun visitExcludeExprTupleWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleWildcardContext;)Ljava/lang/Object;
	public fun visitExecCommand (Lorg/partiql/parser/antlr/PartiQLParser$ExecCommandContext;)Ljava/lang/Object;
	public fun visitExplainOption (Lorg/partiql/parser/antlr/PartiQLParser$ExplainOptionContext;)Ljava/lang/Object;
	public fun visitExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;)Ljava/lang/Object;
	public fun visitExprAndBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndBaseContext;)Ljava/lang/Object;
	public fun visitExprGraphMatchMany (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext;)Ljava/lang/Object;
	public fun visitExprGraphMatchOne (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;)Ljava/lang/Object;
	public fun visitExprNotBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotBaseContext;)Ljava/lang/Object;
	public fun visitExprOrBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrBaseContext;)Ljava/lang/Object;
	public fun visitExprPrimaryBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryBaseContext;)Ljava/lang/Object;
	public fun visitExprPrimaryPath (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryPathContext;)Ljava/lang/Object;
	public fun visitExprTermBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermBaseContext;)Ljava/lang/Object;
	public fun visitExprTermCurrentDate (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentDateContext;)Ljava/lang/Object;
	public fun visitExprTermCurrentUser (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentUserContext;)Ljava/lang/Object;
	public fun visitExprTermWrappedQuery (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermWrappedQueryContext;)Ljava/lang/Object;
	public fun visitExtract (Lorg/partiql/parser/antlr/PartiQLParser$ExtractContext;)Ljava/lang/Object;
	public fun visitFromClause (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;)Ljava/lang/Object;
	public fun visitFromClauseSimpleExplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleExplicitContext;)Ljava/lang/Object;
	public fun visitFromClauseSimpleImplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleImplicitContext;)Ljava/lang/Object;
	public fun visitFunctionCall (Lorg/partiql/parser/antlr/PartiQLParser$FunctionCallContext;)Ljava/lang/Object;
	public fun visitFunctionNameReserved (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameReservedContext;)Ljava/lang/Object;
	public fun visitFunctionNameSymbol (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameSymbolContext;)Ljava/lang/Object;
	public fun visitGpmlPattern (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternContext;)Ljava/lang/Object;
	public fun visitGpmlPatternList (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext;)Ljava/lang/Object;
	public fun visitGraphPart (Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;)Ljava/lang/Object;
	public fun visitGroupAlias (Lorg/partiql/parser/antlr/PartiQLParser$GroupAliasContext;)Ljava/lang/Object;
	public fun visitGroupClause (Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;)Ljava/lang/Object;
	public fun visitGroupKey (Lorg/partiql/parser/antlr/PartiQLParser$GroupKeyContext;)Ljava/lang/Object;
	public fun visitHavingClause (Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;)Ljava/lang/Object;
	public fun visitInsertCommandReturning (Lorg/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext;)Ljava/lang/Object;
	public fun visitInsertStatement (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementContext;)Ljava/lang/Object;
	public fun visitInsertStatementLegacy (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext;)Ljava/lang/Object;
	public fun visitIntersect (Lorg/partiql/parser/antlr/PartiQLParser$IntersectContext;)Ljava/lang/Object;
	public fun visitJoinRhsBase (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsBaseContext;)Ljava/lang/Object;
	public fun visitJoinRhsTableJoined (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsTableJoinedContext;)Ljava/lang/Object;
	public fun visitJoinSpec (Lorg/partiql/parser/antlr/PartiQLParser$JoinSpecContext;)Ljava/lang/Object;
	public fun visitJoinType (Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;)Ljava/lang/Object;
	public fun visitLabelFactorNot (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorNotContext;)Ljava/lang/Object;
	public fun visitLabelFactorPrimary (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorPrimaryContext;)Ljava/lang/Object;
	public fun visitLabelPrimaryName (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryNameContext;)Ljava/lang/Object;
	public fun visitLabelPrimaryParen (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryParenContext;)Ljava/lang/Object;
	public fun visitLabelPrimaryWild (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryWildContext;)Ljava/lang/Object;
	public fun visitLabelSpecOr (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecOrContext;)Ljava/lang/Object;
	public fun visitLabelSpecTerm (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecTermContext;)Ljava/lang/Object;
	public fun visitLabelTermAnd (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermAndContext;)Ljava/lang/Object;
	public fun visitLabelTermFactor (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermFactorContext;)Ljava/lang/Object;
	public fun visitLagLeadFunction (Lorg/partiql/parser/antlr/PartiQLParser$LagLeadFunctionContext;)Ljava/lang/Object;
	public fun visitLetBinding (Lorg/partiql/parser/antlr/PartiQLParser$LetBindingContext;)Ljava/lang/Object;
	public fun visitLetClause (Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;)Ljava/lang/Object;
	public fun visitLimitClause (Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;)Ljava/lang/Object;
	public fun visitLiteralDate (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDateContext;)Ljava/lang/Object;
	public fun visitLiteralDecimal (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDecimalContext;)Ljava/lang/Object;
	public fun visitLiteralFalse (Lorg/partiql/parser/antlr/PartiQLParser$LiteralFalseContext;)Ljava/lang/Object;
	public fun visitLiteralInteger (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIntegerContext;)Ljava/lang/Object;
	public fun visitLiteralIon (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIonContext;)Ljava/lang/Object;
	public fun visitLiteralMissing (Lorg/partiql/parser/antlr/PartiQLParser$LiteralMissingContext;)Ljava/lang/Object;
	public fun visitLiteralNull (Lorg/partiql/parser/antlr/PartiQLParser$LiteralNullContext;)Ljava/lang/Object;
	public fun visitLiteralString (Lorg/partiql/parser/antlr/PartiQLParser$LiteralStringContext;)Ljava/lang/Object;
	public fun visitLiteralTime (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimeContext;)Ljava/lang/Object;
	public fun visitLiteralTimestamp (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimestampContext;)Ljava/lang/Object;
	public fun visitLiteralTrue (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTrueContext;)Ljava/lang/Object;
	public fun visitMatchPattern (Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;)Ljava/lang/Object;
	public fun visitMathOp00 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;)Ljava/lang/Object;
	public fun visitMathOp01 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;)Ljava/lang/Object;
	public fun visitMathOp02 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;)Ljava/lang/Object;
	public fun visitNode (Lorg/partiql/parser/antlr/PartiQLParser$NodeContext;)Ljava/lang/Object;
	public fun visitNonReservedKeywords (Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;)Ljava/lang/Object;
	public fun visitNot (Lorg/partiql/parser/antlr/PartiQLParser$NotContext;)Ljava/lang/Object;
	public fun visitNullIf (Lorg/partiql/parser/antlr/PartiQLParser$NullIfContext;)Ljava/lang/Object;
	public fun visitOffsetByClause (Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;)Ljava/lang/Object;
	public fun visitOnConflict (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictContext;)Ljava/lang/Object;
	public fun visitOnConflictLegacy (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;)Ljava/lang/Object;
	public fun visitOr (Lorg/partiql/parser/antlr/PartiQLParser$OrContext;)Ljava/lang/Object;
	public fun visitOrderByClause (Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;)Ljava/lang/Object;
	public fun visitOrderSortSpec (Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;)Ljava/lang/Object;
	public fun visitOver (Lorg/partiql/parser/antlr/PartiQLParser$OverContext;)Ljava/lang/Object;
	public fun visitOverlay (Lorg/partiql/parser/antlr/PartiQLParser$OverlayContext;)Ljava/lang/Object;
	public fun visitPair (Lorg/partiql/parser/antlr/PartiQLParser$PairContext;)Ljava/lang/Object;
	public fun visitParameter (Lorg/partiql/parser/antlr/PartiQLParser$ParameterContext;)Ljava/lang/Object;
	public fun visitPathSimple (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;)Ljava/lang/Object;
	public fun visitPathSimpleDotSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleDotSymbolContext;)Ljava/lang/Object;
	public fun visitPathSimpleLiteral (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleLiteralContext;)Ljava/lang/Object;
	public fun visitPathSimpleSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleSymbolContext;)Ljava/lang/Object;
	public fun visitPathStepDotAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotAllContext;)Ljava/lang/Object;
	public fun visitPathStepDotExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotExprContext;)Ljava/lang/Object;
	public fun visitPathStepIndexAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexAllContext;)Ljava/lang/Object;
	public fun visitPathStepIndexExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexExprContext;)Ljava/lang/Object;
	public fun visitPattern (Lorg/partiql/parser/antlr/PartiQLParser$PatternContext;)Ljava/lang/Object;
	public fun visitPatternPathVariable (Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;)Ljava/lang/Object;
	public fun visitPatternQuantifier (Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;)Ljava/lang/Object;
	public fun visitPatternRestrictor (Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;)Ljava/lang/Object;
	public fun visitPosition (Lorg/partiql/parser/antlr/PartiQLParser$PositionContext;)Ljava/lang/Object;
	public fun visitPredicateBase (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBaseContext;)Ljava/lang/Object;
	public fun visitPredicateBetween (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBetweenContext;)Ljava/lang/Object;
	public fun visitPredicateComparison (Lorg/partiql/parser/antlr/PartiQLParser$PredicateComparisonContext;)Ljava/lang/Object;
	public fun visitPredicateIn (Lorg/partiql/parser/antlr/PartiQLParser$PredicateInContext;)Ljava/lang/Object;
	public fun visitPredicateIs (Lorg/partiql/parser/antlr/PartiQLParser$PredicateIsContext;)Ljava/lang/Object;
	public fun visitPredicateLike (Lorg/partiql/parser/antlr/PartiQLParser$PredicateLikeContext;)Ljava/lang/Object;
	public fun visitPrimaryKey (Lorg/partiql/parser/antlr/PartiQLParser$PrimaryKeyContext;)Ljava/lang/Object;
	public fun visitProjectionItem (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemContext;)Ljava/lang/Object;
	public fun visitProjectionItems (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext;)Ljava/lang/Object;
	public fun visitQualifiedName (Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;)Ljava/lang/Object;
	public fun visitQueryBase (Lorg/partiql/parser/antlr/PartiQLParser$QueryBaseContext;)Ljava/lang/Object;
	public fun visitQueryDdl (Lorg/partiql/parser/antlr/PartiQLParser$QueryDdlContext;)Ljava/lang/Object;
	public fun visitQueryDml (Lorg/partiql/parser/antlr/PartiQLParser$QueryDmlContext;)Ljava/lang/Object;
	public fun visitQueryDql (Lorg/partiql/parser/antlr/PartiQLParser$QueryDqlContext;)Ljava/lang/Object;
	public fun visitQueryExec (Lorg/partiql/parser/antlr/PartiQLParser$QueryExecContext;)Ljava/lang/Object;
	public fun visitRemoveCommand (Lorg/partiql/parser/antlr/PartiQLParser$RemoveCommandContext;)Ljava/lang/Object;
	public fun visitReplaceCommand (Lorg/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext;)Ljava/lang/Object;
	public fun visitReturningClause (Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;)Ljava/lang/Object;
	public fun visitReturningColumn (Lorg/partiql/parser/antlr/PartiQLParser$ReturningColumnContext;)Ljava/lang/Object;
	public fun visitRoot (Lorg/partiql/parser/antlr/PartiQLParser$RootContext;)Ljava/lang/Object;
	public fun visitSearchCondition (Lorg/partiql/parser/antlr/PartiQLParser$SearchConditionContext;)Ljava/lang/Object;
	public fun visitSelectAll (Lorg/partiql/parser/antlr/PartiQLParser$SelectAllContext;)Ljava/lang/Object;
	public fun visitSelectItems (Lorg/partiql/parser/antlr/PartiQLParser$SelectItemsContext;)Ljava/lang/Object;
	public fun visitSelectPivot (Lorg/partiql/parser/antlr/PartiQLParser$SelectPivotContext;)Ljava/lang/Object;
	public fun visitSelectValue (Lorg/partiql/parser/antlr/PartiQLParser$SelectValueContext;)Ljava/lang/Object;
	public fun visitSelectorAny (Lorg/partiql/parser/antlr/PartiQLParser$SelectorAnyContext;)Ljava/lang/Object;
	public fun visitSelectorBasic (Lorg/partiql/parser/antlr/PartiQLParser$SelectorBasicContext;)Ljava/lang/Object;
	public fun visitSelectorShortest (Lorg/partiql/parser/antlr/PartiQLParser$SelectorShortestContext;)Ljava/lang/Object;
	public fun visitSequenceConstructor (Lorg/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext;)Ljava/lang/Object;
	public fun visitSetAssignment (Lorg/partiql/parser/antlr/PartiQLParser$SetAssignmentContext;)Ljava/lang/Object;
	public fun visitSetCommand (Lorg/partiql/parser/antlr/PartiQLParser$SetCommandContext;)Ljava/lang/Object;
	public fun visitSetQuantifierStrategy (Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;)Ljava/lang/Object;
	public fun visitSfwBase (Lorg/partiql/parser/antlr/PartiQLParser$SfwBaseContext;)Ljava/lang/Object;
	public fun visitSfwQuery (Lorg/partiql/parser/antlr/PartiQLParser$SfwQueryContext;)Ljava/lang/Object;
	public fun visitSubstring (Lorg/partiql/parser/antlr/PartiQLParser$SubstringContext;)Ljava/lang/Object;
	public fun visitSymbolPrimitive (Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;)Ljava/lang/Object;
	public fun visitTableBaseRefClauses (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefClausesContext;)Ljava/lang/Object;
	public fun visitTableBaseRefMatch (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefMatchContext;)Ljava/lang/Object;
	public fun visitTableBaseRefSymbol (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefSymbolContext;)Ljava/lang/Object;
	public fun visitTableConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrCheckContext;)Ljava/lang/Object;
	public fun visitTableConstrDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrDeclarationContext;)Ljava/lang/Object;
	public fun visitTableConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrUniqueContext;)Ljava/lang/Object;
	public fun visitTableCrossJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableCrossJoinContext;)Ljava/lang/Object;
	public fun visitTableDef (Lorg/partiql/parser/antlr/PartiQLParser$TableDefContext;)Ljava/lang/Object;
	public fun visitTableName (Lorg/partiql/parser/antlr/PartiQLParser$TableNameContext;)Ljava/lang/Object;
	public fun visitTableNonJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;)Ljava/lang/Object;
	public fun visitTableQualifiedJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableQualifiedJoinContext;)Ljava/lang/Object;
	public fun visitTableRefBase (Lorg/partiql/parser/antlr/PartiQLParser$TableRefBaseContext;)Ljava/lang/Object;
	public fun visitTableUnpivot (Lorg/partiql/parser/antlr/PartiQLParser$TableUnpivotContext;)Ljava/lang/Object;
	public fun visitTableWrapped (Lorg/partiql/parser/antlr/PartiQLParser$TableWrappedContext;)Ljava/lang/Object;
	public fun visitTrimFunction (Lorg/partiql/parser/antlr/PartiQLParser$TrimFunctionContext;)Ljava/lang/Object;
	public fun visitTuple (Lorg/partiql/parser/antlr/PartiQLParser$TupleContext;)Ljava/lang/Object;
	public fun visitTypeArgDouble (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgDoubleContext;)Ljava/lang/Object;
	public fun visitTypeArgSingle (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgSingleContext;)Ljava/lang/Object;
	public fun visitTypeAtomic (Lorg/partiql/parser/antlr/PartiQLParser$TypeAtomicContext;)Ljava/lang/Object;
	public fun visitTypeCustom (Lorg/partiql/parser/antlr/PartiQLParser$TypeCustomContext;)Ljava/lang/Object;
	public fun visitTypeTimeZone (Lorg/partiql/parser/antlr/PartiQLParser$TypeTimeZoneContext;)Ljava/lang/Object;
	public fun visitTypeVarChar (Lorg/partiql/parser/antlr/PartiQLParser$TypeVarCharContext;)Ljava/lang/Object;
	public fun visitUnion (Lorg/partiql/parser/antlr/PartiQLParser$UnionContext;)Ljava/lang/Object;
	public fun visitUnique (Lorg/partiql/parser/antlr/PartiQLParser$UniqueContext;)Ljava/lang/Object;
	public fun visitUniqueConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext;)Ljava/lang/Object;
	public fun visitUpdateClause (Lorg/partiql/parser/antlr/PartiQLParser$UpdateClauseContext;)Ljava/lang/Object;
	public fun visitUpsertCommand (Lorg/partiql/parser/antlr/PartiQLParser$UpsertCommandContext;)Ljava/lang/Object;
	public fun visitValueExpr (Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;)Ljava/lang/Object;
	public fun visitValueList (Lorg/partiql/parser/antlr/PartiQLParser$ValueListContext;)Ljava/lang/Object;
	public fun visitValueRow (Lorg/partiql/parser/antlr/PartiQLParser$ValueRowContext;)Ljava/lang/Object;
	public fun visitValues (Lorg/partiql/parser/antlr/PartiQLParser$ValuesContext;)Ljava/lang/Object;
	public fun visitVariableIdentifier (Lorg/partiql/parser/antlr/PartiQLParser$VariableIdentifierContext;)Ljava/lang/Object;
	public fun visitVariableKeyword (Lorg/partiql/parser/antlr/PartiQLParser$VariableKeywordContext;)Ljava/lang/Object;
	public fun visitWhereClause (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;)Ljava/lang/Object;
	public fun visitWhereClauseSelect (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;)Ljava/lang/Object;
	public fun visitWindowPartitionList (Lorg/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext;)Ljava/lang/Object;
	public fun visitWindowSortSpecList (Lorg/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext;)Ljava/lang/Object;
}

public abstract interface class org/partiql/parser/antlr/PartiQLListener : org/antlr/v4/runtime/tree/ParseTreeListener {
	public abstract fun enterAggregateBase (Lorg/partiql/parser/antlr/PartiQLParser$AggregateBaseContext;)V
	public abstract fun enterAnd (Lorg/partiql/parser/antlr/PartiQLParser$AndContext;)V
	public abstract fun enterArray (Lorg/partiql/parser/antlr/PartiQLParser$ArrayContext;)V
	public abstract fun enterAsIdent (Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;)V
	public abstract fun enterAtIdent (Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;)V
	public abstract fun enterBag (Lorg/partiql/parser/antlr/PartiQLParser$BagContext;)V
	public abstract fun enterByIdent (Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;)V
	public abstract fun enterCanCast (Lorg/partiql/parser/antlr/PartiQLParser$CanCastContext;)V
	public abstract fun enterCanLosslessCast (Lorg/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext;)V
	public abstract fun enterCaseExpr (Lorg/partiql/parser/antlr/PartiQLParser$CaseExprContext;)V
	public abstract fun enterCast (Lorg/partiql/parser/antlr/PartiQLParser$CastContext;)V
	public abstract fun enterCheckConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;)V
	public abstract fun enterCoalesce (Lorg/partiql/parser/antlr/PartiQLParser$CoalesceContext;)V
	public abstract fun enterColConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrCheckContext;)V
	public abstract fun enterColConstrNotNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNotNullContext;)V
	public abstract fun enterColConstrNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNullContext;)V
	public abstract fun enterColConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrUniqueContext;)V
	public abstract fun enterCollection (Lorg/partiql/parser/antlr/PartiQLParser$CollectionContext;)V
	public abstract fun enterColumnConstraint (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext;)V
	public abstract fun enterColumnDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$ColumnDeclarationContext;)V
	public abstract fun enterColumnName (Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;)V
	public abstract fun enterConflictAction (Lorg/partiql/parser/antlr/PartiQLParser$ConflictActionContext;)V
	public abstract fun enterConflictTarget (Lorg/partiql/parser/antlr/PartiQLParser$ConflictTargetContext;)V
	public abstract fun enterConstraintName (Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;)V
	public abstract fun enterCountAll (Lorg/partiql/parser/antlr/PartiQLParser$CountAllContext;)V
	public abstract fun enterCreateIndex (Lorg/partiql/parser/antlr/PartiQLParser$CreateIndexContext;)V
	public abstract fun enterCreateTable (Lorg/partiql/parser/antlr/PartiQLParser$CreateTableContext;)V
	public abstract fun enterDateFunction (Lorg/partiql/parser/antlr/PartiQLParser$DateFunctionContext;)V
	public abstract fun enterDdl (Lorg/partiql/parser/antlr/PartiQLParser$DdlContext;)V
	public abstract fun enterDeleteCommand (Lorg/partiql/parser/antlr/PartiQLParser$DeleteCommandContext;)V
	public abstract fun enterDmlBase (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseContext;)V
	public abstract fun enterDmlBaseCommand (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;)V
	public abstract fun enterDmlBaseWrapper (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseWrapperContext;)V
	public abstract fun enterDmlDelete (Lorg/partiql/parser/antlr/PartiQLParser$DmlDeleteContext;)V
	public abstract fun enterDmlInsertReturning (Lorg/partiql/parser/antlr/PartiQLParser$DmlInsertReturningContext;)V
	public abstract fun enterDoReplace (Lorg/partiql/parser/antlr/PartiQLParser$DoReplaceContext;)V
	public abstract fun enterDoUpdate (Lorg/partiql/parser/antlr/PartiQLParser$DoUpdateContext;)V
	public abstract fun enterDql (Lorg/partiql/parser/antlr/PartiQLParser$DqlContext;)V
	public abstract fun enterDropIndex (Lorg/partiql/parser/antlr/PartiQLParser$DropIndexContext;)V
	public abstract fun enterDropTable (Lorg/partiql/parser/antlr/PartiQLParser$DropTableContext;)V
	public abstract fun enterEdgeAbbrev (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext;)V
	public abstract fun enterEdgeAbbreviated (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbreviatedContext;)V
	public abstract fun enterEdgeSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;)V
	public abstract fun enterEdgeSpecBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecBidirectionalContext;)V
	public abstract fun enterEdgeSpecLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecLeftContext;)V
	public abstract fun enterEdgeSpecRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecRightContext;)V
	public abstract fun enterEdgeSpecUndirected (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedContext;)V
	public abstract fun enterEdgeSpecUndirectedBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedBidirectionalContext;)V
	public abstract fun enterEdgeSpecUndirectedLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedLeftContext;)V
	public abstract fun enterEdgeSpecUndirectedRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedRightContext;)V
	public abstract fun enterEdgeWithSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWithSpecContext;)V
	public abstract fun enterExcept (Lorg/partiql/parser/antlr/PartiQLParser$ExceptContext;)V
	public abstract fun enterExcludeClause (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;)V
	public abstract fun enterExcludeExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprContext;)V
	public abstract fun enterExcludeExprCollectionAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionAttrContext;)V
	public abstract fun enterExcludeExprCollectionIndex (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionIndexContext;)V
	public abstract fun enterExcludeExprCollectionWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionWildcardContext;)V
	public abstract fun enterExcludeExprTupleAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleAttrContext;)V
	public abstract fun enterExcludeExprTupleWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleWildcardContext;)V
	public abstract fun enterExecCommand (Lorg/partiql/parser/antlr/PartiQLParser$ExecCommandContext;)V
	public abstract fun enterExplainOption (Lorg/partiql/parser/antlr/PartiQLParser$ExplainOptionContext;)V
	public abstract fun enterExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;)V
	public abstract fun enterExprAndBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndBaseContext;)V
	public abstract fun enterExprGraphMatchMany (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext;)V
	public abstract fun enterExprGraphMatchOne (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;)V
	public abstract fun enterExprNotBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotBaseContext;)V
	public abstract fun enterExprOrBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrBaseContext;)V
	public abstract fun enterExprPrimaryBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryBaseContext;)V
	public abstract fun enterExprPrimaryPath (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryPathContext;)V
	public abstract fun enterExprTermBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermBaseContext;)V
	public abstract fun enterExprTermCurrentDate (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentDateContext;)V
	public abstract fun enterExprTermCurrentUser (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentUserContext;)V
	public abstract fun enterExprTermWrappedQuery (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermWrappedQueryContext;)V
	public abstract fun enterExtract (Lorg/partiql/parser/antlr/PartiQLParser$ExtractContext;)V
	public abstract fun enterFromClause (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;)V
	public abstract fun enterFromClauseSimpleExplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleExplicitContext;)V
	public abstract fun enterFromClauseSimpleImplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleImplicitContext;)V
	public abstract fun enterFunctionCall (Lorg/partiql/parser/antlr/PartiQLParser$FunctionCallContext;)V
	public abstract fun enterFunctionNameReserved (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameReservedContext;)V
	public abstract fun enterFunctionNameSymbol (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameSymbolContext;)V
	public abstract fun enterGpmlPattern (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternContext;)V
	public abstract fun enterGpmlPatternList (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext;)V
	public abstract fun enterGraphPart (Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;)V
	public abstract fun enterGroupAlias (Lorg/partiql/parser/antlr/PartiQLParser$GroupAliasContext;)V
	public abstract fun enterGroupClause (Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;)V
	public abstract fun enterGroupKey (Lorg/partiql/parser/antlr/PartiQLParser$GroupKeyContext;)V
	public abstract fun enterHavingClause (Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;)V
	public abstract fun enterInsertCommandReturning (Lorg/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext;)V
	public abstract fun enterInsertStatement (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementContext;)V
	public abstract fun enterInsertStatementLegacy (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext;)V
	public abstract fun enterIntersect (Lorg/partiql/parser/antlr/PartiQLParser$IntersectContext;)V
	public abstract fun enterJoinRhsBase (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsBaseContext;)V
	public abstract fun enterJoinRhsTableJoined (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsTableJoinedContext;)V
	public abstract fun enterJoinSpec (Lorg/partiql/parser/antlr/PartiQLParser$JoinSpecContext;)V
	public abstract fun enterJoinType (Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;)V
	public abstract fun enterLabelFactorNot (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorNotContext;)V
	public abstract fun enterLabelFactorPrimary (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorPrimaryContext;)V
	public abstract fun enterLabelPrimaryName (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryNameContext;)V
	public abstract fun enterLabelPrimaryParen (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryParenContext;)V
	public abstract fun enterLabelPrimaryWild (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryWildContext;)V
	public abstract fun enterLabelSpecOr (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecOrContext;)V
	public abstract fun enterLabelSpecTerm (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecTermContext;)V
	public abstract fun enterLabelTermAnd (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermAndContext;)V
	public abstract fun enterLabelTermFactor (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermFactorContext;)V
	public abstract fun enterLagLeadFunction (Lorg/partiql/parser/antlr/PartiQLParser$LagLeadFunctionContext;)V
	public abstract fun enterLetBinding (Lorg/partiql/parser/antlr/PartiQLParser$LetBindingContext;)V
	public abstract fun enterLetClause (Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;)V
	public abstract fun enterLimitClause (Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;)V
	public abstract fun enterLiteralDate (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDateContext;)V
	public abstract fun enterLiteralDecimal (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDecimalContext;)V
	public abstract fun enterLiteralFalse (Lorg/partiql/parser/antlr/PartiQLParser$LiteralFalseContext;)V
	public abstract fun enterLiteralInteger (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIntegerContext;)V
	public abstract fun enterLiteralIon (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIonContext;)V
	public abstract fun enterLiteralMissing (Lorg/partiql/parser/antlr/PartiQLParser$LiteralMissingContext;)V
	public abstract fun enterLiteralNull (Lorg/partiql/parser/antlr/PartiQLParser$LiteralNullContext;)V
	public abstract fun enterLiteralString (Lorg/partiql/parser/antlr/PartiQLParser$LiteralStringContext;)V
	public abstract fun enterLiteralTime (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimeContext;)V
	public abstract fun enterLiteralTimestamp (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimestampContext;)V
	public abstract fun enterLiteralTrue (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTrueContext;)V
	public abstract fun enterMatchPattern (Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;)V
	public abstract fun enterMathOp00 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;)V
	public abstract fun enterMathOp01 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;)V
	public abstract fun enterMathOp02 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;)V
	public abstract fun enterNode (Lorg/partiql/parser/antlr/PartiQLParser$NodeContext;)V
	public abstract fun enterNonReservedKeywords (Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;)V
	public abstract fun enterNot (Lorg/partiql/parser/antlr/PartiQLParser$NotContext;)V
	public abstract fun enterNullIf (Lorg/partiql/parser/antlr/PartiQLParser$NullIfContext;)V
	public abstract fun enterOffsetByClause (Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;)V
	public abstract fun enterOnConflict (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictContext;)V
	public abstract fun enterOnConflictLegacy (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;)V
	public abstract fun enterOr (Lorg/partiql/parser/antlr/PartiQLParser$OrContext;)V
	public abstract fun enterOrderByClause (Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;)V
	public abstract fun enterOrderSortSpec (Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;)V
	public abstract fun enterOver (Lorg/partiql/parser/antlr/PartiQLParser$OverContext;)V
	public abstract fun enterOverlay (Lorg/partiql/parser/antlr/PartiQLParser$OverlayContext;)V
	public abstract fun enterPair (Lorg/partiql/parser/antlr/PartiQLParser$PairContext;)V
	public abstract fun enterParameter (Lorg/partiql/parser/antlr/PartiQLParser$ParameterContext;)V
	public abstract fun enterPathSimple (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;)V
	public abstract fun enterPathSimpleDotSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleDotSymbolContext;)V
	public abstract fun enterPathSimpleLiteral (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleLiteralContext;)V
	public abstract fun enterPathSimpleSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleSymbolContext;)V
	public abstract fun enterPathStepDotAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotAllContext;)V
	public abstract fun enterPathStepDotExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotExprContext;)V
	public abstract fun enterPathStepIndexAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexAllContext;)V
	public abstract fun enterPathStepIndexExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexExprContext;)V
	public abstract fun enterPattern (Lorg/partiql/parser/antlr/PartiQLParser$PatternContext;)V
	public abstract fun enterPatternPathVariable (Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;)V
	public abstract fun enterPatternQuantifier (Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;)V
	public abstract fun enterPatternRestrictor (Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;)V
	public abstract fun enterPosition (Lorg/partiql/parser/antlr/PartiQLParser$PositionContext;)V
	public abstract fun enterPredicateBase (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBaseContext;)V
	public abstract fun enterPredicateBetween (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBetweenContext;)V
	public abstract fun enterPredicateComparison (Lorg/partiql/parser/antlr/PartiQLParser$PredicateComparisonContext;)V
	public abstract fun enterPredicateIn (Lorg/partiql/parser/antlr/PartiQLParser$PredicateInContext;)V
	public abstract fun enterPredicateIs (Lorg/partiql/parser/antlr/PartiQLParser$PredicateIsContext;)V
	public abstract fun enterPredicateLike (Lorg/partiql/parser/antlr/PartiQLParser$PredicateLikeContext;)V
	public abstract fun enterPrimaryKey (Lorg/partiql/parser/antlr/PartiQLParser$PrimaryKeyContext;)V
	public abstract fun enterProjectionItem (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemContext;)V
	public abstract fun enterProjectionItems (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext;)V
	public abstract fun enterQualifiedName (Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;)V
	public abstract fun enterQueryBase (Lorg/partiql/parser/antlr/PartiQLParser$QueryBaseContext;)V
	public abstract fun enterQueryDdl (Lorg/partiql/parser/antlr/PartiQLParser$QueryDdlContext;)V
	public abstract fun enterQueryDml (Lorg/partiql/parser/antlr/PartiQLParser$QueryDmlContext;)V
	public abstract fun enterQueryDql (Lorg/partiql/parser/antlr/PartiQLParser$QueryDqlContext;)V
	public abstract fun enterQueryExec (Lorg/partiql/parser/antlr/PartiQLParser$QueryExecContext;)V
	public abstract fun enterRemoveCommand (Lorg/partiql/parser/antlr/PartiQLParser$RemoveCommandContext;)V
	public abstract fun enterReplaceCommand (Lorg/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext;)V
	public abstract fun enterReturningClause (Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;)V
	public abstract fun enterReturningColumn (Lorg/partiql/parser/antlr/PartiQLParser$ReturningColumnContext;)V
	public abstract fun enterRoot (Lorg/partiql/parser/antlr/PartiQLParser$RootContext;)V
	public abstract fun enterSearchCondition (Lorg/partiql/parser/antlr/PartiQLParser$SearchConditionContext;)V
	public abstract fun enterSelectAll (Lorg/partiql/parser/antlr/PartiQLParser$SelectAllContext;)V
	public abstract fun enterSelectItems (Lorg/partiql/parser/antlr/PartiQLParser$SelectItemsContext;)V
	public abstract fun enterSelectPivot (Lorg/partiql/parser/antlr/PartiQLParser$SelectPivotContext;)V
	public abstract fun enterSelectValue (Lorg/partiql/parser/antlr/PartiQLParser$SelectValueContext;)V
	public abstract fun enterSelectorAny (Lorg/partiql/parser/antlr/PartiQLParser$SelectorAnyContext;)V
	public abstract fun enterSelectorBasic (Lorg/partiql/parser/antlr/PartiQLParser$SelectorBasicContext;)V
	public abstract fun enterSelectorShortest (Lorg/partiql/parser/antlr/PartiQLParser$SelectorShortestContext;)V
	public abstract fun enterSequenceConstructor (Lorg/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext;)V
	public abstract fun enterSetAssignment (Lorg/partiql/parser/antlr/PartiQLParser$SetAssignmentContext;)V
	public abstract fun enterSetCommand (Lorg/partiql/parser/antlr/PartiQLParser$SetCommandContext;)V
	public abstract fun enterSetQuantifierStrategy (Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;)V
	public abstract fun enterSfwBase (Lorg/partiql/parser/antlr/PartiQLParser$SfwBaseContext;)V
	public abstract fun enterSfwQuery (Lorg/partiql/parser/antlr/PartiQLParser$SfwQueryContext;)V
	public abstract fun enterSubstring (Lorg/partiql/parser/antlr/PartiQLParser$SubstringContext;)V
	public abstract fun enterSymbolPrimitive (Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;)V
	public abstract fun enterTableBaseRefClauses (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefClausesContext;)V
	public abstract fun enterTableBaseRefMatch (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefMatchContext;)V
	public abstract fun enterTableBaseRefSymbol (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefSymbolContext;)V
	public abstract fun enterTableConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrCheckContext;)V
	public abstract fun enterTableConstrDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrDeclarationContext;)V
	public abstract fun enterTableConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrUniqueContext;)V
	public abstract fun enterTableCrossJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableCrossJoinContext;)V
	public abstract fun enterTableDef (Lorg/partiql/parser/antlr/PartiQLParser$TableDefContext;)V
	public abstract fun enterTableName (Lorg/partiql/parser/antlr/PartiQLParser$TableNameContext;)V
	public abstract fun enterTableNonJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;)V
	public abstract fun enterTableQualifiedJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableQualifiedJoinContext;)V
	public abstract fun enterTableRefBase (Lorg/partiql/parser/antlr/PartiQLParser$TableRefBaseContext;)V
	public abstract fun enterTableUnpivot (Lorg/partiql/parser/antlr/PartiQLParser$TableUnpivotContext;)V
	public abstract fun enterTableWrapped (Lorg/partiql/parser/antlr/PartiQLParser$TableWrappedContext;)V
	public abstract fun enterTrimFunction (Lorg/partiql/parser/antlr/PartiQLParser$TrimFunctionContext;)V
	public abstract fun enterTuple (Lorg/partiql/parser/antlr/PartiQLParser$TupleContext;)V
	public abstract fun enterTypeArgDouble (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgDoubleContext;)V
	public abstract fun enterTypeArgSingle (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgSingleContext;)V
	public abstract fun enterTypeAtomic (Lorg/partiql/parser/antlr/PartiQLParser$TypeAtomicContext;)V
	public abstract fun enterTypeCustom (Lorg/partiql/parser/antlr/PartiQLParser$TypeCustomContext;)V
	public abstract fun enterTypeTimeZone (Lorg/partiql/parser/antlr/PartiQLParser$TypeTimeZoneContext;)V
	public abstract fun enterTypeVarChar (Lorg/partiql/parser/antlr/PartiQLParser$TypeVarCharContext;)V
	public abstract fun enterUnion (Lorg/partiql/parser/antlr/PartiQLParser$UnionContext;)V
	public abstract fun enterUnique (Lorg/partiql/parser/antlr/PartiQLParser$UniqueContext;)V
	public abstract fun enterUniqueConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext;)V
	public abstract fun enterUpdateClause (Lorg/partiql/parser/antlr/PartiQLParser$UpdateClauseContext;)V
	public abstract fun enterUpsertCommand (Lorg/partiql/parser/antlr/PartiQLParser$UpsertCommandContext;)V
	public abstract fun enterValueExpr (Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;)V
	public abstract fun enterValueList (Lorg/partiql/parser/antlr/PartiQLParser$ValueListContext;)V
	public abstract fun enterValueRow (Lorg/partiql/parser/antlr/PartiQLParser$ValueRowContext;)V
	public abstract fun enterValues (Lorg/partiql/parser/antlr/PartiQLParser$ValuesContext;)V
	public abstract fun enterVariableIdentifier (Lorg/partiql/parser/antlr/PartiQLParser$VariableIdentifierContext;)V
	public abstract fun enterVariableKeyword (Lorg/partiql/parser/antlr/PartiQLParser$VariableKeywordContext;)V
	public abstract fun enterWhereClause (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;)V
	public abstract fun enterWhereClauseSelect (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;)V
	public abstract fun enterWindowPartitionList (Lorg/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext;)V
	public abstract fun enterWindowSortSpecList (Lorg/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext;)V
	public abstract fun exitAggregateBase (Lorg/partiql/parser/antlr/PartiQLParser$AggregateBaseContext;)V
	public abstract fun exitAnd (Lorg/partiql/parser/antlr/PartiQLParser$AndContext;)V
	public abstract fun exitArray (Lorg/partiql/parser/antlr/PartiQLParser$ArrayContext;)V
	public abstract fun exitAsIdent (Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;)V
	public abstract fun exitAtIdent (Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;)V
	public abstract fun exitBag (Lorg/partiql/parser/antlr/PartiQLParser$BagContext;)V
	public abstract fun exitByIdent (Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;)V
	public abstract fun exitCanCast (Lorg/partiql/parser/antlr/PartiQLParser$CanCastContext;)V
	public abstract fun exitCanLosslessCast (Lorg/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext;)V
	public abstract fun exitCaseExpr (Lorg/partiql/parser/antlr/PartiQLParser$CaseExprContext;)V
	public abstract fun exitCast (Lorg/partiql/parser/antlr/PartiQLParser$CastContext;)V
	public abstract fun exitCheckConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;)V
	public abstract fun exitCoalesce (Lorg/partiql/parser/antlr/PartiQLParser$CoalesceContext;)V
	public abstract fun exitColConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrCheckContext;)V
	public abstract fun exitColConstrNotNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNotNullContext;)V
	public abstract fun exitColConstrNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNullContext;)V
	public abstract fun exitColConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrUniqueContext;)V
	public abstract fun exitCollection (Lorg/partiql/parser/antlr/PartiQLParser$CollectionContext;)V
	public abstract fun exitColumnConstraint (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext;)V
	public abstract fun exitColumnDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$ColumnDeclarationContext;)V
	public abstract fun exitColumnName (Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;)V
	public abstract fun exitConflictAction (Lorg/partiql/parser/antlr/PartiQLParser$ConflictActionContext;)V
	public abstract fun exitConflictTarget (Lorg/partiql/parser/antlr/PartiQLParser$ConflictTargetContext;)V
	public abstract fun exitConstraintName (Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;)V
	public abstract fun exitCountAll (Lorg/partiql/parser/antlr/PartiQLParser$CountAllContext;)V
	public abstract fun exitCreateIndex (Lorg/partiql/parser/antlr/PartiQLParser$CreateIndexContext;)V
	public abstract fun exitCreateTable (Lorg/partiql/parser/antlr/PartiQLParser$CreateTableContext;)V
	public abstract fun exitDateFunction (Lorg/partiql/parser/antlr/PartiQLParser$DateFunctionContext;)V
	public abstract fun exitDdl (Lorg/partiql/parser/antlr/PartiQLParser$DdlContext;)V
	public abstract fun exitDeleteCommand (Lorg/partiql/parser/antlr/PartiQLParser$DeleteCommandContext;)V
	public abstract fun exitDmlBase (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseContext;)V
	public abstract fun exitDmlBaseCommand (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;)V
	public abstract fun exitDmlBaseWrapper (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseWrapperContext;)V
	public abstract fun exitDmlDelete (Lorg/partiql/parser/antlr/PartiQLParser$DmlDeleteContext;)V
	public abstract fun exitDmlInsertReturning (Lorg/partiql/parser/antlr/PartiQLParser$DmlInsertReturningContext;)V
	public abstract fun exitDoReplace (Lorg/partiql/parser/antlr/PartiQLParser$DoReplaceContext;)V
	public abstract fun exitDoUpdate (Lorg/partiql/parser/antlr/PartiQLParser$DoUpdateContext;)V
	public abstract fun exitDql (Lorg/partiql/parser/antlr/PartiQLParser$DqlContext;)V
	public abstract fun exitDropIndex (Lorg/partiql/parser/antlr/PartiQLParser$DropIndexContext;)V
	public abstract fun exitDropTable (Lorg/partiql/parser/antlr/PartiQLParser$DropTableContext;)V
	public abstract fun exitEdgeAbbrev (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext;)V
	public abstract fun exitEdgeAbbreviated (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbreviatedContext;)V
	public abstract fun exitEdgeSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;)V
	public abstract fun exitEdgeSpecBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecBidirectionalContext;)V
	public abstract fun exitEdgeSpecLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecLeftContext;)V
	public abstract fun exitEdgeSpecRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecRightContext;)V
	public abstract fun exitEdgeSpecUndirected (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedContext;)V
	public abstract fun exitEdgeSpecUndirectedBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedBidirectionalContext;)V
	public abstract fun exitEdgeSpecUndirectedLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedLeftContext;)V
	public abstract fun exitEdgeSpecUndirectedRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedRightContext;)V
	public abstract fun exitEdgeWithSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWithSpecContext;)V
	public abstract fun exitExcept (Lorg/partiql/parser/antlr/PartiQLParser$ExceptContext;)V
	public abstract fun exitExcludeClause (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;)V
	public abstract fun exitExcludeExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprContext;)V
	public abstract fun exitExcludeExprCollectionAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionAttrContext;)V
	public abstract fun exitExcludeExprCollectionIndex (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionIndexContext;)V
	public abstract fun exitExcludeExprCollectionWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionWildcardContext;)V
	public abstract fun exitExcludeExprTupleAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleAttrContext;)V
	public abstract fun exitExcludeExprTupleWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleWildcardContext;)V
	public abstract fun exitExecCommand (Lorg/partiql/parser/antlr/PartiQLParser$ExecCommandContext;)V
	public abstract fun exitExplainOption (Lorg/partiql/parser/antlr/PartiQLParser$ExplainOptionContext;)V
	public abstract fun exitExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;)V
	public abstract fun exitExprAndBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndBaseContext;)V
	public abstract fun exitExprGraphMatchMany (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext;)V
	public abstract fun exitExprGraphMatchOne (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;)V
	public abstract fun exitExprNotBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotBaseContext;)V
	public abstract fun exitExprOrBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrBaseContext;)V
	public abstract fun exitExprPrimaryBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryBaseContext;)V
	public abstract fun exitExprPrimaryPath (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryPathContext;)V
	public abstract fun exitExprTermBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermBaseContext;)V
	public abstract fun exitExprTermCurrentDate (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentDateContext;)V
	public abstract fun exitExprTermCurrentUser (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentUserContext;)V
	public abstract fun exitExprTermWrappedQuery (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermWrappedQueryContext;)V
	public abstract fun exitExtract (Lorg/partiql/parser/antlr/PartiQLParser$ExtractContext;)V
	public abstract fun exitFromClause (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;)V
	public abstract fun exitFromClauseSimpleExplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleExplicitContext;)V
	public abstract fun exitFromClauseSimpleImplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleImplicitContext;)V
	public abstract fun exitFunctionCall (Lorg/partiql/parser/antlr/PartiQLParser$FunctionCallContext;)V
	public abstract fun exitFunctionNameReserved (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameReservedContext;)V
	public abstract fun exitFunctionNameSymbol (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameSymbolContext;)V
	public abstract fun exitGpmlPattern (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternContext;)V
	public abstract fun exitGpmlPatternList (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext;)V
	public abstract fun exitGraphPart (Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;)V
	public abstract fun exitGroupAlias (Lorg/partiql/parser/antlr/PartiQLParser$GroupAliasContext;)V
	public abstract fun exitGroupClause (Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;)V
	public abstract fun exitGroupKey (Lorg/partiql/parser/antlr/PartiQLParser$GroupKeyContext;)V
	public abstract fun exitHavingClause (Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;)V
	public abstract fun exitInsertCommandReturning (Lorg/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext;)V
	public abstract fun exitInsertStatement (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementContext;)V
	public abstract fun exitInsertStatementLegacy (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext;)V
	public abstract fun exitIntersect (Lorg/partiql/parser/antlr/PartiQLParser$IntersectContext;)V
	public abstract fun exitJoinRhsBase (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsBaseContext;)V
	public abstract fun exitJoinRhsTableJoined (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsTableJoinedContext;)V
	public abstract fun exitJoinSpec (Lorg/partiql/parser/antlr/PartiQLParser$JoinSpecContext;)V
	public abstract fun exitJoinType (Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;)V
	public abstract fun exitLabelFactorNot (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorNotContext;)V
	public abstract fun exitLabelFactorPrimary (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorPrimaryContext;)V
	public abstract fun exitLabelPrimaryName (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryNameContext;)V
	public abstract fun exitLabelPrimaryParen (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryParenContext;)V
	public abstract fun exitLabelPrimaryWild (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryWildContext;)V
	public abstract fun exitLabelSpecOr (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecOrContext;)V
	public abstract fun exitLabelSpecTerm (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecTermContext;)V
	public abstract fun exitLabelTermAnd (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermAndContext;)V
	public abstract fun exitLabelTermFactor (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermFactorContext;)V
	public abstract fun exitLagLeadFunction (Lorg/partiql/parser/antlr/PartiQLParser$LagLeadFunctionContext;)V
	public abstract fun exitLetBinding (Lorg/partiql/parser/antlr/PartiQLParser$LetBindingContext;)V
	public abstract fun exitLetClause (Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;)V
	public abstract fun exitLimitClause (Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;)V
	public abstract fun exitLiteralDate (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDateContext;)V
	public abstract fun exitLiteralDecimal (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDecimalContext;)V
	public abstract fun exitLiteralFalse (Lorg/partiql/parser/antlr/PartiQLParser$LiteralFalseContext;)V
	public abstract fun exitLiteralInteger (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIntegerContext;)V
	public abstract fun exitLiteralIon (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIonContext;)V
	public abstract fun exitLiteralMissing (Lorg/partiql/parser/antlr/PartiQLParser$LiteralMissingContext;)V
	public abstract fun exitLiteralNull (Lorg/partiql/parser/antlr/PartiQLParser$LiteralNullContext;)V
	public abstract fun exitLiteralString (Lorg/partiql/parser/antlr/PartiQLParser$LiteralStringContext;)V
	public abstract fun exitLiteralTime (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimeContext;)V
	public abstract fun exitLiteralTimestamp (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimestampContext;)V
	public abstract fun exitLiteralTrue (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTrueContext;)V
	public abstract fun exitMatchPattern (Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;)V
	public abstract fun exitMathOp00 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;)V
	public abstract fun exitMathOp01 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;)V
	public abstract fun exitMathOp02 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;)V
	public abstract fun exitNode (Lorg/partiql/parser/antlr/PartiQLParser$NodeContext;)V
	public abstract fun exitNonReservedKeywords (Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;)V
	public abstract fun exitNot (Lorg/partiql/parser/antlr/PartiQLParser$NotContext;)V
	public abstract fun exitNullIf (Lorg/partiql/parser/antlr/PartiQLParser$NullIfContext;)V
	public abstract fun exitOffsetByClause (Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;)V
	public abstract fun exitOnConflict (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictContext;)V
	public abstract fun exitOnConflictLegacy (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;)V
	public abstract fun exitOr (Lorg/partiql/parser/antlr/PartiQLParser$OrContext;)V
	public abstract fun exitOrderByClause (Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;)V
	public abstract fun exitOrderSortSpec (Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;)V
	public abstract fun exitOver (Lorg/partiql/parser/antlr/PartiQLParser$OverContext;)V
	public abstract fun exitOverlay (Lorg/partiql/parser/antlr/PartiQLParser$OverlayContext;)V
	public abstract fun exitPair (Lorg/partiql/parser/antlr/PartiQLParser$PairContext;)V
	public abstract fun exitParameter (Lorg/partiql/parser/antlr/PartiQLParser$ParameterContext;)V
	public abstract fun exitPathSimple (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;)V
	public abstract fun exitPathSimpleDotSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleDotSymbolContext;)V
	public abstract fun exitPathSimpleLiteral (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleLiteralContext;)V
	public abstract fun exitPathSimpleSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleSymbolContext;)V
	public abstract fun exitPathStepDotAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotAllContext;)V
	public abstract fun exitPathStepDotExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotExprContext;)V
	public abstract fun exitPathStepIndexAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexAllContext;)V
	public abstract fun exitPathStepIndexExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexExprContext;)V
	public abstract fun exitPattern (Lorg/partiql/parser/antlr/PartiQLParser$PatternContext;)V
	public abstract fun exitPatternPathVariable (Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;)V
	public abstract fun exitPatternQuantifier (Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;)V
	public abstract fun exitPatternRestrictor (Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;)V
	public abstract fun exitPosition (Lorg/partiql/parser/antlr/PartiQLParser$PositionContext;)V
	public abstract fun exitPredicateBase (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBaseContext;)V
	public abstract fun exitPredicateBetween (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBetweenContext;)V
	public abstract fun exitPredicateComparison (Lorg/partiql/parser/antlr/PartiQLParser$PredicateComparisonContext;)V
	public abstract fun exitPredicateIn (Lorg/partiql/parser/antlr/PartiQLParser$PredicateInContext;)V
	public abstract fun exitPredicateIs (Lorg/partiql/parser/antlr/PartiQLParser$PredicateIsContext;)V
	public abstract fun exitPredicateLike (Lorg/partiql/parser/antlr/PartiQLParser$PredicateLikeContext;)V
	public abstract fun exitPrimaryKey (Lorg/partiql/parser/antlr/PartiQLParser$PrimaryKeyContext;)V
	public abstract fun exitProjectionItem (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemContext;)V
	public abstract fun exitProjectionItems (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext;)V
	public abstract fun exitQualifiedName (Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;)V
	public abstract fun exitQueryBase (Lorg/partiql/parser/antlr/PartiQLParser$QueryBaseContext;)V
	public abstract fun exitQueryDdl (Lorg/partiql/parser/antlr/PartiQLParser$QueryDdlContext;)V
	public abstract fun exitQueryDml (Lorg/partiql/parser/antlr/PartiQLParser$QueryDmlContext;)V
	public abstract fun exitQueryDql (Lorg/partiql/parser/antlr/PartiQLParser$QueryDqlContext;)V
	public abstract fun exitQueryExec (Lorg/partiql/parser/antlr/PartiQLParser$QueryExecContext;)V
	public abstract fun exitRemoveCommand (Lorg/partiql/parser/antlr/PartiQLParser$RemoveCommandContext;)V
	public abstract fun exitReplaceCommand (Lorg/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext;)V
	public abstract fun exitReturningClause (Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;)V
	public abstract fun exitReturningColumn (Lorg/partiql/parser/antlr/PartiQLParser$ReturningColumnContext;)V
	public abstract fun exitRoot (Lorg/partiql/parser/antlr/PartiQLParser$RootContext;)V
	public abstract fun exitSearchCondition (Lorg/partiql/parser/antlr/PartiQLParser$SearchConditionContext;)V
	public abstract fun exitSelectAll (Lorg/partiql/parser/antlr/PartiQLParser$SelectAllContext;)V
	public abstract fun exitSelectItems (Lorg/partiql/parser/antlr/PartiQLParser$SelectItemsContext;)V
	public abstract fun exitSelectPivot (Lorg/partiql/parser/antlr/PartiQLParser$SelectPivotContext;)V
	public abstract fun exitSelectValue (Lorg/partiql/parser/antlr/PartiQLParser$SelectValueContext;)V
	public abstract fun exitSelectorAny (Lorg/partiql/parser/antlr/PartiQLParser$SelectorAnyContext;)V
	public abstract fun exitSelectorBasic (Lorg/partiql/parser/antlr/PartiQLParser$SelectorBasicContext;)V
	public abstract fun exitSelectorShortest (Lorg/partiql/parser/antlr/PartiQLParser$SelectorShortestContext;)V
	public abstract fun exitSequenceConstructor (Lorg/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext;)V
	public abstract fun exitSetAssignment (Lorg/partiql/parser/antlr/PartiQLParser$SetAssignmentContext;)V
	public abstract fun exitSetCommand (Lorg/partiql/parser/antlr/PartiQLParser$SetCommandContext;)V
	public abstract fun exitSetQuantifierStrategy (Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;)V
	public abstract fun exitSfwBase (Lorg/partiql/parser/antlr/PartiQLParser$SfwBaseContext;)V
	public abstract fun exitSfwQuery (Lorg/partiql/parser/antlr/PartiQLParser$SfwQueryContext;)V
	public abstract fun exitSubstring (Lorg/partiql/parser/antlr/PartiQLParser$SubstringContext;)V
	public abstract fun exitSymbolPrimitive (Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;)V
	public abstract fun exitTableBaseRefClauses (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefClausesContext;)V
	public abstract fun exitTableBaseRefMatch (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefMatchContext;)V
	public abstract fun exitTableBaseRefSymbol (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefSymbolContext;)V
	public abstract fun exitTableConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrCheckContext;)V
	public abstract fun exitTableConstrDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrDeclarationContext;)V
	public abstract fun exitTableConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrUniqueContext;)V
	public abstract fun exitTableCrossJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableCrossJoinContext;)V
	public abstract fun exitTableDef (Lorg/partiql/parser/antlr/PartiQLParser$TableDefContext;)V
	public abstract fun exitTableName (Lorg/partiql/parser/antlr/PartiQLParser$TableNameContext;)V
	public abstract fun exitTableNonJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;)V
	public abstract fun exitTableQualifiedJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableQualifiedJoinContext;)V
	public abstract fun exitTableRefBase (Lorg/partiql/parser/antlr/PartiQLParser$TableRefBaseContext;)V
	public abstract fun exitTableUnpivot (Lorg/partiql/parser/antlr/PartiQLParser$TableUnpivotContext;)V
	public abstract fun exitTableWrapped (Lorg/partiql/parser/antlr/PartiQLParser$TableWrappedContext;)V
	public abstract fun exitTrimFunction (Lorg/partiql/parser/antlr/PartiQLParser$TrimFunctionContext;)V
	public abstract fun exitTuple (Lorg/partiql/parser/antlr/PartiQLParser$TupleContext;)V
	public abstract fun exitTypeArgDouble (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgDoubleContext;)V
	public abstract fun exitTypeArgSingle (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgSingleContext;)V
	public abstract fun exitTypeAtomic (Lorg/partiql/parser/antlr/PartiQLParser$TypeAtomicContext;)V
	public abstract fun exitTypeCustom (Lorg/partiql/parser/antlr/PartiQLParser$TypeCustomContext;)V
	public abstract fun exitTypeTimeZone (Lorg/partiql/parser/antlr/PartiQLParser$TypeTimeZoneContext;)V
	public abstract fun exitTypeVarChar (Lorg/partiql/parser/antlr/PartiQLParser$TypeVarCharContext;)V
	public abstract fun exitUnion (Lorg/partiql/parser/antlr/PartiQLParser$UnionContext;)V
	public abstract fun exitUnique (Lorg/partiql/parser/antlr/PartiQLParser$UniqueContext;)V
	public abstract fun exitUniqueConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext;)V
	public abstract fun exitUpdateClause (Lorg/partiql/parser/antlr/PartiQLParser$UpdateClauseContext;)V
	public abstract fun exitUpsertCommand (Lorg/partiql/parser/antlr/PartiQLParser$UpsertCommandContext;)V
	public abstract fun exitValueExpr (Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;)V
	public abstract fun exitValueList (Lorg/partiql/parser/antlr/PartiQLParser$ValueListContext;)V
	public abstract fun exitValueRow (Lorg/partiql/parser/antlr/PartiQLParser$ValueRowContext;)V
	public abstract fun exitValues (Lorg/partiql/parser/antlr/PartiQLParser$ValuesContext;)V
	public abstract fun exitVariableIdentifier (Lorg/partiql/parser/antlr/PartiQLParser$VariableIdentifierContext;)V
	public abstract fun exitVariableKeyword (Lorg/partiql/parser/antlr/PartiQLParser$VariableKeywordContext;)V
	public abstract fun exitWhereClause (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;)V
	public abstract fun exitWhereClauseSelect (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;)V
	public abstract fun exitWindowPartitionList (Lorg/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext;)V
	public abstract fun exitWindowSortSpecList (Lorg/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext;)V
}

public class org/partiql/parser/antlr/PartiQLParser : org/antlr/v4/runtime/Parser {
	public static final field ABSOLUTE I
	public static final field ACTION I
	public static final field ADD I
	public static final field ALL I
	public static final field ALLOCATE I
	public static final field ALTER I
	public static final field AMPERSAND I
	public static final field AND I
	public static final field ANGLE_DOUBLE_LEFT I
	public static final field ANGLE_DOUBLE_RIGHT I
	public static final field ANGLE_LEFT I
	public static final field ANGLE_RIGHT I
	public static final field ANY I
	public static final field ARE I
	public static final field AS I
	public static final field ASC I
	public static final field ASSERTION I
	public static final field ASTERISK I
	public static final field AT I
	public static final field AT_SIGN I
	public static final field AUTHORIZATION I
	public static final field AVG I
	public static final field BACKTICK I
	public static final field BAG I
	public static final field BANG I
	public static final field BEGIN I
	public static final field BETWEEN I
	public static final field BIGINT I
	public static final field BIT I
	public static final field BIT_LENGTH I
	public static final field BLOB I
	public static final field BOOL I
	public static final field BOOLEAN I
	public static final field BRACE_LEFT I
	public static final field BRACE_RIGHT I
	public static final field BRACKET_LEFT I
	public static final field BRACKET_RIGHT I
	public static final field BY I
	public static final field CAN_CAST I
	public static final field CAN_LOSSLESS_CAST I
	public static final field CARET I
	public static final field CASCADE I
	public static final field CASCADED I
	public static final field CASE I
	public static final field CAST I
	public static final field CATALOG I
	public static final field CHAR I
	public static final field CHARACTER I
	public static final field CHARACTER_LENGTH I
	public static final field CHAR_LENGTH I
	public static final field CHECK I
	public static final field CLOB I
	public static final field CLOSE I
	public static final field COALESCE I
	public static final field COLLATE I
	public static final field COLLATION I
	public static final field COLON I
	public static final field COLON_SEMI I
	public static final field COLUMN I
	public static final field COMMA I
	public static final field COMMENT_BLOCK I
	public static final field COMMENT_SINGLE I
	public static final field COMMIT I
	public static final field CONCAT I
	public static final field CONFLICT I
	public static final field CONNECT I
	public static final field CONNECTION I
	public static final field CONSTRAINT I
	public static final field CONSTRAINTS I
	public static final field CONTINUE I
	public static final field CONVERT I
	public static final field CORRESPONDING I
	public static final field COUNT I
	public static final field CREATE I
	public static final field CROSS I
	public static final field CURRENT I
	public static final field CURRENT_DATE I
	public static final field CURRENT_TIME I
	public static final field CURRENT_TIMESTAMP I
	public static final field CURRENT_USER I
	public static final field CURSOR I
	public static final field DATE I
	public static final field DATE_ADD I
	public static final field DATE_DIFF I
	public static final field DEALLOCATE I
	public static final field DEC I
	public static final field DECIMAL I
	public static final field DECLARE I
	public static final field DEFAULT I
	public static final field DEFERRABLE I
	public static final field DEFERRED I
	public static final field DELETE I
	public static final field DESC I
	public static final field DESCRIBE I
	public static final field DESCRIPTOR I
	public static final field DIAGNOSTICS I
	public static final field DISCONNECT I
	public static final field DISTINCT I
	public static final field DO I
	public static final field DOMAIN I
	public static final field DOUBLE I
	public static final field DROP I
	public static final field ELSE I
	public static final field END I
	public static final field END_EXEC I
	public static final field EQ I
	public static final field ESCAPE I
	public static final field EVERY I
	public static final field EXCEPT I
	public static final field EXCEPTION I
	public static final field EXCLUDE I
	public static final field EXCLUDED I
	public static final field EXEC I
	public static final field EXECUTE I
	public static final field EXISTS I
	public static final field EXPLAIN I
	public static final field EXTERNAL I
	public static final field EXTRACT I
	public static final field FALSE I
	public static final field FETCH I
	public static final field FIRST I
	public static final field FLOAT I
	public static final field FOR I
	public static final field FOREIGN I
	public static final field FOUND I
	public static final field FROM I
	public static final field FULL I
	public static final field GET I
	public static final field GLOBAL I
	public static final field GO I
	public static final field GOTO I
	public static final field GRANT I
	public static final field GROUP I
	public static final field GT_EQ I
	public static final field HAVING I
	public static final field IDENTIFIER I
	public static final field IDENTIFIER_QUOTED I
	public static final field IDENTITY I
	public static final field IMMEDIATE I
	public static final field IN I
	public static final field INDEX I
	public static final field INDICATOR I
	public static final field INITIALLY I
	public static final field INNER I
	public static final field INPUT I
	public static final field INSENSITIVE I
	public static final field INSERT I
	public static final field INT I
	public static final field INT2 I
	public static final field INT4 I
	public static final field INT8 I
	public static final field INTEGER I
	public static final field INTEGER2 I
	public static final field INTEGER4 I
	public static final field INTEGER8 I
	public static final field INTERSECT I
	public static final field INTERVAL I
	public static final field INTO I
	public static final field ION_CLOSURE I
	public static final field IS I
	public static final field ISOLATION I
	public static final field JOIN I
	public static final field KEY I
	public static final field LAG I
	public static final field LANGUAGE I
	public static final field LAST I
	public static final field LATERAL I
	public static final field LEAD I
	public static final field LEFT I
	public static final field LET I
	public static final field LEVEL I
	public static final field LIKE I
	public static final field LIMIT I
	public static final field LIST I
	public static final field LITERAL_DECIMAL I
	public static final field LITERAL_INTEGER I
	public static final field LITERAL_STRING I
	public static final field LOCAL I
	public static final field LOWER I
	public static final field LT_EQ I
	public static final field MATCH I
	public static final field MAX I
	public static final field MIN I
	public static final field MINUS I
	public static final field MISSING I
	public static final field MOD I
	public static final field MODIFIED I
	public static final field MODULE I
	public static final field NAMES I
	public static final field NATIONAL I
	public static final field NATURAL I
	public static final field NCHAR I
	public static final field NEQ I
	public static final field NEW I
	public static final field NEXT I
	public static final field NO I
	public static final field NOT I
	public static final field NOTHING I
	public static final field NULL I
	public static final field NULLIF I
	public static final field NULLS I
	public static final field NUMERIC I
	public static final field OCTET_LENGTH I
	public static final field OF I
	public static final field OFFSET I
	public static final field OLD I
	public static final field ON I
	public static final field ONLY I
	public static final field OPEN I
	public static final field OPTION I
	public static final field OR I
	public static final field ORDER I
	public static final field OUTER I
	public static final field OUTPUT I
	public static final field OVER I
	public static final field OVERLAPS I
	public static final field OVERLAY I
	public static final field PAD I
	public static final field PAREN_LEFT I
	public static final field PAREN_RIGHT I
	public static final field PARTIAL I
	public static final field PARTITION I
	public static final field PERCENT I
	public static final field PERIOD I
	public static final field PIVOT I
	public static final field PLACING I
	public static final field PLUS I
	public static final field POSITION I
	public static final field PRECISION I
	public static final field PREPARE I
	public static final field PRESERVE I
	public static final field PRIMARY I
	public static final field PRIOR I
	public static final field PRIVILEGES I
	public static final field PROCEDURE I
	public static final field PUBLIC I
	public static final field QUESTION_MARK I
	public static final field READ I
	public static final field REAL I
	public static final field REFERENCES I
	public static final field RELATIVE I
	public static final field REMOVE I
	public static final field REPLACE I
	public static final field RESTRICT I
	public static final field RETURNING I
	public static final field REVOKE I
	public static final field RIGHT I
	public static final field ROLLBACK I
	public static final field ROWS I
	public static final field RULE_aggregate I
	public static final field RULE_array I
	public static final field RULE_asIdent I
	public static final field RULE_atIdent I
	public static final field RULE_bag I
	public static final field RULE_byIdent I
	public static final field RULE_canCast I
	public static final field RULE_canLosslessCast I
	public static final field RULE_caseExpr I
	public static final field RULE_cast I
	public static final field RULE_checkConstraintDef I
	public static final field RULE_coalesce I
	public static final field RULE_collection I
	public static final field RULE_columnConstraint I
	public static final field RULE_columnConstraintDef I
	public static final field RULE_columnName I
	public static final field RULE_conflictAction I
	public static final field RULE_conflictTarget I
	public static final field RULE_constraintName I
	public static final field RULE_createCommand I
	public static final field RULE_dateFunction I
	public static final field RULE_ddl I
	public static final field RULE_deleteCommand I
	public static final field RULE_dml I
	public static final field RULE_dmlBaseCommand I
	public static final field RULE_doReplace I
	public static final field RULE_doUpdate I
	public static final field RULE_dql I
	public static final field RULE_dropCommand I
	public static final field RULE_edge I
	public static final field RULE_edgeAbbrev I
	public static final field RULE_edgeSpec I
	public static final field RULE_edgeWSpec I
	public static final field RULE_excludeClause I
	public static final field RULE_excludeExpr I
	public static final field RULE_excludeExprSteps I
	public static final field RULE_execCommand I
	public static final field RULE_explainOption I
	public static final field RULE_expr I
	public static final field RULE_exprAnd I
	public static final field RULE_exprBagOp I
	public static final field RULE_exprGraphMatchMany I
	public static final field RULE_exprGraphMatchOne I
	public static final field RULE_exprNot I
	public static final field RULE_exprOr I
	public static final field RULE_exprPredicate I
	public static final field RULE_exprPrimary I
	public static final field RULE_exprSelect I
	public static final field RULE_exprTerm I
	public static final field RULE_extract I
	public static final field RULE_fromClause I
	public static final field RULE_fromClauseSimple I
	public static final field RULE_functionCall I
	public static final field RULE_functionName I
	public static final field RULE_gpmlPattern I
	public static final field RULE_gpmlPatternList I
	public static final field RULE_graphPart I
	public static final field RULE_groupAlias I
	public static final field RULE_groupClause I
	public static final field RULE_groupKey I
	public static final field RULE_havingClause I
	public static final field RULE_insertCommandReturning I
	public static final field RULE_insertStatement I
	public static final field RULE_insertStatementLegacy I
	public static final field RULE_joinRhs I
	public static final field RULE_joinSpec I
	public static final field RULE_joinType I
	public static final field RULE_labelFactor I
	public static final field RULE_labelPrimary I
	public static final field RULE_labelSpec I
	public static final field RULE_labelTerm I
	public static final field RULE_letBinding I
	public static final field RULE_letClause I
	public static final field RULE_limitClause I
	public static final field RULE_literal I
	public static final field RULE_matchPattern I
	public static final field RULE_matchSelector I
	public static final field RULE_mathOp00 I
	public static final field RULE_mathOp01 I
	public static final field RULE_mathOp02 I
	public static final field RULE_node I
	public static final field RULE_nonReservedKeywords I
	public static final field RULE_nullIf I
	public static final field RULE_offsetByClause I
	public static final field RULE_onConflict I
	public static final field RULE_onConflictLegacy I
	public static final field RULE_orderByClause I
	public static final field RULE_orderSortSpec I
	public static final field RULE_over I
	public static final field RULE_overlay I
	public static final field RULE_pair I
	public static final field RULE_parameter I
	public static final field RULE_pathSimple I
	public static final field RULE_pathSimpleSteps I
	public static final field RULE_pathStep I
	public static final field RULE_pattern I
	public static final field RULE_patternPathVariable I
	public static final field RULE_patternQuantifier I
	public static final field RULE_patternRestrictor I
	public static final field RULE_position I
	public static final field RULE_projectionItem I
	public static final field RULE_projectionItems I
	public static final field RULE_qualifiedName I
	public static final field RULE_removeCommand I
	public static final field RULE_replaceCommand I
	public static final field RULE_returningClause I
	public static final field RULE_returningColumn I
	public static final field RULE_root I
	public static final field RULE_searchCondition I
	public static final field RULE_selectClause I
	public static final field RULE_sequenceConstructor I
	public static final field RULE_setAssignment I
	public static final field RULE_setCommand I
	public static final field RULE_setQuantifierStrategy I
	public static final field RULE_statement I
	public static final field RULE_substring I
	public static final field RULE_symbolPrimitive I
	public static final field RULE_tableBaseReference I
	public static final field RULE_tableConstraintDef I
	public static final field RULE_tableDef I
	public static final field RULE_tableDefPart I
	public static final field RULE_tableName I
	public static final field RULE_tableNonJoin I
	public static final field RULE_tableReference I
	public static final field RULE_tableUnpivot I
	public static final field RULE_trimFunction I
	public static final field RULE_tuple I
	public static final field RULE_type I
	public static final field RULE_uniqueConstraintDef I
	public static final field RULE_uniqueSpec I
	public static final field RULE_updateClause I
	public static final field RULE_upsertCommand I
	public static final field RULE_valueExpr I
	public static final field RULE_valueList I
	public static final field RULE_valueRow I
	public static final field RULE_values I
	public static final field RULE_varRefExpr I
	public static final field RULE_whereClause I
	public static final field RULE_whereClauseSelect I
	public static final field RULE_windowFunction I
	public static final field RULE_windowPartitionList I
	public static final field RULE_windowSortSpecList I
	public static final field SCHEMA I
	public static final field SCROLL I
	public static final field SECTION I
	public static final field SELECT I
	public static final field SESSION I
	public static final field SESSION_USER I
	public static final field SET I
	public static final field SEXP I
	public static final field SHORTEST I
	public static final field SIZE I
	public static final field SLASH_FORWARD I
	public static final field SMALLINT I
	public static final field SOME I
	public static final field SPACE I
	public static final field SQL I
	public static final field SQLCODE I
	public static final field SQLERROR I
	public static final field SQLSTATE I
	public static final field STRING I
	public static final field STRUCT I
	public static final field SUBSTRING I
	public static final field SUM I
	public static final field SYMBOL I
	public static final field SYSTEM_USER I
	public static final field TABLE I
	public static final field TEMPORARY I
	public static final field THEN I
	public static final field TILDE I
	public static final field TIME I
	public static final field TIMESTAMP I
	public static final field TO I
	public static final field TRANSACTION I
	public static final field TRANSLATE I
	public static final field TRANSLATION I
	public static final field TRIM I
	public static final field TRUE I
	public static final field TUPLE I
	public static final field UNION I
	public static final field UNIQUE I
	public static final field UNKNOWN I
	public static final field UNPIVOT I
	public static final field UNRECOGNIZED I
	public static final field UPDATE I
	public static final field UPPER I
	public static final field UPSERT I
	public static final field USAGE I
	public static final field USER I
	public static final field USING I
	public static final field VALUE I
	public static final field VALUES I
	public static final field VARCHAR I
	public static final field VARYING I
	public static final field VERTBAR I
	public static final field VIEW I
	public static final field VOCABULARY Lorg/antlr/v4/runtime/Vocabulary;
	public static final field WHEN I
	public static final field WHENEVER I
	public static final field WHERE I
	public static final field WITH I
	public static final field WORK I
	public static final field WRITE I
	public static final field WS I
	public static final field ZONE I
	public static final field _ATN Lorg/antlr/v4/runtime/atn/ATN;
	protected static final field _decisionToDFA [Lorg/antlr/v4/runtime/dfa/DFA;
	public static final field _serializedATN Ljava/lang/String;
	protected static final field _sharedContextCache Lorg/antlr/v4/runtime/atn/PredictionContextCache;
	public static final field ruleNames [Ljava/lang/String;
	public static final field tokenNames [Ljava/lang/String;
	public fun <init> (Lorg/antlr/v4/runtime/TokenStream;)V
	public final fun aggregate ()Lorg/partiql/parser/antlr/PartiQLParser$AggregateContext;
	public final fun array ()Lorg/partiql/parser/antlr/PartiQLParser$ArrayContext;
	public final fun asIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;
	public final fun atIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;
	public final fun bag ()Lorg/partiql/parser/antlr/PartiQLParser$BagContext;
	public final fun byIdent ()Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;
	public final fun canCast ()Lorg/partiql/parser/antlr/PartiQLParser$CanCastContext;
	public final fun canLosslessCast ()Lorg/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext;
	public final fun caseExpr ()Lorg/partiql/parser/antlr/PartiQLParser$CaseExprContext;
	public final fun cast ()Lorg/partiql/parser/antlr/PartiQLParser$CastContext;
	public final fun checkConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;
	public final fun coalesce ()Lorg/partiql/parser/antlr/PartiQLParser$CoalesceContext;
	public final fun collection ()Lorg/partiql/parser/antlr/PartiQLParser$CollectionContext;
	public final fun columnConstraint ()Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext;
	public final fun columnConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext;
	public final fun columnName ()Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;
	public final fun conflictAction ()Lorg/partiql/parser/antlr/PartiQLParser$ConflictActionContext;
	public final fun conflictTarget ()Lorg/partiql/parser/antlr/PartiQLParser$ConflictTargetContext;
	public final fun constraintName ()Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;
	public final fun createCommand ()Lorg/partiql/parser/antlr/PartiQLParser$CreateCommandContext;
	public final fun dateFunction ()Lorg/partiql/parser/antlr/PartiQLParser$DateFunctionContext;
	public final fun ddl ()Lorg/partiql/parser/antlr/PartiQLParser$DdlContext;
	public final fun deleteCommand ()Lorg/partiql/parser/antlr/PartiQLParser$DeleteCommandContext;
	public final fun dml ()Lorg/partiql/parser/antlr/PartiQLParser$DmlContext;
	public final fun dmlBaseCommand ()Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;
	public final fun doReplace ()Lorg/partiql/parser/antlr/PartiQLParser$DoReplaceContext;
	public final fun doUpdate ()Lorg/partiql/parser/antlr/PartiQLParser$DoUpdateContext;
	public final fun dql ()Lorg/partiql/parser/antlr/PartiQLParser$DqlContext;
	public final fun dropCommand ()Lorg/partiql/parser/antlr/PartiQLParser$DropCommandContext;
	public final fun edge ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeContext;
	public final fun edgeAbbrev ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext;
	public final fun edgeSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;
	public final fun edgeWSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;
	public final fun excludeClause ()Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;
	public final fun excludeExpr ()Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprContext;
	public final fun excludeExprSteps ()Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext;
	public final fun execCommand ()Lorg/partiql/parser/antlr/PartiQLParser$ExecCommandContext;
	public final fun explainOption ()Lorg/partiql/parser/antlr/PartiQLParser$ExplainOptionContext;
	public final fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public final fun exprAnd ()Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;
	public final fun exprBagOp ()Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;
	public final fun exprGraphMatchMany ()Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext;
	public final fun exprGraphMatchOne ()Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;
	public final fun exprNot ()Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;
	public final fun exprOr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprOrContext;
	public final fun exprPredicate ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public final fun exprPrimary ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;
	public final fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public final fun exprTerm ()Lorg/partiql/parser/antlr/PartiQLParser$ExprTermContext;
	public final fun extract ()Lorg/partiql/parser/antlr/PartiQLParser$ExtractContext;
	public final fun fromClause ()Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;
	public final fun fromClauseSimple ()Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleContext;
	public final fun functionCall ()Lorg/partiql/parser/antlr/PartiQLParser$FunctionCallContext;
	public final fun functionName ()Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameContext;
	public fun getATN ()Lorg/antlr/v4/runtime/atn/ATN;
	public fun getGrammarFileName ()Ljava/lang/String;
	public fun getRuleNames ()[Ljava/lang/String;
	public fun getSerializedATN ()Ljava/lang/String;
	public fun getTokenNames ()[Ljava/lang/String;
	public fun getVocabulary ()Lorg/antlr/v4/runtime/Vocabulary;
	public final fun gpmlPattern ()Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternContext;
	public final fun gpmlPatternList ()Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext;
	public final fun graphPart ()Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;
	public final fun groupAlias ()Lorg/partiql/parser/antlr/PartiQLParser$GroupAliasContext;
	public final fun groupClause ()Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;
	public final fun groupKey ()Lorg/partiql/parser/antlr/PartiQLParser$GroupKeyContext;
	public final fun havingClause ()Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;
	public final fun insertCommandReturning ()Lorg/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext;
	public final fun insertStatement ()Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementContext;
	public final fun insertStatementLegacy ()Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext;
	public final fun joinRhs ()Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsContext;
	public final fun joinSpec ()Lorg/partiql/parser/antlr/PartiQLParser$JoinSpecContext;
	public final fun joinType ()Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;
	public final fun labelFactor ()Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorContext;
	public final fun labelPrimary ()Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext;
	public final fun labelSpec ()Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecContext;
	public final fun labelTerm ()Lorg/partiql/parser/antlr/PartiQLParser$LabelTermContext;
	public final fun letBinding ()Lorg/partiql/parser/antlr/PartiQLParser$LetBindingContext;
	public final fun letClause ()Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;
	public final fun limitClause ()Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;
	public final fun literal ()Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;
	public final fun matchPattern ()Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;
	public final fun matchSelector ()Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;
	public final fun mathOp00 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public final fun mathOp01 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;
	public final fun mathOp02 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;
	public final fun node ()Lorg/partiql/parser/antlr/PartiQLParser$NodeContext;
	public final fun nonReservedKeywords ()Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;
	public final fun nullIf ()Lorg/partiql/parser/antlr/PartiQLParser$NullIfContext;
	public final fun offsetByClause ()Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;
	public final fun onConflict ()Lorg/partiql/parser/antlr/PartiQLParser$OnConflictContext;
	public final fun onConflictLegacy ()Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;
	public final fun orderByClause ()Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;
	public final fun orderSortSpec ()Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;
	public final fun over ()Lorg/partiql/parser/antlr/PartiQLParser$OverContext;
	public final fun overlay ()Lorg/partiql/parser/antlr/PartiQLParser$OverlayContext;
	public final fun pair ()Lorg/partiql/parser/antlr/PartiQLParser$PairContext;
	public final fun parameter ()Lorg/partiql/parser/antlr/PartiQLParser$ParameterContext;
	public final fun pathSimple ()Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;
	public final fun pathSimpleSteps ()Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext;
	public final fun pathStep ()Lorg/partiql/parser/antlr/PartiQLParser$PathStepContext;
	public final fun pattern ()Lorg/partiql/parser/antlr/PartiQLParser$PatternContext;
	public final fun patternPathVariable ()Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;
	public final fun patternQuantifier ()Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;
	public final fun patternRestrictor ()Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;
	public final fun position ()Lorg/partiql/parser/antlr/PartiQLParser$PositionContext;
	public final fun projectionItem ()Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemContext;
	public final fun projectionItems ()Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext;
	public final fun qualifiedName ()Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;
	public final fun removeCommand ()Lorg/partiql/parser/antlr/PartiQLParser$RemoveCommandContext;
	public final fun replaceCommand ()Lorg/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext;
	public final fun returningClause ()Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;
	public final fun returningColumn ()Lorg/partiql/parser/antlr/PartiQLParser$ReturningColumnContext;
	public final fun root ()Lorg/partiql/parser/antlr/PartiQLParser$RootContext;
	public final fun searchCondition ()Lorg/partiql/parser/antlr/PartiQLParser$SearchConditionContext;
	public final fun selectClause ()Lorg/partiql/parser/antlr/PartiQLParser$SelectClauseContext;
	public fun sempred (Lorg/antlr/v4/runtime/RuleContext;II)Z
	public final fun sequenceConstructor ()Lorg/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext;
	public final fun setAssignment ()Lorg/partiql/parser/antlr/PartiQLParser$SetAssignmentContext;
	public final fun setCommand ()Lorg/partiql/parser/antlr/PartiQLParser$SetCommandContext;
	public final fun setQuantifierStrategy ()Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;
	public final fun statement ()Lorg/partiql/parser/antlr/PartiQLParser$StatementContext;
	public final fun substring ()Lorg/partiql/parser/antlr/PartiQLParser$SubstringContext;
	public final fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public final fun tableBaseReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext;
	public final fun tableConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$TableConstraintDefContext;
	public final fun tableDef ()Lorg/partiql/parser/antlr/PartiQLParser$TableDefContext;
	public final fun tableDefPart ()Lorg/partiql/parser/antlr/PartiQLParser$TableDefPartContext;
	public final fun tableName ()Lorg/partiql/parser/antlr/PartiQLParser$TableNameContext;
	public final fun tableNonJoin ()Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;
	public final fun tableReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;
	public final fun tableUnpivot ()Lorg/partiql/parser/antlr/PartiQLParser$TableUnpivotContext;
	public final fun trimFunction ()Lorg/partiql/parser/antlr/PartiQLParser$TrimFunctionContext;
	public final fun tuple ()Lorg/partiql/parser/antlr/PartiQLParser$TupleContext;
	public final fun type ()Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;
	public final fun uniqueConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext;
	public final fun uniqueSpec ()Lorg/partiql/parser/antlr/PartiQLParser$UniqueSpecContext;
	public final fun updateClause ()Lorg/partiql/parser/antlr/PartiQLParser$UpdateClauseContext;
	public final fun upsertCommand ()Lorg/partiql/parser/antlr/PartiQLParser$UpsertCommandContext;
	public final fun valueExpr ()Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;
	public final fun valueList ()Lorg/partiql/parser/antlr/PartiQLParser$ValueListContext;
	public final fun valueRow ()Lorg/partiql/parser/antlr/PartiQLParser$ValueRowContext;
	public final fun values ()Lorg/partiql/parser/antlr/PartiQLParser$ValuesContext;
	public final fun varRefExpr ()Lorg/partiql/parser/antlr/PartiQLParser$VarRefExprContext;
	public final fun whereClause ()Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;
	public final fun whereClauseSelect ()Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;
	public final fun windowFunction ()Lorg/partiql/parser/antlr/PartiQLParser$WindowFunctionContext;
	public final fun windowPartitionList ()Lorg/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext;
	public final fun windowSortSpecList ()Lorg/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext;
}

public class org/partiql/parser/antlr/PartiQLParser$AggregateBaseContext : org/partiql/parser/antlr/PartiQLParser$AggregateContext {
	public field func Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$AggregateContext;)V
	public fun ANY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun AVG ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COUNT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EVERY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MAX ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MIN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SOME ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SUM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun setQuantifierStrategy ()Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;
}

public class org/partiql/parser/antlr/PartiQLParser$AggregateContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$AggregateContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$AndContext : org/partiql/parser/antlr/PartiQLParser$ExprAndContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;
	public field op Lorg/antlr/v4/runtime/Token;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;)V
	public fun AND ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprAnd ()Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;
	public fun exprNot ()Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ArrayContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$AsIdentContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$AtIdentContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$BagContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun ANGLE_DOUBLE_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ANGLE_DOUBLE_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ByIdentContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$CanCastContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CAN_CAST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun type ()Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;
}

public class org/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CAN_LOSSLESS_CAST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun type ()Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;
}

public class org/partiql/parser/antlr/PartiQLParser$CaseExprContext : org/antlr/v4/runtime/ParserRuleContext {
	public field case_ Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field else_ Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field expr Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field thens Ljava/util/List;
	public field whens Ljava/util/List;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun CASE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ELSE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun END ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun THEN ()Ljava/util/List;
	public fun THEN (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun WHEN ()Ljava/util/List;
	public fun WHEN (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$CastContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CAST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun type ()Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;
}

public class org/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun CHECK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun searchCondition ()Lorg/partiql/parser/antlr/PartiQLParser$SearchConditionContext;
}

public class org/partiql/parser/antlr/PartiQLParser$CoalesceContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COALESCE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ColConstrCheckContext : org/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun checkConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ColConstrNotNullContext : org/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext;)V
	public fun NOT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NULL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ColConstrNullContext : org/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext;)V
	public fun NULL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ColConstrUniqueContext : org/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun uniqueSpec ()Lorg/partiql/parser/antlr/PartiQLParser$UniqueSpecContext;
}

public class org/partiql/parser/antlr/PartiQLParser$CollectionContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun array ()Lorg/partiql/parser/antlr/PartiQLParser$ArrayContext;
	public fun bag ()Lorg/partiql/parser/antlr/PartiQLParser$BagContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun CONSTRAINT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun columnConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext;
	public fun constraintName ()Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintDefContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ColumnDeclarationContext : org/partiql/parser/antlr/PartiQLParser$TableDefPartContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableDefPartContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun columnConstraint ()Ljava/util/List;
	public fun columnConstraint (I)Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext;
	public fun columnName ()Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun type ()Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ColumnNameContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ConflictActionContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun DO ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NOTHING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun REPLACE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun UPDATE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun doReplace ()Lorg/partiql/parser/antlr/PartiQLParser$DoReplaceContext;
	public fun doUpdate ()Lorg/partiql/parser/antlr/PartiQLParser$DoUpdateContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ConflictTargetContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CONSTRAINT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun constraintName ()Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Ljava/util/List;
	public fun symbolPrimitive (I)Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ConstraintNameContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$CountAllContext : org/partiql/parser/antlr/PartiQLParser$AggregateContext {
	public field func Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$AggregateContext;)V
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COUNT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$CreateCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$CreateCommandContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$CreateIndexContext : org/partiql/parser/antlr/PartiQLParser$CreateCommandContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$CreateCommandContext;)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CREATE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INDEX ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun pathSimple ()Ljava/util/List;
	public fun pathSimple (I)Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$CreateTableContext : org/partiql/parser/antlr/PartiQLParser$CreateCommandContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$CreateCommandContext;)V
	public fun CREATE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TABLE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun qualifiedName ()Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;
	public fun tableDef ()Lorg/partiql/parser/antlr/PartiQLParser$TableDefContext;
}

public class org/partiql/parser/antlr/PartiQLParser$DateFunctionContext : org/antlr/v4/runtime/ParserRuleContext {
	public field dt Lorg/antlr/v4/runtime/Token;
	public field func Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DATE_ADD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DATE_DIFF ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun IDENTIFIER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$DdlContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun createCommand ()Lorg/partiql/parser/antlr/PartiQLParser$CreateCommandContext;
	public fun dropCommand ()Lorg/partiql/parser/antlr/PartiQLParser$DropCommandContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$DeleteCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun DELETE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun fromClauseSimple ()Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleContext;
	public fun getRuleIndex ()I
	public fun returningClause ()Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;
	public fun whereClause ()Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;
}

public class org/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun insertStatement ()Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementContext;
	public fun insertStatementLegacy ()Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext;
	public fun removeCommand ()Lorg/partiql/parser/antlr/PartiQLParser$RemoveCommandContext;
	public fun replaceCommand ()Lorg/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext;
	public fun setCommand ()Lorg/partiql/parser/antlr/PartiQLParser$SetCommandContext;
	public fun upsertCommand ()Lorg/partiql/parser/antlr/PartiQLParser$UpsertCommandContext;
}

public class org/partiql/parser/antlr/PartiQLParser$DmlBaseContext : org/partiql/parser/antlr/PartiQLParser$DmlContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$DmlContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun dmlBaseCommand ()Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$DmlBaseWrapperContext : org/partiql/parser/antlr/PartiQLParser$DmlContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$DmlContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun dmlBaseCommand ()Ljava/util/List;
	public fun dmlBaseCommand (I)Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun fromClause ()Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;
	public fun returningClause ()Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;
	public fun updateClause ()Lorg/partiql/parser/antlr/PartiQLParser$UpdateClauseContext;
	public fun whereClause ()Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;
}

public class org/partiql/parser/antlr/PartiQLParser$DmlContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$DmlContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$DmlDeleteContext : org/partiql/parser/antlr/PartiQLParser$DmlContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$DmlContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun deleteCommand ()Lorg/partiql/parser/antlr/PartiQLParser$DeleteCommandContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$DmlInsertReturningContext : org/partiql/parser/antlr/PartiQLParser$DmlContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$DmlContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun insertCommandReturning ()Lorg/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext;
}

public class org/partiql/parser/antlr/PartiQLParser$DoReplaceContext : org/antlr/v4/runtime/ParserRuleContext {
	public field condition Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun EXCLUDED ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun WHERE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$DoUpdateContext : org/antlr/v4/runtime/ParserRuleContext {
	public field condition Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun EXCLUDED ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun WHERE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$DqlContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$DropCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$DropCommandContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$DropIndexContext : org/partiql/parser/antlr/PartiQLParser$DropCommandContext {
	public field on Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public field target Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$DropCommandContext;)V
	public fun DROP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INDEX ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Ljava/util/List;
	public fun symbolPrimitive (I)Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$DropTableContext : org/partiql/parser/antlr/PartiQLParser$DropCommandContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$DropCommandContext;)V
	public fun DROP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TABLE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun qualifiedName ()Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun ANGLE_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ANGLE_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MINUS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TILDE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeAbbreviatedContext : org/partiql/parser/antlr/PartiQLParser$EdgeContext {
	public field quantifier Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeAbbrev ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun patternQuantifier ()Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$EdgeContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeSpecBidirectionalContext : org/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;)V
	public fun ANGLE_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ANGLE_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MINUS ()Ljava/util/List;
	public fun MINUS (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeSpecContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COLON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun labelSpec ()Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecContext;
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun whereClause ()Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeSpecLeftContext : org/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;)V
	public fun ANGLE_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MINUS ()Ljava/util/List;
	public fun MINUS (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeSpecRightContext : org/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;)V
	public fun ANGLE_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MINUS ()Ljava/util/List;
	public fun MINUS (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedBidirectionalContext : org/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;)V
	public fun MINUS ()Ljava/util/List;
	public fun MINUS (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedContext : org/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;)V
	public fun TILDE ()Ljava/util/List;
	public fun TILDE (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedLeftContext : org/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;)V
	public fun ANGLE_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TILDE ()Ljava/util/List;
	public fun TILDE (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedRightContext : org/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;)V
	public fun ANGLE_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TILDE ()Ljava/util/List;
	public fun TILDE (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$EdgeWithSpecContext : org/partiql/parser/antlr/PartiQLParser$EdgeContext {
	public field quantifier Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$EdgeContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edgeWSpec ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeWSpecContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun patternQuantifier ()Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExceptContext : org/partiql/parser/antlr/PartiQLParser$ExprBagOpContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;)V
	public fun ALL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DISTINCT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EXCEPT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun OUTER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprBagOp ()Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EXCLUDE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun excludeExpr ()Ljava/util/List;
	public fun excludeExpr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprContext;
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionAttrContext : org/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext {
	public field attr Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext;)V
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_STRING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionIndexContext : org/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext {
	public field index Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext;)V
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionWildcardContext : org/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext;)V
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ExcludeExprContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun excludeExprSteps ()Ljava/util/List;
	public fun excludeExprSteps (I)Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext;
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleAttrContext : org/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext;)V
	public fun PERIOD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleWildcardContext : org/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprStepsContext;)V
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PERIOD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ExecCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public field args Ljava/util/List;
	public field expr Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field name Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EXEC ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExplainOptionContext : org/antlr/v4/runtime/ParserRuleContext {
	public field param Lorg/antlr/v4/runtime/Token;
	public field value Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun IDENTIFIER ()Ljava/util/List;
	public fun IDENTIFIER (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprAndBaseContext : org/partiql/parser/antlr/PartiQLParser$ExprAndContext {
	public field parent Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprNot ()Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExprAndContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprBagOpContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprBagOp ()Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun MATCH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprPrimary ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;
	public fun getRuleIndex ()I
	public fun gpmlPatternList ()Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun MATCH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprPrimary ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;
	public fun getRuleIndex ()I
	public fun gpmlPattern ()Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExprNotBaseContext : org/partiql/parser/antlr/PartiQLParser$ExprNotContext {
	public field parent Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprPredicate ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExprNotContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprOrBaseContext : org/partiql/parser/antlr/PartiQLParser$ExprOrContext {
	public field parent Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprAnd ()Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExprOrContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprPredicateContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprPrimaryBaseContext : org/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun aggregate ()Lorg/partiql/parser/antlr/PartiQLParser$AggregateContext;
	public fun canCast ()Lorg/partiql/parser/antlr/PartiQLParser$CanCastContext;
	public fun canLosslessCast ()Lorg/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext;
	public fun caseExpr ()Lorg/partiql/parser/antlr/PartiQLParser$CaseExprContext;
	public fun cast ()Lorg/partiql/parser/antlr/PartiQLParser$CastContext;
	public fun coalesce ()Lorg/partiql/parser/antlr/PartiQLParser$CoalesceContext;
	public fun dateFunction ()Lorg/partiql/parser/antlr/PartiQLParser$DateFunctionContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprGraphMatchMany ()Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext;
	public fun exprTerm ()Lorg/partiql/parser/antlr/PartiQLParser$ExprTermContext;
	public fun extract ()Lorg/partiql/parser/antlr/PartiQLParser$ExtractContext;
	public fun functionCall ()Lorg/partiql/parser/antlr/PartiQLParser$FunctionCallContext;
	public fun nullIf ()Lorg/partiql/parser/antlr/PartiQLParser$NullIfContext;
	public fun overlay ()Lorg/partiql/parser/antlr/PartiQLParser$OverlayContext;
	public fun position ()Lorg/partiql/parser/antlr/PartiQLParser$PositionContext;
	public fun sequenceConstructor ()Lorg/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext;
	public fun substring ()Lorg/partiql/parser/antlr/PartiQLParser$SubstringContext;
	public fun trimFunction ()Lorg/partiql/parser/antlr/PartiQLParser$TrimFunctionContext;
	public fun valueList ()Lorg/partiql/parser/antlr/PartiQLParser$ValueListContext;
	public fun values ()Lorg/partiql/parser/antlr/PartiQLParser$ValuesContext;
	public fun windowFunction ()Lorg/partiql/parser/antlr/PartiQLParser$WindowFunctionContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprPrimaryPathContext : org/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprPrimary ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;
	public fun pathStep ()Ljava/util/List;
	public fun pathStep (I)Lorg/partiql/parser/antlr/PartiQLParser$PathStepContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExprSelectContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprTermBaseContext : org/partiql/parser/antlr/PartiQLParser$ExprTermContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun collection ()Lorg/partiql/parser/antlr/PartiQLParser$CollectionContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun literal ()Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;
	public fun parameter ()Lorg/partiql/parser/antlr/PartiQLParser$ParameterContext;
	public fun tuple ()Lorg/partiql/parser/antlr/PartiQLParser$TupleContext;
	public fun varRefExpr ()Lorg/partiql/parser/antlr/PartiQLParser$VarRefExprContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExprTermContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ExprTermCurrentDateContext : org/partiql/parser/antlr/PartiQLParser$ExprTermContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermContext;)V
	public fun CURRENT_DATE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ExprTermCurrentUserContext : org/partiql/parser/antlr/PartiQLParser$ExprTermContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermContext;)V
	public fun CURRENT_USER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ExprTermWrappedQueryContext : org/partiql/parser/antlr/PartiQLParser$ExprTermContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermContext;)V
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ExtractContext : org/antlr/v4/runtime/ParserRuleContext {
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun EXTRACT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun FROM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun IDENTIFIER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$FromClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun FROM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun tableReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;
}

public class org/partiql/parser/antlr/PartiQLParser$FromClauseSimpleContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$FromClauseSimpleExplicitContext : org/partiql/parser/antlr/PartiQLParser$FromClauseSimpleContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleContext;)V
	public fun FROM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun asIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;
	public fun atIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;
	public fun byIdent ()Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun pathSimple ()Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;
}

public class org/partiql/parser/antlr/PartiQLParser$FromClauseSimpleImplicitContext : org/partiql/parser/antlr/PartiQLParser$FromClauseSimpleContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleContext;)V
	public fun FROM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun pathSimple ()Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$FunctionCallContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun functionName ()Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$FunctionNameContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$FunctionNameReservedContext : org/partiql/parser/antlr/PartiQLParser$FunctionNameContext {
	public field name Lorg/antlr/v4/runtime/Token;
	public field qualifier Ljava/util/List;
	public field symbolPrimitive Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameContext;)V
	public fun BIT_LENGTH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CHARACTER_LENGTH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CHAR_LENGTH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COUNT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EXISTS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LOWER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MOD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun OCTET_LENGTH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PERIOD ()Ljava/util/List;
	public fun PERIOD (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SIZE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun UPPER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Ljava/util/List;
	public fun symbolPrimitive (I)Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$FunctionNameSymbolContext : org/partiql/parser/antlr/PartiQLParser$FunctionNameContext {
	public field name Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public field qualifier Ljava/util/List;
	public field symbolPrimitive Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameContext;)V
	public fun PERIOD ()Ljava/util/List;
	public fun PERIOD (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Ljava/util/List;
	public fun symbolPrimitive (I)Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$GpmlPatternContext : org/antlr/v4/runtime/ParserRuleContext {
	public field selector Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun matchPattern ()Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;
	public fun matchSelector ()Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;
}

public class org/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext : org/antlr/v4/runtime/ParserRuleContext {
	public field selector Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun matchPattern ()Ljava/util/List;
	public fun matchPattern (I)Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;
	public fun matchSelector ()Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;
}

public class org/partiql/parser/antlr/PartiQLParser$GraphPartContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun edge ()Lorg/partiql/parser/antlr/PartiQLParser$EdgeContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun node ()Lorg/partiql/parser/antlr/PartiQLParser$NodeContext;
	public fun pattern ()Lorg/partiql/parser/antlr/PartiQLParser$PatternContext;
}

public class org/partiql/parser/antlr/PartiQLParser$GroupAliasContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun GROUP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$GroupClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun GROUP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PARTIAL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun groupAlias ()Lorg/partiql/parser/antlr/PartiQLParser$GroupAliasContext;
	public fun groupKey ()Ljava/util/List;
	public fun groupKey (I)Lorg/partiql/parser/antlr/PartiQLParser$GroupKeyContext;
}

public class org/partiql/parser/antlr/PartiQLParser$GroupKeyContext : org/antlr/v4/runtime/ParserRuleContext {
	public field key Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$HavingClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public field arg Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun HAVING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext : org/antlr/v4/runtime/ParserRuleContext {
	public field pos Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field value Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INSERT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INTO ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun VALUE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun onConflictLegacy ()Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;
	public fun pathSimple ()Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;
	public fun returningClause ()Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;
}

public class org/partiql/parser/antlr/PartiQLParser$InsertStatementContext : org/antlr/v4/runtime/ParserRuleContext {
	public field value Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun INSERT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INTO ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun asIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun onConflict ()Lorg/partiql/parser/antlr/PartiQLParser$OnConflictContext;
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext : org/antlr/v4/runtime/ParserRuleContext {
	public field pos Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field value Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INSERT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INTO ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun VALUE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun onConflictLegacy ()Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;
	public fun pathSimple ()Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;
}

public class org/partiql/parser/antlr/PartiQLParser$IntersectContext : org/partiql/parser/antlr/PartiQLParser$ExprBagOpContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;)V
	public fun ALL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DISTINCT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INTERSECT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun OUTER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprBagOp ()Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
}

public class org/partiql/parser/antlr/PartiQLParser$JoinRhsBaseContext : org/partiql/parser/antlr/PartiQLParser$JoinRhsContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun tableNonJoin ()Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;
}

public class org/partiql/parser/antlr/PartiQLParser$JoinRhsContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$JoinRhsTableJoinedContext : org/partiql/parser/antlr/PartiQLParser$JoinRhsContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsContext;)V
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun tableReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;
}

public class org/partiql/parser/antlr/PartiQLParser$JoinSpecContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun ON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$JoinTypeContext : org/antlr/v4/runtime/ParserRuleContext {
	public field mod Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun FULL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INNER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun OUTER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$LabelFactorContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$LabelFactorNotContext : org/partiql/parser/antlr/PartiQLParser$LabelFactorContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorContext;)V
	public fun BANG ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun labelPrimary ()Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LabelFactorPrimaryContext : org/partiql/parser/antlr/PartiQLParser$LabelFactorContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun labelPrimary ()Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$LabelPrimaryNameContext : org/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LabelPrimaryParenContext : org/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext;)V
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun labelSpec ()Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LabelPrimaryWildContext : org/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryContext;)V
	public fun PERCENT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LabelSpecContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$LabelSpecOrContext : org/partiql/parser/antlr/PartiQLParser$LabelSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecContext;)V
	public fun VERTBAR ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun labelSpec ()Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecContext;
	public fun labelTerm ()Lorg/partiql/parser/antlr/PartiQLParser$LabelTermContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LabelSpecTermContext : org/partiql/parser/antlr/PartiQLParser$LabelSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun labelTerm ()Lorg/partiql/parser/antlr/PartiQLParser$LabelTermContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LabelTermAndContext : org/partiql/parser/antlr/PartiQLParser$LabelTermContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermContext;)V
	public fun AMPERSAND ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun labelFactor ()Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorContext;
	public fun labelTerm ()Lorg/partiql/parser/antlr/PartiQLParser$LabelTermContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LabelTermContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$LabelTermFactorContext : org/partiql/parser/antlr/PartiQLParser$LabelTermContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun labelFactor ()Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LagLeadFunctionContext : org/partiql/parser/antlr/PartiQLParser$WindowFunctionContext {
	public field func Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$WindowFunctionContext;)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LAG ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LEAD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun over ()Lorg/partiql/parser/antlr/PartiQLParser$OverContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LetBindingContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LetClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LET ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun letBinding ()Ljava/util/List;
	public fun letBinding (I)Lorg/partiql/parser/antlr/PartiQLParser$LetBindingContext;
}

public class org/partiql/parser/antlr/PartiQLParser$LimitClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public field arg Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun LIMIT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralDateContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun DATE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_STRING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralDecimalContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun LITERAL_DECIMAL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralFalseContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun FALSE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralIntegerContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralIonContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun ION_CLOSURE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralMissingContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun MISSING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralNullContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun NULL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralStringContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun LITERAL_STRING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralTimeContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_STRING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TIME ()Ljava/util/List;
	public fun TIME (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun WITH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ZONE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralTimestampContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_STRING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TIME ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TIMESTAMP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun WITH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ZONE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$LiteralTrueContext : org/partiql/parser/antlr/PartiQLParser$LiteralContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;)V
	public fun TRUE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$MatchPatternContext : org/antlr/v4/runtime/ParserRuleContext {
	public field restrictor Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;
	public field variable Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun graphPart ()Ljava/util/List;
	public fun graphPart (I)Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;
	public fun patternPathVariable ()Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;
	public fun patternRestrictor ()Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;
}

public class org/partiql/parser/antlr/PartiQLParser$MatchSelectorContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$MathOp00Context : org/antlr/v4/runtime/ParserRuleContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public field op Lorg/antlr/v4/runtime/Token;
	public field parent Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AMPERSAND ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CONCAT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun mathOp00 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public fun mathOp01 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;
}

public class org/partiql/parser/antlr/PartiQLParser$MathOp01Context : org/antlr/v4/runtime/ParserRuleContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;
	public field op Lorg/antlr/v4/runtime/Token;
	public field parent Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun MINUS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PLUS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun mathOp01 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;
	public fun mathOp02 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;
}

public class org/partiql/parser/antlr/PartiQLParser$MathOp02Context : org/antlr/v4/runtime/ParserRuleContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;
	public field op Lorg/antlr/v4/runtime/Token;
	public field parent Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PERCENT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SLASH_FORWARD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun mathOp02 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;
	public fun valueExpr ()Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;
}

public class org/partiql/parser/antlr/PartiQLParser$NodeContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COLON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun labelSpec ()Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecContext;
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun whereClause ()Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;
}

public class org/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun EXCLUDED ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$NotContext : org/partiql/parser/antlr/PartiQLParser$ExprNotContext {
	public field op Lorg/antlr/v4/runtime/Token;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;)V
	public fun NOT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprNot ()Lorg/partiql/parser/antlr/PartiQLParser$ExprNotContext;
}

public class org/partiql/parser/antlr/PartiQLParser$NullIfContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NULLIF ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public field arg Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun OFFSET ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$OnConflictContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun CONFLICT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun conflictAction ()Lorg/partiql/parser/antlr/PartiQLParser$ConflictActionContext;
	public fun conflictTarget ()Lorg/partiql/parser/antlr/PartiQLParser$ConflictTargetContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun CONFLICT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DO ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NOTHING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun WHERE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$OrContext : org/partiql/parser/antlr/PartiQLParser$ExprOrContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprOrContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrContext;)V
	public fun OR ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprAnd ()Lorg/partiql/parser/antlr/PartiQLParser$ExprAndContext;
	public fun exprOr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprOrContext;
}

public class org/partiql/parser/antlr/PartiQLParser$OrderByClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ORDER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun orderSortSpec ()Ljava/util/List;
	public fun orderSortSpec (I)Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;
}

public class org/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext : org/antlr/v4/runtime/ParserRuleContext {
	public field dir Lorg/antlr/v4/runtime/Token;
	public field nulls Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun ASC ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DESC ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun FIRST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LAST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NULLS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$OverContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun OVER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun windowPartitionList ()Lorg/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext;
	public fun windowSortSpecList ()Lorg/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext;
}

public class org/partiql/parser/antlr/PartiQLParser$OverlayContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun FOR ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun FROM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun OVERLAY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PLACING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$PairContext : org/antlr/v4/runtime/ParserRuleContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COLON ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ParameterContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun QUESTION_MARK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$PathSimpleContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun pathSimpleSteps ()Ljava/util/List;
	public fun pathSimpleSteps (I)Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext;
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PathSimpleDotSymbolContext : org/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext {
	public field key Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext;)V
	public fun PERIOD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PathSimpleLiteralContext : org/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext {
	public field key Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext;)V
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun literal ()Lorg/partiql/parser/antlr/PartiQLParser$LiteralContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$PathSimpleSymbolContext : org/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext {
	public field key Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleStepsContext;)V
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PathStepContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$PathStepContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$PathStepDotAllContext : org/partiql/parser/antlr/PartiQLParser$PathStepContext {
	public field all Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$PathStepContext;)V
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PERIOD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$PathStepDotExprContext : org/partiql/parser/antlr/PartiQLParser$PathStepContext {
	public field key Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$PathStepContext;)V
	public fun PERIOD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PathStepIndexAllContext : org/partiql/parser/antlr/PartiQLParser$PathStepContext {
	public field all Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$PathStepContext;)V
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$PathStepIndexExprContext : org/partiql/parser/antlr/PartiQLParser$PathStepContext {
	public field key Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$PathStepContext;)V
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PatternContext : org/antlr/v4/runtime/ParserRuleContext {
	public field quantifier Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;
	public field restrictor Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;
	public field variable Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;
	public field where Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BRACKET_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACKET_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun graphPart ()Ljava/util/List;
	public fun graphPart (I)Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;
	public fun patternPathVariable ()Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;
	public fun patternQuantifier ()Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;
	public fun patternRestrictor ()Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;
	public fun whereClause ()Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun EQ ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext : org/antlr/v4/runtime/ParserRuleContext {
	public field lower Lorg/antlr/v4/runtime/Token;
	public field quant Lorg/antlr/v4/runtime/Token;
	public field upper Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACE_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACE_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_INTEGER ()Ljava/util/List;
	public fun LITERAL_INTEGER (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PLUS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext : org/antlr/v4/runtime/ParserRuleContext {
	public field restrictor Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun IDENTIFIER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$PositionContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun IN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun POSITION ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$PredicateBaseContext : org/partiql/parser/antlr/PartiQLParser$ExprPredicateContext {
	public field parent Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun mathOp00 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
}

public class org/partiql/parser/antlr/PartiQLParser$PredicateBetweenContext : org/partiql/parser/antlr/PartiQLParser$ExprPredicateContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public field lower Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public field upper Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;)V
	public fun AND ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BETWEEN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NOT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprPredicate ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public fun mathOp00 ()Ljava/util/List;
	public fun mathOp00 (I)Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
}

public class org/partiql/parser/antlr/PartiQLParser$PredicateComparisonContext : org/partiql/parser/antlr/PartiQLParser$ExprPredicateContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public field op Lorg/antlr/v4/runtime/Token;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;)V
	public fun ANGLE_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ANGLE_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EQ ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun GT_EQ ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LT_EQ ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NEQ ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprPredicate ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public fun mathOp00 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
}

public class org/partiql/parser/antlr/PartiQLParser$PredicateInContext : org/partiql/parser/antlr/PartiQLParser$ExprPredicateContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;)V
	public fun IN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NOT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun exprPredicate ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public fun mathOp00 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
}

public class org/partiql/parser/antlr/PartiQLParser$PredicateIsContext : org/partiql/parser/antlr/PartiQLParser$ExprPredicateContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;)V
	public fun IS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NOT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprPredicate ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public fun type ()Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;
}

public class org/partiql/parser/antlr/PartiQLParser$PredicateLikeContext : org/partiql/parser/antlr/PartiQLParser$ExprPredicateContext {
	public field escape Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;)V
	public fun ESCAPE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LIKE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NOT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun exprPredicate ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPredicateContext;
	public fun mathOp00 ()Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;
}

public class org/partiql/parser/antlr/PartiQLParser$PrimaryKeyContext : org/partiql/parser/antlr/PartiQLParser$UniqueSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$UniqueSpecContext;)V
	public fun KEY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PRIMARY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$ProjectionItemContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun AS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun projectionItem ()Ljava/util/List;
	public fun projectionItem (I)Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemContext;
}

public class org/partiql/parser/antlr/PartiQLParser$QualifiedNameContext : org/antlr/v4/runtime/ParserRuleContext {
	public field name Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public field qualifier Ljava/util/List;
	public field symbolPrimitive Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun PERIOD ()Ljava/util/List;
	public fun PERIOD (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Ljava/util/List;
	public fun symbolPrimitive (I)Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$QueryBaseContext : org/partiql/parser/antlr/PartiQLParser$ExprBagOpContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
}

public class org/partiql/parser/antlr/PartiQLParser$QueryDdlContext : org/partiql/parser/antlr/PartiQLParser$StatementContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$StatementContext;)V
	public fun COLON_SEMI ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EOF ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun ddl ()Lorg/partiql/parser/antlr/PartiQLParser$DdlContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$QueryDmlContext : org/partiql/parser/antlr/PartiQLParser$StatementContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$StatementContext;)V
	public fun COLON_SEMI ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EOF ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun dml ()Lorg/partiql/parser/antlr/PartiQLParser$DmlContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$QueryDqlContext : org/partiql/parser/antlr/PartiQLParser$StatementContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$StatementContext;)V
	public fun COLON_SEMI ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EOF ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun dql ()Lorg/partiql/parser/antlr/PartiQLParser$DqlContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$QueryExecContext : org/partiql/parser/antlr/PartiQLParser$StatementContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$StatementContext;)V
	public fun COLON_SEMI ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EOF ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun execCommand ()Lorg/partiql/parser/antlr/PartiQLParser$ExecCommandContext;
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$RemoveCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun REMOVE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun pathSimple ()Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public field value Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun INTO ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun REPLACE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun asIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ReturningClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun RETURNING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun returningColumn ()Ljava/util/List;
	public fun returningColumn (I)Lorg/partiql/parser/antlr/PartiQLParser$ReturningColumnContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ReturningColumnContext : org/antlr/v4/runtime/ParserRuleContext {
	public field age Lorg/antlr/v4/runtime/Token;
	public field col Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field status Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun ALL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MODIFIED ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NEW ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun OLD ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$RootContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun EXPLAIN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun explainOption ()Ljava/util/List;
	public fun explainOption (I)Lorg/partiql/parser/antlr/PartiQLParser$ExplainOptionContext;
	public fun getRuleIndex ()I
	public fun statement ()Lorg/partiql/parser/antlr/PartiQLParser$StatementContext;
}

public class org/partiql/parser/antlr/PartiQLParser$SearchConditionContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprOr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprOrContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$SelectAllContext : org/partiql/parser/antlr/PartiQLParser$SelectClauseContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$SelectClauseContext;)V
	public fun ASTERISK ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SELECT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun setQuantifierStrategy ()Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;
}

public class org/partiql/parser/antlr/PartiQLParser$SelectClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$SelectClauseContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$SelectItemsContext : org/partiql/parser/antlr/PartiQLParser$SelectClauseContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$SelectClauseContext;)V
	public fun SELECT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun projectionItems ()Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext;
	public fun setQuantifierStrategy ()Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;
}

public class org/partiql/parser/antlr/PartiQLParser$SelectPivotContext : org/partiql/parser/antlr/PartiQLParser$SelectClauseContext {
	public field at Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field pivot Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$SelectClauseContext;)V
	public fun AT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PIVOT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
}

public class org/partiql/parser/antlr/PartiQLParser$SelectValueContext : org/partiql/parser/antlr/PartiQLParser$SelectClauseContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$SelectClauseContext;)V
	public fun SELECT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun VALUE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun setQuantifierStrategy ()Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;
}

public class org/partiql/parser/antlr/PartiQLParser$SelectorAnyContext : org/partiql/parser/antlr/PartiQLParser$MatchSelectorContext {
	public field k Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;)V
	public fun ANY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$SelectorBasicContext : org/partiql/parser/antlr/PartiQLParser$MatchSelectorContext {
	public field mod Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;)V
	public fun ALL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ANY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SHORTEST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$SelectorShortestContext : org/partiql/parser/antlr/PartiQLParser$MatchSelectorContext {
	public field k Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$MatchSelectorContext;)V
	public fun GROUP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SHORTEST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext : org/antlr/v4/runtime/ParserRuleContext {
	public field datatype Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LIST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SEXP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$SetAssignmentContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun EQ ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun pathSimple ()Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;
}

public class org/partiql/parser/antlr/PartiQLParser$SetCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SET ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun setAssignment ()Ljava/util/List;
	public fun setAssignment (I)Lorg/partiql/parser/antlr/PartiQLParser$SetAssignmentContext;
}

public class org/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun ALL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DISTINCT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$SfwBaseContext : org/partiql/parser/antlr/PartiQLParser$ExprSelectContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprOr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprOrContext;
}

public class org/partiql/parser/antlr/PartiQLParser$SfwQueryContext : org/partiql/parser/antlr/PartiQLParser$ExprSelectContext {
	public field exclude Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;
	public field from Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;
	public field group Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;
	public field having Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;
	public field let Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;
	public field limit Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;
	public field offset Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;
	public field order Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;
	public field select Lorg/partiql/parser/antlr/PartiQLParser$SelectClauseContext;
	public field where Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun excludeClause ()Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun fromClause ()Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;
	public fun groupClause ()Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;
	public fun havingClause ()Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;
	public fun letClause ()Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;
	public fun limitClause ()Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;
	public fun offsetByClause ()Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;
	public fun orderByClause ()Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;
	public fun selectClause ()Lorg/partiql/parser/antlr/PartiQLParser$SelectClauseContext;
	public fun whereClauseSelect ()Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;
}

public class org/partiql/parser/antlr/PartiQLParser$StatementContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$StatementContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$SubstringContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun FOR ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun FROM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SUBSTRING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext : org/antlr/v4/runtime/ParserRuleContext {
	public field ident Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun IDENTIFIER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun IDENTIFIER_QUOTED ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$TableBaseRefClausesContext : org/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext {
	public field source Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun asIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;
	public fun atIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;
	public fun byIdent ()Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableBaseRefMatchContext : org/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext {
	public field source Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun asIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;
	public fun atIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;
	public fun byIdent ()Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprGraphMatchOne ()Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableBaseRefSymbolContext : org/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext {
	public field source Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$TableConstrCheckContext : org/partiql/parser/antlr/PartiQLParser$TableConstraintDefContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableConstraintDefContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun checkConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$TableConstrDeclarationContext : org/partiql/parser/antlr/PartiQLParser$TableDefPartContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableDefPartContext;)V
	public fun CONSTRAINT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun constraintName ()Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun tableConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$TableConstraintDefContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableConstrUniqueContext : org/partiql/parser/antlr/PartiQLParser$TableConstraintDefContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableConstraintDefContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun uniqueConstraintDef ()Lorg/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableConstraintDefContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$TableConstraintDefContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$TableCrossJoinContext : org/partiql/parser/antlr/PartiQLParser$TableReferenceContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;)V
	public fun COMMA ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CROSS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun JOIN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun joinRhs ()Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsContext;
	public fun joinType ()Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;
	public fun tableReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableDefContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun tableDefPart ()Ljava/util/List;
	public fun tableDefPart (I)Lorg/partiql/parser/antlr/PartiQLParser$TableDefPartContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableDefPartContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$TableDefPartContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$TableNameContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableNonJoinContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun tableBaseReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext;
	public fun tableUnpivot ()Lorg/partiql/parser/antlr/PartiQLParser$TableUnpivotContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableQualifiedJoinContext : org/partiql/parser/antlr/PartiQLParser$TableReferenceContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;)V
	public fun JOIN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun joinRhs ()Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsContext;
	public fun joinSpec ()Lorg/partiql/parser/antlr/PartiQLParser$JoinSpecContext;
	public fun joinType ()Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;
	public fun tableReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableRefBaseContext : org/partiql/parser/antlr/PartiQLParser$TableReferenceContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun tableNonJoin ()Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TableReferenceContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$TableUnpivotContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun UNPIVOT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun asIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;
	public fun atIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;
	public fun byIdent ()Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$TableWrappedContext : org/partiql/parser/antlr/PartiQLParser$TableReferenceContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;)V
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun tableReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableReferenceContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TrimFunctionContext : org/antlr/v4/runtime/ParserRuleContext {
	public field func Lorg/antlr/v4/runtime/Token;
	public field mod Lorg/antlr/v4/runtime/Token;
	public field sub Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public field target Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun FROM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun IDENTIFIER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TRIM ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$TupleContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BRACE_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BRACE_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun pair ()Ljava/util/List;
	public fun pair (I)Lorg/partiql/parser/antlr/PartiQLParser$PairContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TypeArgDoubleContext : org/partiql/parser/antlr/PartiQLParser$TypeContext {
	public field arg0 Lorg/antlr/v4/runtime/Token;
	public field arg1 Lorg/antlr/v4/runtime/Token;
	public field datatype Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;)V
	public fun COMMA ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DEC ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DECIMAL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_INTEGER ()Ljava/util/List;
	public fun LITERAL_INTEGER (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NUMERIC ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$TypeArgSingleContext : org/partiql/parser/antlr/PartiQLParser$TypeContext {
	public field arg0 Lorg/antlr/v4/runtime/Token;
	public field datatype Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;)V
	public fun CHAR ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CHARACTER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun FLOAT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun VARCHAR ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$TypeAtomicContext : org/partiql/parser/antlr/PartiQLParser$TypeContext {
	public field datatype Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;)V
	public fun ANY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BAG ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BIGINT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BLOB ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BOOL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun BOOLEAN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CHAR ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CHARACTER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun CLOB ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DATE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DOUBLE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INT2 ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INT4 ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INT8 ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INTEGER2 ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INTEGER4 ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun INTEGER8 ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LIST ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun MISSING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun NULL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PRECISION ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun REAL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SEXP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SMALLINT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun STRING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun STRUCT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun SYMBOL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TUPLE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$TypeContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$TypeCustomContext : org/partiql/parser/antlr/PartiQLParser$TypeContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;)V
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$TypeTimeZoneContext : org/partiql/parser/antlr/PartiQLParser$TypeContext {
	public field datatype Lorg/antlr/v4/runtime/Token;
	public field precision Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;)V
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TIME ()Ljava/util/List;
	public fun TIME (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun TIMESTAMP ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun WITH ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ZONE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$TypeVarCharContext : org/partiql/parser/antlr/PartiQLParser$TypeContext {
	public field arg0 Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$TypeContext;)V
	public fun CHARACTER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun LITERAL_INTEGER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun VARYING ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$UnionContext : org/partiql/parser/antlr/PartiQLParser$ExprBagOpContext {
	public field lhs Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;)V
	public fun ALL ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun DISTINCT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun OUTER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun UNION ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprBagOp ()Lorg/partiql/parser/antlr/PartiQLParser$ExprBagOpContext;
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
}

public class org/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun columnName ()Ljava/util/List;
	public fun columnName (I)Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun uniqueSpec ()Lorg/partiql/parser/antlr/PartiQLParser$UniqueSpecContext;
}

public class org/partiql/parser/antlr/PartiQLParser$UniqueContext : org/partiql/parser/antlr/PartiQLParser$UniqueSpecContext {
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$UniqueSpecContext;)V
	public fun UNIQUE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$UniqueSpecContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$UniqueSpecContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$UpdateClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun UPDATE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun tableBaseReference ()Lorg/partiql/parser/antlr/PartiQLParser$TableBaseReferenceContext;
}

public class org/partiql/parser/antlr/PartiQLParser$UpsertCommandContext : org/antlr/v4/runtime/ParserRuleContext {
	public field value Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun INTO ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun UPSERT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun asIdent ()Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
	public fun symbolPrimitive ()Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ValueExprContext : org/antlr/v4/runtime/ParserRuleContext {
	public field parent Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;
	public field rhs Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;
	public field sign Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun MINUS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PLUS ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprPrimary ()Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryContext;
	public fun getRuleIndex ()I
	public fun valueExpr ()Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;
}

public class org/partiql/parser/antlr/PartiQLParser$ValueListContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ValueRowContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_LEFT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PAREN_RIGHT ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$ValuesContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun VALUES ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun valueRow ()Ljava/util/List;
	public fun valueRow (I)Lorg/partiql/parser/antlr/PartiQLParser$ValueRowContext;
}

public class org/partiql/parser/antlr/PartiQLParser$VarRefExprContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$VarRefExprContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$VariableIdentifierContext : org/partiql/parser/antlr/PartiQLParser$VarRefExprContext {
	public field ident Lorg/antlr/v4/runtime/Token;
	public field qualifier Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$VarRefExprContext;)V
	public fun AT_SIGN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun IDENTIFIER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun IDENTIFIER_QUOTED ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
}

public class org/partiql/parser/antlr/PartiQLParser$VariableKeywordContext : org/partiql/parser/antlr/PartiQLParser$VarRefExprContext {
	public field key Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;
	public field qualifier Lorg/antlr/v4/runtime/Token;
	public fun <init> (Lorg/partiql/parser/antlr/PartiQLParser$VarRefExprContext;)V
	public fun AT_SIGN ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun nonReservedKeywords ()Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;
}

public class org/partiql/parser/antlr/PartiQLParser$WhereClauseContext : org/antlr/v4/runtime/ParserRuleContext {
	public field arg Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun WHERE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext : org/antlr/v4/runtime/ParserRuleContext {
	public field arg Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun WHERE ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exprSelect ()Lorg/partiql/parser/antlr/PartiQLParser$ExprSelectContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$WindowFunctionContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> ()V
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun copyFrom (Lorg/partiql/parser/antlr/PartiQLParser$WindowFunctionContext;)V
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun PARTITION ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun expr ()Ljava/util/List;
	public fun expr (I)Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;
	public fun getRuleIndex ()I
}

public class org/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext : org/antlr/v4/runtime/ParserRuleContext {
	public fun <init> (Lorg/antlr/v4/runtime/ParserRuleContext;I)V
	public fun BY ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun COMMA ()Ljava/util/List;
	public fun COMMA (I)Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun ORDER ()Lorg/antlr/v4/runtime/tree/TerminalNode;
	public fun accept (Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;
	public fun enterRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun exitRule (Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V
	public fun getRuleIndex ()I
	public fun orderSortSpec ()Ljava/util/List;
	public fun orderSortSpec (I)Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;
}

public class org/partiql/parser/antlr/PartiQLTokens : org/antlr/v4/runtime/Lexer {
	public static final field ABSOLUTE I
	public static final field ACTION I
	public static final field ADD I
	public static final field ALL I
	public static final field ALLOCATE I
	public static final field ALTER I
	public static final field AMPERSAND I
	public static final field AND I
	public static final field ANGLE_DOUBLE_LEFT I
	public static final field ANGLE_DOUBLE_RIGHT I
	public static final field ANGLE_LEFT I
	public static final field ANGLE_RIGHT I
	public static final field ANY I
	public static final field ARE I
	public static final field AS I
	public static final field ASC I
	public static final field ASSERTION I
	public static final field ASTERISK I
	public static final field AT I
	public static final field AT_SIGN I
	public static final field AUTHORIZATION I
	public static final field AVG I
	public static final field BACKTICK I
	public static final field BAG I
	public static final field BANG I
	public static final field BEGIN I
	public static final field BETWEEN I
	public static final field BIGINT I
	public static final field BIT I
	public static final field BIT_LENGTH I
	public static final field BLOB I
	public static final field BOOL I
	public static final field BOOLEAN I
	public static final field BRACE_LEFT I
	public static final field BRACE_RIGHT I
	public static final field BRACKET_LEFT I
	public static final field BRACKET_RIGHT I
	public static final field BY I
	public static final field CAN_CAST I
	public static final field CAN_LOSSLESS_CAST I
	public static final field CARET I
	public static final field CASCADE I
	public static final field CASCADED I
	public static final field CASE I
	public static final field CAST I
	public static final field CATALOG I
	public static final field CHAR I
	public static final field CHARACTER I
	public static final field CHARACTER_LENGTH I
	public static final field CHAR_LENGTH I
	public static final field CHECK I
	public static final field CLOB I
	public static final field CLOSE I
	public static final field COALESCE I
	public static final field COLLATE I
	public static final field COLLATION I
	public static final field COLON I
	public static final field COLON_SEMI I
	public static final field COLUMN I
	public static final field COMMA I
	public static final field COMMENT_BLOCK I
	public static final field COMMENT_SINGLE I
	public static final field COMMIT I
	public static final field CONCAT I
	public static final field CONFLICT I
	public static final field CONNECT I
	public static final field CONNECTION I
	public static final field CONSTRAINT I
	public static final field CONSTRAINTS I
	public static final field CONTINUE I
	public static final field CONVERT I
	public static final field CORRESPONDING I
	public static final field COUNT I
	public static final field CREATE I
	public static final field CROSS I
	public static final field CURRENT I
	public static final field CURRENT_DATE I
	public static final field CURRENT_TIME I
	public static final field CURRENT_TIMESTAMP I
	public static final field CURRENT_USER I
	public static final field CURSOR I
	public static final field DATE I
	public static final field DATE_ADD I
	public static final field DATE_DIFF I
	public static final field DEALLOCATE I
	public static final field DEC I
	public static final field DECIMAL I
	public static final field DECLARE I
	public static final field DEFAULT I
	public static final field DEFERRABLE I
	public static final field DEFERRED I
	public static final field DELETE I
	public static final field DESC I
	public static final field DESCRIBE I
	public static final field DESCRIPTOR I
	public static final field DIAGNOSTICS I
	public static final field DISCONNECT I
	public static final field DISTINCT I
	public static final field DO I
	public static final field DOMAIN I
	public static final field DOUBLE I
	public static final field DROP I
	public static final field ELSE I
	public static final field END I
	public static final field END_EXEC I
	public static final field EQ I
	public static final field ESCAPE I
	public static final field EVERY I
	public static final field EXCEPT I
	public static final field EXCEPTION I
	public static final field EXCLUDE I
	public static final field EXCLUDED I
	public static final field EXEC I
	public static final field EXECUTE I
	public static final field EXISTS I
	public static final field EXPLAIN I
	public static final field EXTERNAL I
	public static final field EXTRACT I
	public static final field FALSE I
	public static final field FETCH I
	public static final field FIRST I
	public static final field FLOAT I
	public static final field FOR I
	public static final field FOREIGN I
	public static final field FOUND I
	public static final field FROM I
	public static final field FULL I
	public static final field GET I
	public static final field GLOBAL I
	public static final field GO I
	public static final field GOTO I
	public static final field GRANT I
	public static final field GROUP I
	public static final field GT_EQ I
	public static final field HAVING I
	public static final field IDENTIFIER I
	public static final field IDENTIFIER_QUOTED I
	public static final field IDENTITY I
	public static final field IMMEDIATE I
	public static final field IN I
	public static final field INDEX I
	public static final field INDICATOR I
	public static final field INITIALLY I
	public static final field INNER I
	public static final field INPUT I
	public static final field INSENSITIVE I
	public static final field INSERT I
	public static final field INT I
	public static final field INT2 I
	public static final field INT4 I
	public static final field INT8 I
	public static final field INTEGER I
	public static final field INTEGER2 I
	public static final field INTEGER4 I
	public static final field INTEGER8 I
	public static final field INTERSECT I
	public static final field INTERVAL I
	public static final field INTO I
	public static final field ION I
	public static final field ION_CLOSURE I
	public static final field IS I
	public static final field ISOLATION I
	public static final field JOIN I
	public static final field KEY I
	public static final field LAG I
	public static final field LANGUAGE I
	public static final field LAST I
	public static final field LATERAL I
	public static final field LEAD I
	public static final field LEFT I
	public static final field LET I
	public static final field LEVEL I
	public static final field LIKE I
	public static final field LIMIT I
	public static final field LIST I
	public static final field LITERAL_DECIMAL I
	public static final field LITERAL_INTEGER I
	public static final field LITERAL_STRING I
	public static final field LOCAL I
	public static final field LOWER I
	public static final field LT_EQ I
	public static final field MATCH I
	public static final field MAX I
	public static final field MIN I
	public static final field MINUS I
	public static final field MISSING I
	public static final field MOD I
	public static final field MODIFIED I
	public static final field MODULE I
	public static final field NAMES I
	public static final field NATIONAL I
	public static final field NATURAL I
	public static final field NCHAR I
	public static final field NEQ I
	public static final field NEW I
	public static final field NEXT I
	public static final field NO I
	public static final field NOT I
	public static final field NOTHING I
	public static final field NULL I
	public static final field NULLIF I
	public static final field NULLS I
	public static final field NUMERIC I
	public static final field OCTET_LENGTH I
	public static final field OF I
	public static final field OFFSET I
	public static final field OLD I
	public static final field ON I
	public static final field ONLY I
	public static final field OPEN I
	public static final field OPTION I
	public static final field OR I
	public static final field ORDER I
	public static final field OUTER I
	public static final field OUTPUT I
	public static final field OVER I
	public static final field OVERLAPS I
	public static final field OVERLAY I
	public static final field PAD I
	public static final field PAREN_LEFT I
	public static final field PAREN_RIGHT I
	public static final field PARTIAL I
	public static final field PARTITION I
	public static final field PERCENT I
	public static final field PERIOD I
	public static final field PIVOT I
	public static final field PLACING I
	public static final field PLUS I
	public static final field POSITION I
	public static final field PRECISION I
	public static final field PREPARE I
	public static final field PRESERVE I
	public static final field PRIMARY I
	public static final field PRIOR I
	public static final field PRIVILEGES I
	public static final field PROCEDURE I
	public static final field PUBLIC I
	public static final field QUESTION_MARK I
	public static final field READ I
	public static final field REAL I
	public static final field REFERENCES I
	public static final field RELATIVE I
	public static final field REMOVE I
	public static final field REPLACE I
	public static final field RESTRICT I
	public static final field RETURNING I
	public static final field REVOKE I
	public static final field RIGHT I
	public static final field ROLLBACK I
	public static final field ROWS I
	public static final field SCHEMA I
	public static final field SCROLL I
	public static final field SECTION I
	public static final field SELECT I
	public static final field SESSION I
	public static final field SESSION_USER I
	public static final field SET I
	public static final field SEXP I
	public static final field SHORTEST I
	public static final field SIZE I
	public static final field SLASH_FORWARD I
	public static final field SMALLINT I
	public static final field SOME I
	public static final field SPACE I
	public static final field SQL I
	public static final field SQLCODE I
	public static final field SQLERROR I
	public static final field SQLSTATE I
	public static final field STRING I
	public static final field STRUCT I
	public static final field SUBSTRING I
	public static final field SUM I
	public static final field SYMBOL I
	public static final field SYSTEM_USER I
	public static final field TABLE I
	public static final field TEMPORARY I
	public static final field THEN I
	public static final field TILDE I
	public static final field TIME I
	public static final field TIMESTAMP I
	public static final field TO I
	public static final field TRANSACTION I
	public static final field TRANSLATE I
	public static final field TRANSLATION I
	public static final field TRIM I
	public static final field TRUE I
	public static final field TUPLE I
	public static final field UNION I
	public static final field UNIQUE I
	public static final field UNKNOWN I
	public static final field UNPIVOT I
	public static final field UNRECOGNIZED I
	public static final field UPDATE I
	public static final field UPPER I
	public static final field UPSERT I
	public static final field USAGE I
	public static final field USER I
	public static final field USING I
	public static final field VALUE I
	public static final field VALUES I
	public static final field VARCHAR I
	public static final field VARYING I
	public static final field VERTBAR I
	public static final field VIEW I
	public static final field VOCABULARY Lorg/antlr/v4/runtime/Vocabulary;
	public static final field WHEN I
	public static final field WHENEVER I
	public static final field WHERE I
	public static final field WITH I
	public static final field WORK I
	public static final field WRITE I
	public static final field WS I
	public static final field ZONE I
	public static final field _ATN Lorg/antlr/v4/runtime/atn/ATN;
	protected static final field _decisionToDFA [Lorg/antlr/v4/runtime/dfa/DFA;
	public static final field _serializedATN Ljava/lang/String;
	protected static final field _sharedContextCache Lorg/antlr/v4/runtime/atn/PredictionContextCache;
	public static field channelNames [Ljava/lang/String;
	public static field modeNames [Ljava/lang/String;
	public static final field ruleNames [Ljava/lang/String;
	public static final field tokenNames [Ljava/lang/String;
	public fun <init> (Lorg/antlr/v4/runtime/CharStream;)V
	public fun getATN ()Lorg/antlr/v4/runtime/atn/ATN;
	public fun getChannelNames ()[Ljava/lang/String;
	public fun getGrammarFileName ()Ljava/lang/String;
	public fun getModeNames ()[Ljava/lang/String;
	public fun getRuleNames ()[Ljava/lang/String;
	public fun getSerializedATN ()Ljava/lang/String;
	public fun getTokenNames ()[Ljava/lang/String;
	public fun getVocabulary ()Lorg/antlr/v4/runtime/Vocabulary;
}

public abstract interface class org/partiql/parser/antlr/PartiQLVisitor : org/antlr/v4/runtime/tree/ParseTreeVisitor {
	public abstract fun visitAggregateBase (Lorg/partiql/parser/antlr/PartiQLParser$AggregateBaseContext;)Ljava/lang/Object;
	public abstract fun visitAnd (Lorg/partiql/parser/antlr/PartiQLParser$AndContext;)Ljava/lang/Object;
	public abstract fun visitArray (Lorg/partiql/parser/antlr/PartiQLParser$ArrayContext;)Ljava/lang/Object;
	public abstract fun visitAsIdent (Lorg/partiql/parser/antlr/PartiQLParser$AsIdentContext;)Ljava/lang/Object;
	public abstract fun visitAtIdent (Lorg/partiql/parser/antlr/PartiQLParser$AtIdentContext;)Ljava/lang/Object;
	public abstract fun visitBag (Lorg/partiql/parser/antlr/PartiQLParser$BagContext;)Ljava/lang/Object;
	public abstract fun visitByIdent (Lorg/partiql/parser/antlr/PartiQLParser$ByIdentContext;)Ljava/lang/Object;
	public abstract fun visitCanCast (Lorg/partiql/parser/antlr/PartiQLParser$CanCastContext;)Ljava/lang/Object;
	public abstract fun visitCanLosslessCast (Lorg/partiql/parser/antlr/PartiQLParser$CanLosslessCastContext;)Ljava/lang/Object;
	public abstract fun visitCaseExpr (Lorg/partiql/parser/antlr/PartiQLParser$CaseExprContext;)Ljava/lang/Object;
	public abstract fun visitCast (Lorg/partiql/parser/antlr/PartiQLParser$CastContext;)Ljava/lang/Object;
	public abstract fun visitCheckConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$CheckConstraintDefContext;)Ljava/lang/Object;
	public abstract fun visitCoalesce (Lorg/partiql/parser/antlr/PartiQLParser$CoalesceContext;)Ljava/lang/Object;
	public abstract fun visitColConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrCheckContext;)Ljava/lang/Object;
	public abstract fun visitColConstrNotNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNotNullContext;)Ljava/lang/Object;
	public abstract fun visitColConstrNull (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrNullContext;)Ljava/lang/Object;
	public abstract fun visitColConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$ColConstrUniqueContext;)Ljava/lang/Object;
	public abstract fun visitCollection (Lorg/partiql/parser/antlr/PartiQLParser$CollectionContext;)Ljava/lang/Object;
	public abstract fun visitColumnConstraint (Lorg/partiql/parser/antlr/PartiQLParser$ColumnConstraintContext;)Ljava/lang/Object;
	public abstract fun visitColumnDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$ColumnDeclarationContext;)Ljava/lang/Object;
	public abstract fun visitColumnName (Lorg/partiql/parser/antlr/PartiQLParser$ColumnNameContext;)Ljava/lang/Object;
	public abstract fun visitConflictAction (Lorg/partiql/parser/antlr/PartiQLParser$ConflictActionContext;)Ljava/lang/Object;
	public abstract fun visitConflictTarget (Lorg/partiql/parser/antlr/PartiQLParser$ConflictTargetContext;)Ljava/lang/Object;
	public abstract fun visitConstraintName (Lorg/partiql/parser/antlr/PartiQLParser$ConstraintNameContext;)Ljava/lang/Object;
	public abstract fun visitCountAll (Lorg/partiql/parser/antlr/PartiQLParser$CountAllContext;)Ljava/lang/Object;
	public abstract fun visitCreateIndex (Lorg/partiql/parser/antlr/PartiQLParser$CreateIndexContext;)Ljava/lang/Object;
	public abstract fun visitCreateTable (Lorg/partiql/parser/antlr/PartiQLParser$CreateTableContext;)Ljava/lang/Object;
	public abstract fun visitDateFunction (Lorg/partiql/parser/antlr/PartiQLParser$DateFunctionContext;)Ljava/lang/Object;
	public abstract fun visitDdl (Lorg/partiql/parser/antlr/PartiQLParser$DdlContext;)Ljava/lang/Object;
	public abstract fun visitDeleteCommand (Lorg/partiql/parser/antlr/PartiQLParser$DeleteCommandContext;)Ljava/lang/Object;
	public abstract fun visitDmlBase (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseContext;)Ljava/lang/Object;
	public abstract fun visitDmlBaseCommand (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseCommandContext;)Ljava/lang/Object;
	public abstract fun visitDmlBaseWrapper (Lorg/partiql/parser/antlr/PartiQLParser$DmlBaseWrapperContext;)Ljava/lang/Object;
	public abstract fun visitDmlDelete (Lorg/partiql/parser/antlr/PartiQLParser$DmlDeleteContext;)Ljava/lang/Object;
	public abstract fun visitDmlInsertReturning (Lorg/partiql/parser/antlr/PartiQLParser$DmlInsertReturningContext;)Ljava/lang/Object;
	public abstract fun visitDoReplace (Lorg/partiql/parser/antlr/PartiQLParser$DoReplaceContext;)Ljava/lang/Object;
	public abstract fun visitDoUpdate (Lorg/partiql/parser/antlr/PartiQLParser$DoUpdateContext;)Ljava/lang/Object;
	public abstract fun visitDql (Lorg/partiql/parser/antlr/PartiQLParser$DqlContext;)Ljava/lang/Object;
	public abstract fun visitDropIndex (Lorg/partiql/parser/antlr/PartiQLParser$DropIndexContext;)Ljava/lang/Object;
	public abstract fun visitDropTable (Lorg/partiql/parser/antlr/PartiQLParser$DropTableContext;)Ljava/lang/Object;
	public abstract fun visitEdgeAbbrev (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbrevContext;)Ljava/lang/Object;
	public abstract fun visitEdgeAbbreviated (Lorg/partiql/parser/antlr/PartiQLParser$EdgeAbbreviatedContext;)Ljava/lang/Object;
	public abstract fun visitEdgeSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecContext;)Ljava/lang/Object;
	public abstract fun visitEdgeSpecBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecBidirectionalContext;)Ljava/lang/Object;
	public abstract fun visitEdgeSpecLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecLeftContext;)Ljava/lang/Object;
	public abstract fun visitEdgeSpecRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecRightContext;)Ljava/lang/Object;
	public abstract fun visitEdgeSpecUndirected (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedContext;)Ljava/lang/Object;
	public abstract fun visitEdgeSpecUndirectedBidirectional (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedBidirectionalContext;)Ljava/lang/Object;
	public abstract fun visitEdgeSpecUndirectedLeft (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedLeftContext;)Ljava/lang/Object;
	public abstract fun visitEdgeSpecUndirectedRight (Lorg/partiql/parser/antlr/PartiQLParser$EdgeSpecUndirectedRightContext;)Ljava/lang/Object;
	public abstract fun visitEdgeWithSpec (Lorg/partiql/parser/antlr/PartiQLParser$EdgeWithSpecContext;)Ljava/lang/Object;
	public abstract fun visitExcept (Lorg/partiql/parser/antlr/PartiQLParser$ExceptContext;)Ljava/lang/Object;
	public abstract fun visitExcludeClause (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeClauseContext;)Ljava/lang/Object;
	public abstract fun visitExcludeExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprContext;)Ljava/lang/Object;
	public abstract fun visitExcludeExprCollectionAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionAttrContext;)Ljava/lang/Object;
	public abstract fun visitExcludeExprCollectionIndex (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionIndexContext;)Ljava/lang/Object;
	public abstract fun visitExcludeExprCollectionWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprCollectionWildcardContext;)Ljava/lang/Object;
	public abstract fun visitExcludeExprTupleAttr (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleAttrContext;)Ljava/lang/Object;
	public abstract fun visitExcludeExprTupleWildcard (Lorg/partiql/parser/antlr/PartiQLParser$ExcludeExprTupleWildcardContext;)Ljava/lang/Object;
	public abstract fun visitExecCommand (Lorg/partiql/parser/antlr/PartiQLParser$ExecCommandContext;)Ljava/lang/Object;
	public abstract fun visitExplainOption (Lorg/partiql/parser/antlr/PartiQLParser$ExplainOptionContext;)Ljava/lang/Object;
	public abstract fun visitExpr (Lorg/partiql/parser/antlr/PartiQLParser$ExprContext;)Ljava/lang/Object;
	public abstract fun visitExprAndBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprAndBaseContext;)Ljava/lang/Object;
	public abstract fun visitExprGraphMatchMany (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchManyContext;)Ljava/lang/Object;
	public abstract fun visitExprGraphMatchOne (Lorg/partiql/parser/antlr/PartiQLParser$ExprGraphMatchOneContext;)Ljava/lang/Object;
	public abstract fun visitExprNotBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprNotBaseContext;)Ljava/lang/Object;
	public abstract fun visitExprOrBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprOrBaseContext;)Ljava/lang/Object;
	public abstract fun visitExprPrimaryBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryBaseContext;)Ljava/lang/Object;
	public abstract fun visitExprPrimaryPath (Lorg/partiql/parser/antlr/PartiQLParser$ExprPrimaryPathContext;)Ljava/lang/Object;
	public abstract fun visitExprTermBase (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermBaseContext;)Ljava/lang/Object;
	public abstract fun visitExprTermCurrentDate (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentDateContext;)Ljava/lang/Object;
	public abstract fun visitExprTermCurrentUser (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermCurrentUserContext;)Ljava/lang/Object;
	public abstract fun visitExprTermWrappedQuery (Lorg/partiql/parser/antlr/PartiQLParser$ExprTermWrappedQueryContext;)Ljava/lang/Object;
	public abstract fun visitExtract (Lorg/partiql/parser/antlr/PartiQLParser$ExtractContext;)Ljava/lang/Object;
	public abstract fun visitFromClause (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseContext;)Ljava/lang/Object;
	public abstract fun visitFromClauseSimpleExplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleExplicitContext;)Ljava/lang/Object;
	public abstract fun visitFromClauseSimpleImplicit (Lorg/partiql/parser/antlr/PartiQLParser$FromClauseSimpleImplicitContext;)Ljava/lang/Object;
	public abstract fun visitFunctionCall (Lorg/partiql/parser/antlr/PartiQLParser$FunctionCallContext;)Ljava/lang/Object;
	public abstract fun visitFunctionNameReserved (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameReservedContext;)Ljava/lang/Object;
	public abstract fun visitFunctionNameSymbol (Lorg/partiql/parser/antlr/PartiQLParser$FunctionNameSymbolContext;)Ljava/lang/Object;
	public abstract fun visitGpmlPattern (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternContext;)Ljava/lang/Object;
	public abstract fun visitGpmlPatternList (Lorg/partiql/parser/antlr/PartiQLParser$GpmlPatternListContext;)Ljava/lang/Object;
	public abstract fun visitGraphPart (Lorg/partiql/parser/antlr/PartiQLParser$GraphPartContext;)Ljava/lang/Object;
	public abstract fun visitGroupAlias (Lorg/partiql/parser/antlr/PartiQLParser$GroupAliasContext;)Ljava/lang/Object;
	public abstract fun visitGroupClause (Lorg/partiql/parser/antlr/PartiQLParser$GroupClauseContext;)Ljava/lang/Object;
	public abstract fun visitGroupKey (Lorg/partiql/parser/antlr/PartiQLParser$GroupKeyContext;)Ljava/lang/Object;
	public abstract fun visitHavingClause (Lorg/partiql/parser/antlr/PartiQLParser$HavingClauseContext;)Ljava/lang/Object;
	public abstract fun visitInsertCommandReturning (Lorg/partiql/parser/antlr/PartiQLParser$InsertCommandReturningContext;)Ljava/lang/Object;
	public abstract fun visitInsertStatement (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementContext;)Ljava/lang/Object;
	public abstract fun visitInsertStatementLegacy (Lorg/partiql/parser/antlr/PartiQLParser$InsertStatementLegacyContext;)Ljava/lang/Object;
	public abstract fun visitIntersect (Lorg/partiql/parser/antlr/PartiQLParser$IntersectContext;)Ljava/lang/Object;
	public abstract fun visitJoinRhsBase (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsBaseContext;)Ljava/lang/Object;
	public abstract fun visitJoinRhsTableJoined (Lorg/partiql/parser/antlr/PartiQLParser$JoinRhsTableJoinedContext;)Ljava/lang/Object;
	public abstract fun visitJoinSpec (Lorg/partiql/parser/antlr/PartiQLParser$JoinSpecContext;)Ljava/lang/Object;
	public abstract fun visitJoinType (Lorg/partiql/parser/antlr/PartiQLParser$JoinTypeContext;)Ljava/lang/Object;
	public abstract fun visitLabelFactorNot (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorNotContext;)Ljava/lang/Object;
	public abstract fun visitLabelFactorPrimary (Lorg/partiql/parser/antlr/PartiQLParser$LabelFactorPrimaryContext;)Ljava/lang/Object;
	public abstract fun visitLabelPrimaryName (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryNameContext;)Ljava/lang/Object;
	public abstract fun visitLabelPrimaryParen (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryParenContext;)Ljava/lang/Object;
	public abstract fun visitLabelPrimaryWild (Lorg/partiql/parser/antlr/PartiQLParser$LabelPrimaryWildContext;)Ljava/lang/Object;
	public abstract fun visitLabelSpecOr (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecOrContext;)Ljava/lang/Object;
	public abstract fun visitLabelSpecTerm (Lorg/partiql/parser/antlr/PartiQLParser$LabelSpecTermContext;)Ljava/lang/Object;
	public abstract fun visitLabelTermAnd (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermAndContext;)Ljava/lang/Object;
	public abstract fun visitLabelTermFactor (Lorg/partiql/parser/antlr/PartiQLParser$LabelTermFactorContext;)Ljava/lang/Object;
	public abstract fun visitLagLeadFunction (Lorg/partiql/parser/antlr/PartiQLParser$LagLeadFunctionContext;)Ljava/lang/Object;
	public abstract fun visitLetBinding (Lorg/partiql/parser/antlr/PartiQLParser$LetBindingContext;)Ljava/lang/Object;
	public abstract fun visitLetClause (Lorg/partiql/parser/antlr/PartiQLParser$LetClauseContext;)Ljava/lang/Object;
	public abstract fun visitLimitClause (Lorg/partiql/parser/antlr/PartiQLParser$LimitClauseContext;)Ljava/lang/Object;
	public abstract fun visitLiteralDate (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDateContext;)Ljava/lang/Object;
	public abstract fun visitLiteralDecimal (Lorg/partiql/parser/antlr/PartiQLParser$LiteralDecimalContext;)Ljava/lang/Object;
	public abstract fun visitLiteralFalse (Lorg/partiql/parser/antlr/PartiQLParser$LiteralFalseContext;)Ljava/lang/Object;
	public abstract fun visitLiteralInteger (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIntegerContext;)Ljava/lang/Object;
	public abstract fun visitLiteralIon (Lorg/partiql/parser/antlr/PartiQLParser$LiteralIonContext;)Ljava/lang/Object;
	public abstract fun visitLiteralMissing (Lorg/partiql/parser/antlr/PartiQLParser$LiteralMissingContext;)Ljava/lang/Object;
	public abstract fun visitLiteralNull (Lorg/partiql/parser/antlr/PartiQLParser$LiteralNullContext;)Ljava/lang/Object;
	public abstract fun visitLiteralString (Lorg/partiql/parser/antlr/PartiQLParser$LiteralStringContext;)Ljava/lang/Object;
	public abstract fun visitLiteralTime (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimeContext;)Ljava/lang/Object;
	public abstract fun visitLiteralTimestamp (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTimestampContext;)Ljava/lang/Object;
	public abstract fun visitLiteralTrue (Lorg/partiql/parser/antlr/PartiQLParser$LiteralTrueContext;)Ljava/lang/Object;
	public abstract fun visitMatchPattern (Lorg/partiql/parser/antlr/PartiQLParser$MatchPatternContext;)Ljava/lang/Object;
	public abstract fun visitMathOp00 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp00Context;)Ljava/lang/Object;
	public abstract fun visitMathOp01 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp01Context;)Ljava/lang/Object;
	public abstract fun visitMathOp02 (Lorg/partiql/parser/antlr/PartiQLParser$MathOp02Context;)Ljava/lang/Object;
	public abstract fun visitNode (Lorg/partiql/parser/antlr/PartiQLParser$NodeContext;)Ljava/lang/Object;
	public abstract fun visitNonReservedKeywords (Lorg/partiql/parser/antlr/PartiQLParser$NonReservedKeywordsContext;)Ljava/lang/Object;
	public abstract fun visitNot (Lorg/partiql/parser/antlr/PartiQLParser$NotContext;)Ljava/lang/Object;
	public abstract fun visitNullIf (Lorg/partiql/parser/antlr/PartiQLParser$NullIfContext;)Ljava/lang/Object;
	public abstract fun visitOffsetByClause (Lorg/partiql/parser/antlr/PartiQLParser$OffsetByClauseContext;)Ljava/lang/Object;
	public abstract fun visitOnConflict (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictContext;)Ljava/lang/Object;
	public abstract fun visitOnConflictLegacy (Lorg/partiql/parser/antlr/PartiQLParser$OnConflictLegacyContext;)Ljava/lang/Object;
	public abstract fun visitOr (Lorg/partiql/parser/antlr/PartiQLParser$OrContext;)Ljava/lang/Object;
	public abstract fun visitOrderByClause (Lorg/partiql/parser/antlr/PartiQLParser$OrderByClauseContext;)Ljava/lang/Object;
	public abstract fun visitOrderSortSpec (Lorg/partiql/parser/antlr/PartiQLParser$OrderSortSpecContext;)Ljava/lang/Object;
	public abstract fun visitOver (Lorg/partiql/parser/antlr/PartiQLParser$OverContext;)Ljava/lang/Object;
	public abstract fun visitOverlay (Lorg/partiql/parser/antlr/PartiQLParser$OverlayContext;)Ljava/lang/Object;
	public abstract fun visitPair (Lorg/partiql/parser/antlr/PartiQLParser$PairContext;)Ljava/lang/Object;
	public abstract fun visitParameter (Lorg/partiql/parser/antlr/PartiQLParser$ParameterContext;)Ljava/lang/Object;
	public abstract fun visitPathSimple (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleContext;)Ljava/lang/Object;
	public abstract fun visitPathSimpleDotSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleDotSymbolContext;)Ljava/lang/Object;
	public abstract fun visitPathSimpleLiteral (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleLiteralContext;)Ljava/lang/Object;
	public abstract fun visitPathSimpleSymbol (Lorg/partiql/parser/antlr/PartiQLParser$PathSimpleSymbolContext;)Ljava/lang/Object;
	public abstract fun visitPathStepDotAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotAllContext;)Ljava/lang/Object;
	public abstract fun visitPathStepDotExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepDotExprContext;)Ljava/lang/Object;
	public abstract fun visitPathStepIndexAll (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexAllContext;)Ljava/lang/Object;
	public abstract fun visitPathStepIndexExpr (Lorg/partiql/parser/antlr/PartiQLParser$PathStepIndexExprContext;)Ljava/lang/Object;
	public abstract fun visitPattern (Lorg/partiql/parser/antlr/PartiQLParser$PatternContext;)Ljava/lang/Object;
	public abstract fun visitPatternPathVariable (Lorg/partiql/parser/antlr/PartiQLParser$PatternPathVariableContext;)Ljava/lang/Object;
	public abstract fun visitPatternQuantifier (Lorg/partiql/parser/antlr/PartiQLParser$PatternQuantifierContext;)Ljava/lang/Object;
	public abstract fun visitPatternRestrictor (Lorg/partiql/parser/antlr/PartiQLParser$PatternRestrictorContext;)Ljava/lang/Object;
	public abstract fun visitPosition (Lorg/partiql/parser/antlr/PartiQLParser$PositionContext;)Ljava/lang/Object;
	public abstract fun visitPredicateBase (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBaseContext;)Ljava/lang/Object;
	public abstract fun visitPredicateBetween (Lorg/partiql/parser/antlr/PartiQLParser$PredicateBetweenContext;)Ljava/lang/Object;
	public abstract fun visitPredicateComparison (Lorg/partiql/parser/antlr/PartiQLParser$PredicateComparisonContext;)Ljava/lang/Object;
	public abstract fun visitPredicateIn (Lorg/partiql/parser/antlr/PartiQLParser$PredicateInContext;)Ljava/lang/Object;
	public abstract fun visitPredicateIs (Lorg/partiql/parser/antlr/PartiQLParser$PredicateIsContext;)Ljava/lang/Object;
	public abstract fun visitPredicateLike (Lorg/partiql/parser/antlr/PartiQLParser$PredicateLikeContext;)Ljava/lang/Object;
	public abstract fun visitPrimaryKey (Lorg/partiql/parser/antlr/PartiQLParser$PrimaryKeyContext;)Ljava/lang/Object;
	public abstract fun visitProjectionItem (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemContext;)Ljava/lang/Object;
	public abstract fun visitProjectionItems (Lorg/partiql/parser/antlr/PartiQLParser$ProjectionItemsContext;)Ljava/lang/Object;
	public abstract fun visitQualifiedName (Lorg/partiql/parser/antlr/PartiQLParser$QualifiedNameContext;)Ljava/lang/Object;
	public abstract fun visitQueryBase (Lorg/partiql/parser/antlr/PartiQLParser$QueryBaseContext;)Ljava/lang/Object;
	public abstract fun visitQueryDdl (Lorg/partiql/parser/antlr/PartiQLParser$QueryDdlContext;)Ljava/lang/Object;
	public abstract fun visitQueryDml (Lorg/partiql/parser/antlr/PartiQLParser$QueryDmlContext;)Ljava/lang/Object;
	public abstract fun visitQueryDql (Lorg/partiql/parser/antlr/PartiQLParser$QueryDqlContext;)Ljava/lang/Object;
	public abstract fun visitQueryExec (Lorg/partiql/parser/antlr/PartiQLParser$QueryExecContext;)Ljava/lang/Object;
	public abstract fun visitRemoveCommand (Lorg/partiql/parser/antlr/PartiQLParser$RemoveCommandContext;)Ljava/lang/Object;
	public abstract fun visitReplaceCommand (Lorg/partiql/parser/antlr/PartiQLParser$ReplaceCommandContext;)Ljava/lang/Object;
	public abstract fun visitReturningClause (Lorg/partiql/parser/antlr/PartiQLParser$ReturningClauseContext;)Ljava/lang/Object;
	public abstract fun visitReturningColumn (Lorg/partiql/parser/antlr/PartiQLParser$ReturningColumnContext;)Ljava/lang/Object;
	public abstract fun visitRoot (Lorg/partiql/parser/antlr/PartiQLParser$RootContext;)Ljava/lang/Object;
	public abstract fun visitSearchCondition (Lorg/partiql/parser/antlr/PartiQLParser$SearchConditionContext;)Ljava/lang/Object;
	public abstract fun visitSelectAll (Lorg/partiql/parser/antlr/PartiQLParser$SelectAllContext;)Ljava/lang/Object;
	public abstract fun visitSelectItems (Lorg/partiql/parser/antlr/PartiQLParser$SelectItemsContext;)Ljava/lang/Object;
	public abstract fun visitSelectPivot (Lorg/partiql/parser/antlr/PartiQLParser$SelectPivotContext;)Ljava/lang/Object;
	public abstract fun visitSelectValue (Lorg/partiql/parser/antlr/PartiQLParser$SelectValueContext;)Ljava/lang/Object;
	public abstract fun visitSelectorAny (Lorg/partiql/parser/antlr/PartiQLParser$SelectorAnyContext;)Ljava/lang/Object;
	public abstract fun visitSelectorBasic (Lorg/partiql/parser/antlr/PartiQLParser$SelectorBasicContext;)Ljava/lang/Object;
	public abstract fun visitSelectorShortest (Lorg/partiql/parser/antlr/PartiQLParser$SelectorShortestContext;)Ljava/lang/Object;
	public abstract fun visitSequenceConstructor (Lorg/partiql/parser/antlr/PartiQLParser$SequenceConstructorContext;)Ljava/lang/Object;
	public abstract fun visitSetAssignment (Lorg/partiql/parser/antlr/PartiQLParser$SetAssignmentContext;)Ljava/lang/Object;
	public abstract fun visitSetCommand (Lorg/partiql/parser/antlr/PartiQLParser$SetCommandContext;)Ljava/lang/Object;
	public abstract fun visitSetQuantifierStrategy (Lorg/partiql/parser/antlr/PartiQLParser$SetQuantifierStrategyContext;)Ljava/lang/Object;
	public abstract fun visitSfwBase (Lorg/partiql/parser/antlr/PartiQLParser$SfwBaseContext;)Ljava/lang/Object;
	public abstract fun visitSfwQuery (Lorg/partiql/parser/antlr/PartiQLParser$SfwQueryContext;)Ljava/lang/Object;
	public abstract fun visitSubstring (Lorg/partiql/parser/antlr/PartiQLParser$SubstringContext;)Ljava/lang/Object;
	public abstract fun visitSymbolPrimitive (Lorg/partiql/parser/antlr/PartiQLParser$SymbolPrimitiveContext;)Ljava/lang/Object;
	public abstract fun visitTableBaseRefClauses (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefClausesContext;)Ljava/lang/Object;
	public abstract fun visitTableBaseRefMatch (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefMatchContext;)Ljava/lang/Object;
	public abstract fun visitTableBaseRefSymbol (Lorg/partiql/parser/antlr/PartiQLParser$TableBaseRefSymbolContext;)Ljava/lang/Object;
	public abstract fun visitTableConstrCheck (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrCheckContext;)Ljava/lang/Object;
	public abstract fun visitTableConstrDeclaration (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrDeclarationContext;)Ljava/lang/Object;
	public abstract fun visitTableConstrUnique (Lorg/partiql/parser/antlr/PartiQLParser$TableConstrUniqueContext;)Ljava/lang/Object;
	public abstract fun visitTableCrossJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableCrossJoinContext;)Ljava/lang/Object;
	public abstract fun visitTableDef (Lorg/partiql/parser/antlr/PartiQLParser$TableDefContext;)Ljava/lang/Object;
	public abstract fun visitTableName (Lorg/partiql/parser/antlr/PartiQLParser$TableNameContext;)Ljava/lang/Object;
	public abstract fun visitTableNonJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableNonJoinContext;)Ljava/lang/Object;
	public abstract fun visitTableQualifiedJoin (Lorg/partiql/parser/antlr/PartiQLParser$TableQualifiedJoinContext;)Ljava/lang/Object;
	public abstract fun visitTableRefBase (Lorg/partiql/parser/antlr/PartiQLParser$TableRefBaseContext;)Ljava/lang/Object;
	public abstract fun visitTableUnpivot (Lorg/partiql/parser/antlr/PartiQLParser$TableUnpivotContext;)Ljava/lang/Object;
	public abstract fun visitTableWrapped (Lorg/partiql/parser/antlr/PartiQLParser$TableWrappedContext;)Ljava/lang/Object;
	public abstract fun visitTrimFunction (Lorg/partiql/parser/antlr/PartiQLParser$TrimFunctionContext;)Ljava/lang/Object;
	public abstract fun visitTuple (Lorg/partiql/parser/antlr/PartiQLParser$TupleContext;)Ljava/lang/Object;
	public abstract fun visitTypeArgDouble (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgDoubleContext;)Ljava/lang/Object;
	public abstract fun visitTypeArgSingle (Lorg/partiql/parser/antlr/PartiQLParser$TypeArgSingleContext;)Ljava/lang/Object;
	public abstract fun visitTypeAtomic (Lorg/partiql/parser/antlr/PartiQLParser$TypeAtomicContext;)Ljava/lang/Object;
	public abstract fun visitTypeCustom (Lorg/partiql/parser/antlr/PartiQLParser$TypeCustomContext;)Ljava/lang/Object;
	public abstract fun visitTypeTimeZone (Lorg/partiql/parser/antlr/PartiQLParser$TypeTimeZoneContext;)Ljava/lang/Object;
	public abstract fun visitTypeVarChar (Lorg/partiql/parser/antlr/PartiQLParser$TypeVarCharContext;)Ljava/lang/Object;
	public abstract fun visitUnion (Lorg/partiql/parser/antlr/PartiQLParser$UnionContext;)Ljava/lang/Object;
	public abstract fun visitUnique (Lorg/partiql/parser/antlr/PartiQLParser$UniqueContext;)Ljava/lang/Object;
	public abstract fun visitUniqueConstraintDef (Lorg/partiql/parser/antlr/PartiQLParser$UniqueConstraintDefContext;)Ljava/lang/Object;
	public abstract fun visitUpdateClause (Lorg/partiql/parser/antlr/PartiQLParser$UpdateClauseContext;)Ljava/lang/Object;
	public abstract fun visitUpsertCommand (Lorg/partiql/parser/antlr/PartiQLParser$UpsertCommandContext;)Ljava/lang/Object;
	public abstract fun visitValueExpr (Lorg/partiql/parser/antlr/PartiQLParser$ValueExprContext;)Ljava/lang/Object;
	public abstract fun visitValueList (Lorg/partiql/parser/antlr/PartiQLParser$ValueListContext;)Ljava/lang/Object;
	public abstract fun visitValueRow (Lorg/partiql/parser/antlr/PartiQLParser$ValueRowContext;)Ljava/lang/Object;
	public abstract fun visitValues (Lorg/partiql/parser/antlr/PartiQLParser$ValuesContext;)Ljava/lang/Object;
	public abstract fun visitVariableIdentifier (Lorg/partiql/parser/antlr/PartiQLParser$VariableIdentifierContext;)Ljava/lang/Object;
	public abstract fun visitVariableKeyword (Lorg/partiql/parser/antlr/PartiQLParser$VariableKeywordContext;)Ljava/lang/Object;
	public abstract fun visitWhereClause (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseContext;)Ljava/lang/Object;
	public abstract fun visitWhereClauseSelect (Lorg/partiql/parser/antlr/PartiQLParser$WhereClauseSelectContext;)Ljava/lang/Object;
	public abstract fun visitWindowPartitionList (Lorg/partiql/parser/antlr/PartiQLParser$WindowPartitionListContext;)Ljava/lang/Object;
	public abstract fun visitWindowSortSpecList (Lorg/partiql/parser/antlr/PartiQLParser$WindowSortSpecListContext;)Ljava/lang/Object;
}

