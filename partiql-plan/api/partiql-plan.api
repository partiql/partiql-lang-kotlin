public final class org/partiql/plan/Catalog : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Catalog$Companion;
	public final field items Ljava/util/List;
	public final field name Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/CatalogBuilder;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Catalog;
	public static synthetic fun copy$default (Lorg/partiql/plan/Catalog;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Catalog;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Catalog$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/CatalogBuilder;
}

public abstract class org/partiql/plan/Catalog$Item : org/partiql/plan/PlanNode {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/Catalog$Item$Agg : org/partiql/plan/Catalog$Item {
	public static final field Companion Lorg/partiql/plan/Catalog$Item$Agg$Companion;
	public final field path Ljava/util/List;
	public final field specific Ljava/lang/String;
	public fun <init> (Ljava/util/List;Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/CatalogItemAggBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/util/List;Ljava/lang/String;)Lorg/partiql/plan/Catalog$Item$Agg;
	public static synthetic fun copy$default (Lorg/partiql/plan/Catalog$Item$Agg;Ljava/util/List;Ljava/lang/String;ILjava/lang/Object;)Lorg/partiql/plan/Catalog$Item$Agg;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Catalog$Item$Agg$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/CatalogItemAggBuilder;
}

public final class org/partiql/plan/Catalog$Item$Fn : org/partiql/plan/Catalog$Item {
	public static final field Companion Lorg/partiql/plan/Catalog$Item$Fn$Companion;
	public final field path Ljava/util/List;
	public final field specific Ljava/lang/String;
	public fun <init> (Ljava/util/List;Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/CatalogItemFnBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/util/List;Ljava/lang/String;)Lorg/partiql/plan/Catalog$Item$Fn;
	public static synthetic fun copy$default (Lorg/partiql/plan/Catalog$Item$Fn;Ljava/util/List;Ljava/lang/String;ILjava/lang/Object;)Lorg/partiql/plan/Catalog$Item$Fn;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Catalog$Item$Fn$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/CatalogItemFnBuilder;
}

public final class org/partiql/plan/Catalog$Item$Value : org/partiql/plan/Catalog$Item {
	public static final field Companion Lorg/partiql/plan/Catalog$Item$Value$Companion;
	public final field path Ljava/util/List;
	public final field type Lorg/partiql/types/PType;
	public fun <init> (Ljava/util/List;Lorg/partiql/types/PType;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/CatalogItemValueBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Lorg/partiql/types/PType;
	public final fun copy (Ljava/util/List;Lorg/partiql/types/PType;)Lorg/partiql/plan/Catalog$Item$Value;
	public static synthetic fun copy$default (Lorg/partiql/plan/Catalog$Item$Value;Ljava/util/List;Lorg/partiql/types/PType;ILjava/lang/Object;)Lorg/partiql/plan/Catalog$Item$Value;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Catalog$Item$Value$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/CatalogItemValueBuilder;
}

public abstract class org/partiql/plan/Identifier : org/partiql/plan/PlanNode {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/Identifier$CaseSensitivity : java/lang/Enum {
	public static final field INSENSITIVE Lorg/partiql/plan/Identifier$CaseSensitivity;
	public static final field SENSITIVE Lorg/partiql/plan/Identifier$CaseSensitivity;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/Identifier$CaseSensitivity;
	public static fun values ()[Lorg/partiql/plan/Identifier$CaseSensitivity;
}

public final class org/partiql/plan/Identifier$Qualified : org/partiql/plan/Identifier {
	public static final field Companion Lorg/partiql/plan/Identifier$Qualified$Companion;
	public final field root Lorg/partiql/plan/Identifier$Symbol;
	public final field steps Ljava/util/List;
	public fun <init> (Lorg/partiql/plan/Identifier$Symbol;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/IdentifierQualifiedBuilder;
	public final fun component1 ()Lorg/partiql/plan/Identifier$Symbol;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Identifier$Symbol;Ljava/util/List;)Lorg/partiql/plan/Identifier$Qualified;
	public static synthetic fun copy$default (Lorg/partiql/plan/Identifier$Qualified;Lorg/partiql/plan/Identifier$Symbol;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Identifier$Qualified;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Identifier$Qualified$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/IdentifierQualifiedBuilder;
}

public final class org/partiql/plan/Identifier$Symbol : org/partiql/plan/Identifier {
	public static final field Companion Lorg/partiql/plan/Identifier$Symbol$Companion;
	public final field caseSensitivity Lorg/partiql/plan/Identifier$CaseSensitivity;
	public final field symbol Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Lorg/partiql/plan/Identifier$CaseSensitivity;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/IdentifierSymbolBuilder;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/partiql/plan/Identifier$CaseSensitivity;
	public final fun copy (Ljava/lang/String;Lorg/partiql/plan/Identifier$CaseSensitivity;)Lorg/partiql/plan/Identifier$Symbol;
	public static synthetic fun copy$default (Lorg/partiql/plan/Identifier$Symbol;Ljava/lang/String;Lorg/partiql/plan/Identifier$CaseSensitivity;ILjava/lang/Object;)Lorg/partiql/plan/Identifier$Symbol;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Identifier$Symbol$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/IdentifierSymbolBuilder;
}

public final class org/partiql/plan/PartiQLPlan : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/PartiQLPlan$Companion;
	public final field catalogs Ljava/util/List;
	public final field statement Lorg/partiql/plan/Statement;
	public fun <init> (Ljava/util/List;Lorg/partiql/plan/Statement;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/PartiQlPlanBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Lorg/partiql/plan/Statement;
	public final fun copy (Ljava/util/List;Lorg/partiql/plan/Statement;)Lorg/partiql/plan/PartiQLPlan;
	public static synthetic fun copy$default (Lorg/partiql/plan/PartiQLPlan;Ljava/util/List;Lorg/partiql/plan/Statement;ILjava/lang/Object;)Lorg/partiql/plan/PartiQLPlan;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/PartiQLPlan$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/PartiQlPlanBuilder;
}

public final class org/partiql/plan/Plan {
	public static final fun catalog (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Catalog;
	public static final fun catalogItemAgg (Ljava/util/List;Ljava/lang/String;)Lorg/partiql/plan/Catalog$Item$Agg;
	public static final fun catalogItemFn (Ljava/util/List;Ljava/lang/String;)Lorg/partiql/plan/Catalog$Item$Fn;
	public static final fun catalogItemValue (Ljava/util/List;Lorg/partiql/types/PType;)Lorg/partiql/plan/Catalog$Item$Value;
	public static final fun identifierQualified (Lorg/partiql/plan/Identifier$Symbol;Ljava/util/List;)Lorg/partiql/plan/Identifier$Qualified;
	public static final fun identifierSymbol (Ljava/lang/String;Lorg/partiql/plan/Identifier$CaseSensitivity;)Lorg/partiql/plan/Identifier$Symbol;
	public static final fun partiQLPlan (Ljava/util/List;Lorg/partiql/plan/Statement;)Lorg/partiql/plan/PartiQLPlan;
	public static final fun ref (II)Lorg/partiql/plan/Ref;
	public static final fun refCast (Lorg/partiql/types/PType;Lorg/partiql/types/PType;Z)Lorg/partiql/plan/Ref$Cast;
	public static final fun rel (Lorg/partiql/plan/Rel$Type;Lorg/partiql/plan/Rel$Op;)Lorg/partiql/plan/Rel;
	public static final fun relBinding (Ljava/lang/String;Lorg/partiql/types/PType;)Lorg/partiql/plan/Rel$Binding;
	public static final fun relOpAggregate (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Aggregate;
	public static final fun relOpAggregateCall (Lorg/partiql/plan/Ref;Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Aggregate$Call;
	public static final fun relOpDistinct (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rel$Op$Distinct;
	public static final fun relOpErr (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Err;
	public static final fun relOpExclude (Lorg/partiql/plan/Rel;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Exclude;
	public static final fun relOpExcludePath (Lorg/partiql/plan/Rex$Op$Var;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Exclude$Path;
	public static final fun relOpExcludeStep (Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Exclude$Step;
	public static final fun relOpExcludeTypeCollIndex (I)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;
	public static final fun relOpExcludeTypeCollWildcard ()Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;
	public static final fun relOpExcludeTypeStructKey (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;
	public static final fun relOpExcludeTypeStructSymbol (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;
	public static final fun relOpExcludeTypeStructWildcard ()Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;
	public static final fun relOpFilter (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Filter;
	public static final fun relOpJoin (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Join$Type;)Lorg/partiql/plan/Rel$Op$Join;
	public static final fun relOpLimit (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Limit;
	public static final fun relOpOffset (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Offset;
	public static final fun relOpProject (Lorg/partiql/plan/Rel;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Project;
	public static final fun relOpScan (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Scan;
	public static final fun relOpScanIndexed (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$ScanIndexed;
	public static final fun relOpSetExcept (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rel$Op$Set$Except;
	public static final fun relOpSetIntersect (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rel$Op$Set$Intersect;
	public static final fun relOpSetUnion (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rel$Op$Set$Union;
	public static final fun relOpSort (Lorg/partiql/plan/Rel;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Sort;
	public static final fun relOpSortSpec (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Sort$Order;)Lorg/partiql/plan/Rel$Op$Sort$Spec;
	public static final fun relOpUnpivot (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Unpivot;
	public static final fun relType (Ljava/util/List;Ljava/util/Set;)Lorg/partiql/plan/Rel$Type;
	public static final fun rex (Lorg/partiql/types/PType;Lorg/partiql/plan/Rex$Op;)Lorg/partiql/plan/Rex;
	public static final fun rexOpCallDynamic (Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Call$Dynamic;
	public static final fun rexOpCallDynamicCandidate (Lorg/partiql/plan/Ref;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;
	public static final fun rexOpCallStatic (Lorg/partiql/plan/Ref;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Call$Static;
	public static final fun rexOpCase (Ljava/util/List;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Case;
	public static final fun rexOpCaseBranch (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Case$Branch;
	public static final fun rexOpCast (Lorg/partiql/plan/Ref$Cast;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Cast;
	public static final fun rexOpCoalesce (Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Coalesce;
	public static final fun rexOpCollection (Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Collection;
	public static final fun rexOpErr (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Err;
	public static final fun rexOpGlobal (Lorg/partiql/plan/Ref;)Lorg/partiql/plan/Rex$Op$Global;
	public static final fun rexOpLit (Lorg/partiql/value/PartiQLValue;)Lorg/partiql/plan/Rex$Op$Lit;
	public static final fun rexOpMissing (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Missing;
	public static final fun rexOpNullif (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Nullif;
	public static final fun rexOpPathIndex (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Path$Index;
	public static final fun rexOpPathKey (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Path$Key;
	public static final fun rexOpPathSymbol (Lorg/partiql/plan/Rex;Ljava/lang/String;)Lorg/partiql/plan/Rex$Op$Path$Symbol;
	public static final fun rexOpPivot (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rex$Op$Pivot;
	public static final fun rexOpSelect (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rex$Op$Select;
	public static final fun rexOpStruct (Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Struct;
	public static final fun rexOpStructField (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Struct$Field;
	public static final fun rexOpSubquery (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex$Op$Subquery$Coercion;)Lorg/partiql/plan/Rex$Op$Subquery;
	public static final fun rexOpTupleUnion (Ljava/util/List;)Lorg/partiql/plan/Rex$Op$TupleUnion;
	public static final fun rexOpVar (II)Lorg/partiql/plan/Rex$Op$Var;
	public static final fun statementQuery (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Statement$Query;
}

public abstract class org/partiql/plan/PlanNode {
	public field tag Ljava/lang/String;
	public fun <init> ()V
	public abstract fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getChildren ()Ljava/util/List;
}

public final class org/partiql/plan/Ref : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Ref$Companion;
	public final field catalog I
	public final field symbol I
	public fun <init> (II)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RefBuilder;
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Lorg/partiql/plan/Ref;
	public static synthetic fun copy$default (Lorg/partiql/plan/Ref;IIILjava/lang/Object;)Lorg/partiql/plan/Ref;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Ref$Cast : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Ref$Cast$Companion;
	public final field input Lorg/partiql/types/PType;
	public final field isNullable Z
	public final field target Lorg/partiql/types/PType;
	public fun <init> (Lorg/partiql/types/PType;Lorg/partiql/types/PType;Z)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RefCastBuilder;
	public final fun component1 ()Lorg/partiql/types/PType;
	public final fun component2 ()Lorg/partiql/types/PType;
	public final fun component3 ()Z
	public final fun copy (Lorg/partiql/types/PType;Lorg/partiql/types/PType;Z)Lorg/partiql/plan/Ref$Cast;
	public static synthetic fun copy$default (Lorg/partiql/plan/Ref$Cast;Lorg/partiql/types/PType;Lorg/partiql/types/PType;ZILjava/lang/Object;)Lorg/partiql/plan/Ref$Cast;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Ref$Cast$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RefCastBuilder;
}

public final class org/partiql/plan/Ref$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RefBuilder;
}

public final class org/partiql/plan/Rel : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rel$Companion;
	public final field op Lorg/partiql/plan/Rel$Op;
	public final field type Lorg/partiql/plan/Rel$Type;
	public fun <init> (Lorg/partiql/plan/Rel$Type;Lorg/partiql/plan/Rel$Op;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel$Type;
	public final fun component2 ()Lorg/partiql/plan/Rel$Op;
	public final fun copy (Lorg/partiql/plan/Rel$Type;Lorg/partiql/plan/Rel$Op;)Lorg/partiql/plan/Rel;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Type;Lorg/partiql/plan/Rel$Op;ILjava/lang/Object;)Lorg/partiql/plan/Rel;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Binding : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rel$Binding$Companion;
	public final field name Ljava/lang/String;
	public final field type Lorg/partiql/types/PType;
	public fun <init> (Ljava/lang/String;Lorg/partiql/types/PType;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelBindingBuilder;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/partiql/types/PType;
	public final fun copy (Ljava/lang/String;Lorg/partiql/types/PType;)Lorg/partiql/plan/Rel$Binding;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Binding;Ljava/lang/String;Lorg/partiql/types/PType;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Binding;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Binding$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelBindingBuilder;
}

public final class org/partiql/plan/Rel$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelBuilder;
}

public abstract class org/partiql/plan/Rel$Op : org/partiql/plan/PlanNode {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/Rel$Op$Aggregate : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Aggregate$Companion;
	public final field calls Ljava/util/List;
	public final field groups Ljava/util/List;
	public final field input Lorg/partiql/plan/Rel;
	public final field strategy Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;Ljava/util/List;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpAggregateBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun component2 ()Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Aggregate;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Aggregate;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Aggregate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Aggregate$Call : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Aggregate$Call$Companion;
	public final field agg Lorg/partiql/plan/Ref;
	public final field args Ljava/util/List;
	public final field setQuantifier Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;
	public fun <init> (Lorg/partiql/plan/Ref;Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpAggregateCallBuilder;
	public final fun component1 ()Lorg/partiql/plan/Ref;
	public final fun component2 ()Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Ref;Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Aggregate$Call;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Aggregate$Call;Lorg/partiql/plan/Ref;Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Aggregate$Call;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Aggregate$Call$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpAggregateCallBuilder;
}

public final class org/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier : java/lang/Enum {
	public static final field ALL Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;
	public static final field DISTINCT Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;
	public static fun values ()[Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;
}

public final class org/partiql/plan/Rel$Op$Aggregate$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpAggregateBuilder;
}

public final class org/partiql/plan/Rel$Op$Aggregate$Strategy : java/lang/Enum {
	public static final field FULL Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;
	public static final field PARTIAL Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;
	public static fun values ()[Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;
}

public final class org/partiql/plan/Rel$Op$Distinct : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Distinct$Companion;
	public final field input Lorg/partiql/plan/Rel;
	public fun <init> (Lorg/partiql/plan/Rel;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpDistinctBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun copy (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rel$Op$Distinct;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Distinct;Lorg/partiql/plan/Rel;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Distinct;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Distinct$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpDistinctBuilder;
}

public final class org/partiql/plan/Rel$Op$Err : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Err$Companion;
	public final field message Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpErrBuilder;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Err;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Err;Ljava/lang/String;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Err;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Err$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpErrBuilder;
}

public final class org/partiql/plan/Rel$Op$Exclude : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Exclude$Companion;
	public final field input Lorg/partiql/plan/Rel;
	public final field paths Ljava/util/List;
	public fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Rel;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Exclude;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Exclude;Lorg/partiql/plan/Rel;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Exclude$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeBuilder;
}

public final class org/partiql/plan/Rel$Op$Exclude$Path : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Exclude$Path$Companion;
	public final field root Lorg/partiql/plan/Rex$Op$Var;
	public final field steps Ljava/util/List;
	public fun <init> (Lorg/partiql/plan/Rex$Op$Var;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpExcludePathBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex$Op$Var;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Rex$Op$Var;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Exclude$Path;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Exclude$Path;Lorg/partiql/plan/Rex$Op$Var;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Path;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Exclude$Path$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpExcludePathBuilder;
}

public final class org/partiql/plan/Rel$Op$Exclude$Step : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Exclude$Step$Companion;
	public final field substeps Ljava/util/List;
	public final field type Lorg/partiql/plan/Rel$Op$Exclude$Type;
	public fun <init> (Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeStepBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel$Op$Exclude$Type;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Exclude$Step;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Exclude$Step;Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Step;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Exclude$Step$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeStepBuilder;
}

public abstract class org/partiql/plan/Rel$Op$Exclude$Type : org/partiql/plan/PlanNode {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$CollIndex : org/partiql/plan/Rel$Op$Exclude$Type {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex$Companion;
	public final field index I
	public fun <init> (I)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeCollIndexBuilder;
	public final fun component1 ()I
	public final fun copy (I)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;IILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$CollIndex$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeCollIndexBuilder;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$CollWildcard : org/partiql/plan/Rel$Op$Exclude$Type {
	public final field   C
	public static final field Companion Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard$Companion;
	public fun <init> ()V
	public fun <init> (C)V
	public synthetic fun <init> (CILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeCollWildcardBuilder;
	public final fun component1 ()C
	public final fun copy (C)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;CILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$CollWildcard$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeCollWildcardBuilder;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$StructKey : org/partiql/plan/Rel$Op$Exclude$Type {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey$Companion;
	public final field key Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeStructKeyBuilder;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;Ljava/lang/String;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$StructKey$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeStructKeyBuilder;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$StructSymbol : org/partiql/plan/Rel$Op$Exclude$Type {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol$Companion;
	public final field symbol Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeStructSymbolBuilder;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;Ljava/lang/String;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$StructSymbol$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeStructSymbolBuilder;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$StructWildcard : org/partiql/plan/Rel$Op$Exclude$Type {
	public final field   C
	public static final field Companion Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard$Companion;
	public fun <init> ()V
	public fun <init> (C)V
	public synthetic fun <init> (CILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeStructWildcardBuilder;
	public final fun component1 ()C
	public final fun copy (C)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;CILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Exclude$Type$StructWildcard$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpExcludeTypeStructWildcardBuilder;
}

public final class org/partiql/plan/Rel$Op$Filter : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Filter$Companion;
	public final field input Lorg/partiql/plan/Rel;
	public final field predicate Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpFilterBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Filter;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Filter;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Filter;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Filter$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpFilterBuilder;
}

public final class org/partiql/plan/Rel$Op$Join : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Join$Companion;
	public final field lhs Lorg/partiql/plan/Rel;
	public final field rex Lorg/partiql/plan/Rex;
	public final field rhs Lorg/partiql/plan/Rel;
	public final field type Lorg/partiql/plan/Rel$Op$Join$Type;
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Join$Type;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpJoinBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun component2 ()Lorg/partiql/plan/Rel;
	public final fun component3 ()Lorg/partiql/plan/Rex;
	public final fun component4 ()Lorg/partiql/plan/Rel$Op$Join$Type;
	public final fun copy (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Join$Type;)Lorg/partiql/plan/Rel$Op$Join;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Join;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Join$Type;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Join;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Join$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpJoinBuilder;
}

public final class org/partiql/plan/Rel$Op$Join$Type : java/lang/Enum {
	public static final field FULL Lorg/partiql/plan/Rel$Op$Join$Type;
	public static final field INNER Lorg/partiql/plan/Rel$Op$Join$Type;
	public static final field LEFT Lorg/partiql/plan/Rel$Op$Join$Type;
	public static final field RIGHT Lorg/partiql/plan/Rel$Op$Join$Type;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Join$Type;
	public static fun values ()[Lorg/partiql/plan/Rel$Op$Join$Type;
}

public final class org/partiql/plan/Rel$Op$Limit : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Limit$Companion;
	public final field input Lorg/partiql/plan/Rel;
	public final field limit Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpLimitBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Limit;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Limit;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Limit;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Limit$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpLimitBuilder;
}

public final class org/partiql/plan/Rel$Op$Offset : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Offset$Companion;
	public final field input Lorg/partiql/plan/Rel;
	public final field offset Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpOffsetBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Offset;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Offset;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Offset;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Offset$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpOffsetBuilder;
}

public final class org/partiql/plan/Rel$Op$Project : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Project$Companion;
	public final field input Lorg/partiql/plan/Rel;
	public final field projections Ljava/util/List;
	public fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpProjectBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Rel;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Project;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Project;Lorg/partiql/plan/Rel;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Project;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Project$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpProjectBuilder;
}

public final class org/partiql/plan/Rel$Op$Scan : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Scan$Companion;
	public final field rex Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpScanBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Scan;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Scan;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Scan;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Scan$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpScanBuilder;
}

public final class org/partiql/plan/Rel$Op$ScanIndexed : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$ScanIndexed$Companion;
	public final field rex Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpScanIndexedBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$ScanIndexed;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$ScanIndexed;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$ScanIndexed;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$ScanIndexed$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpScanIndexedBuilder;
}

public abstract class org/partiql/plan/Rel$Op$Set : org/partiql/plan/Rel$Op {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/Rel$Op$Set$Except : org/partiql/plan/Rel$Op$Set {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Set$Except$Companion;
	public final field lhs Lorg/partiql/plan/Rel;
	public final field quantifier Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final field rhs Lorg/partiql/plan/Rel;
	public fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpSetExceptBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final fun component2 ()Lorg/partiql/plan/Rel;
	public final fun component3 ()Lorg/partiql/plan/Rel;
	public final fun copy (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rel$Op$Set$Except;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Set$Except;Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Set$Except;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Set$Except$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpSetExceptBuilder;
}

public final class org/partiql/plan/Rel$Op$Set$Intersect : org/partiql/plan/Rel$Op$Set {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Set$Intersect$Companion;
	public final field lhs Lorg/partiql/plan/Rel;
	public final field quantifier Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final field rhs Lorg/partiql/plan/Rel;
	public fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpSetIntersectBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final fun component2 ()Lorg/partiql/plan/Rel;
	public final fun component3 ()Lorg/partiql/plan/Rel;
	public final fun copy (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rel$Op$Set$Intersect;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Set$Intersect;Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Set$Intersect;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Set$Intersect$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpSetIntersectBuilder;
}

public final class org/partiql/plan/Rel$Op$Set$Quantifier : java/lang/Enum {
	public static final field ALL Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public static final field DISTINCT Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public static fun values ()[Lorg/partiql/plan/Rel$Op$Set$Quantifier;
}

public final class org/partiql/plan/Rel$Op$Set$Union : org/partiql/plan/Rel$Op$Set {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Set$Union$Companion;
	public final field lhs Lorg/partiql/plan/Rel;
	public final field quantifier Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final field rhs Lorg/partiql/plan/Rel;
	public fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpSetUnionBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final fun component2 ()Lorg/partiql/plan/Rel;
	public final fun component3 ()Lorg/partiql/plan/Rel;
	public final fun copy (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rel$Op$Set$Union;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Set$Union;Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Set$Union;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Set$Union$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpSetUnionBuilder;
}

public final class org/partiql/plan/Rel$Op$Sort : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Sort$Companion;
	public final field input Lorg/partiql/plan/Rel;
	public final field specs Ljava/util/List;
	public fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpSortBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rel;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Rel;Ljava/util/List;)Lorg/partiql/plan/Rel$Op$Sort;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Sort;Lorg/partiql/plan/Rel;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Sort;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Sort$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpSortBuilder;
}

public final class org/partiql/plan/Rel$Op$Sort$Order : java/lang/Enum {
	public static final field ASC_NULLS_FIRST Lorg/partiql/plan/Rel$Op$Sort$Order;
	public static final field ASC_NULLS_LAST Lorg/partiql/plan/Rel$Op$Sort$Order;
	public static final field DESC_NULLS_FIRST Lorg/partiql/plan/Rel$Op$Sort$Order;
	public static final field DESC_NULLS_LAST Lorg/partiql/plan/Rel$Op$Sort$Order;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/Rel$Op$Sort$Order;
	public static fun values ()[Lorg/partiql/plan/Rel$Op$Sort$Order;
}

public final class org/partiql/plan/Rel$Op$Sort$Spec : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Sort$Spec$Companion;
	public final field order Lorg/partiql/plan/Rel$Op$Sort$Order;
	public final field rex Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Sort$Order;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpSortSpecBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rel$Op$Sort$Order;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Sort$Order;)Lorg/partiql/plan/Rel$Op$Sort$Spec;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Sort$Spec;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Sort$Order;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Sort$Spec;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Sort$Spec$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpSortSpecBuilder;
}

public final class org/partiql/plan/Rel$Op$Unpivot : org/partiql/plan/Rel$Op {
	public static final field Companion Lorg/partiql/plan/Rel$Op$Unpivot$Companion;
	public final field rex Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelOpUnpivotBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rel$Op$Unpivot;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Op$Unpivot;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Unpivot;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Op$Unpivot$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelOpUnpivotBuilder;
}

public final class org/partiql/plan/Rel$Prop : java/lang/Enum {
	public static final field ORDERED Lorg/partiql/plan/Rel$Prop;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/Rel$Prop;
	public static fun values ()[Lorg/partiql/plan/Rel$Prop;
}

public final class org/partiql/plan/Rel$Type : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rel$Type$Companion;
	public final field props Ljava/util/Set;
	public final field schema Ljava/util/List;
	public fun <init> (Ljava/util/List;Ljava/util/Set;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RelTypeBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/Set;
	public final fun copy (Ljava/util/List;Ljava/util/Set;)Lorg/partiql/plan/Rel$Type;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rel$Type;Ljava/util/List;Ljava/util/Set;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Type;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rel$Type$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RelTypeBuilder;
}

public final class org/partiql/plan/Rex : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rex$Companion;
	public final field op Lorg/partiql/plan/Rex$Op;
	public final field type Lorg/partiql/types/PType;
	public fun <init> (Lorg/partiql/types/PType;Lorg/partiql/plan/Rex$Op;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexBuilder;
	public final fun component1 ()Lorg/partiql/types/PType;
	public final fun component2 ()Lorg/partiql/plan/Rex$Op;
	public final fun copy (Lorg/partiql/types/PType;Lorg/partiql/plan/Rex$Op;)Lorg/partiql/plan/Rex;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex;Lorg/partiql/types/PType;Lorg/partiql/plan/Rex$Op;ILjava/lang/Object;)Lorg/partiql/plan/Rex;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexBuilder;
}

public abstract class org/partiql/plan/Rex$Op : org/partiql/plan/PlanNode {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class org/partiql/plan/Rex$Op$Call : org/partiql/plan/Rex$Op {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/Rex$Op$Call$Dynamic : org/partiql/plan/Rex$Op$Call {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Call$Dynamic$Companion;
	public final field args Ljava/util/List;
	public final field candidates Ljava/util/List;
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpCallDynamicBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Call$Dynamic;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Call$Dynamic;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Call$Dynamic;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Call$Dynamic$Candidate : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate$Companion;
	public final field coercions Ljava/util/List;
	public final field fn Lorg/partiql/plan/Ref;
	public fun <init> (Lorg/partiql/plan/Ref;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpCallDynamicCandidateBuilder;
	public final fun component1 ()Lorg/partiql/plan/Ref;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Ref;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;Lorg/partiql/plan/Ref;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Call$Dynamic$Candidate$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpCallDynamicCandidateBuilder;
}

public final class org/partiql/plan/Rex$Op$Call$Dynamic$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpCallDynamicBuilder;
}

public final class org/partiql/plan/Rex$Op$Call$Static : org/partiql/plan/Rex$Op$Call {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Call$Static$Companion;
	public final field args Ljava/util/List;
	public final field fn Lorg/partiql/plan/Ref;
	public fun <init> (Lorg/partiql/plan/Ref;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpCallStaticBuilder;
	public final fun component1 ()Lorg/partiql/plan/Ref;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/partiql/plan/Ref;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Call$Static;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Call$Static;Lorg/partiql/plan/Ref;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Call$Static;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Call$Static$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpCallStaticBuilder;
}

public final class org/partiql/plan/Rex$Op$Case : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Case$Companion;
	public final field branches Ljava/util/List;
	public final field default Lorg/partiql/plan/Rex;
	public fun <init> (Ljava/util/List;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpCaseBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Ljava/util/List;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Case;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Case;Ljava/util/List;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Case;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Case$Branch : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Case$Branch$Companion;
	public final field condition Lorg/partiql/plan/Rex;
	public final field rex Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpCaseBranchBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Case$Branch;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Case$Branch;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Case$Branch;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Case$Branch$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpCaseBranchBuilder;
}

public final class org/partiql/plan/Rex$Op$Case$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpCaseBuilder;
}

public final class org/partiql/plan/Rex$Op$Cast : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Cast$Companion;
	public final field arg Lorg/partiql/plan/Rex;
	public final field cast Lorg/partiql/plan/Ref$Cast;
	public fun <init> (Lorg/partiql/plan/Ref$Cast;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpCastBuilder;
	public final fun component1 ()Lorg/partiql/plan/Ref$Cast;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Ref$Cast;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Cast;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Cast;Lorg/partiql/plan/Ref$Cast;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Cast;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Cast$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpCastBuilder;
}

public final class org/partiql/plan/Rex$Op$Coalesce : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Coalesce$Companion;
	public final field args Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpCoalesceBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Coalesce;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Coalesce;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Coalesce;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Coalesce$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpCoalesceBuilder;
}

public final class org/partiql/plan/Rex$Op$Collection : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Collection$Companion;
	public final field values Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpCollectionBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Collection;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Collection;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Collection$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpCollectionBuilder;
}

public final class org/partiql/plan/Rex$Op$Err : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Err$Companion;
	public final field causes Ljava/util/List;
	public final field message Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpErrBuilder;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Err;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Err;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Err;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Err$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpErrBuilder;
}

public final class org/partiql/plan/Rex$Op$Global : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Global$Companion;
	public final field ref Lorg/partiql/plan/Ref;
	public fun <init> (Lorg/partiql/plan/Ref;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpGlobalBuilder;
	public final fun component1 ()Lorg/partiql/plan/Ref;
	public final fun copy (Lorg/partiql/plan/Ref;)Lorg/partiql/plan/Rex$Op$Global;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Global;Lorg/partiql/plan/Ref;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Global;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Global$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpGlobalBuilder;
}

public final class org/partiql/plan/Rex$Op$Lit : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Lit$Companion;
	public final field value Lorg/partiql/value/PartiQLValue;
	public fun <init> (Lorg/partiql/value/PartiQLValue;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpLitBuilder;
	public final fun component1 ()Lorg/partiql/value/PartiQLValue;
	public final fun copy (Lorg/partiql/value/PartiQLValue;)Lorg/partiql/plan/Rex$Op$Lit;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Lit;Lorg/partiql/value/PartiQLValue;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Lit;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Lit$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpLitBuilder;
}

public final class org/partiql/plan/Rex$Op$Missing : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Missing$Companion;
	public final field causes Ljava/util/List;
	public final field message Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpMissingBuilder;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Missing;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Missing;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Missing;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Missing$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpMissingBuilder;
}

public final class org/partiql/plan/Rex$Op$Nullif : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Nullif$Companion;
	public final field nullifier Lorg/partiql/plan/Rex;
	public final field value Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpNullifBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Nullif;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Nullif;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Nullif;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Nullif$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpNullifBuilder;
}

public abstract class org/partiql/plan/Rex$Op$Path : org/partiql/plan/Rex$Op {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/Rex$Op$Path$Index : org/partiql/plan/Rex$Op$Path {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Path$Index$Companion;
	public final field key Lorg/partiql/plan/Rex;
	public final field root Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpPathIndexBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Path$Index;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Path$Index;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Path$Index;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Path$Index$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpPathIndexBuilder;
}

public final class org/partiql/plan/Rex$Op$Path$Key : org/partiql/plan/Rex$Op$Path {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Path$Key$Companion;
	public final field key Lorg/partiql/plan/Rex;
	public final field root Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpPathKeyBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Path$Key;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Path$Key;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Path$Key;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Path$Key$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpPathKeyBuilder;
}

public final class org/partiql/plan/Rex$Op$Path$Symbol : org/partiql/plan/Rex$Op$Path {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Path$Symbol$Companion;
	public final field key Ljava/lang/String;
	public final field root Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpPathSymbolBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Lorg/partiql/plan/Rex;Ljava/lang/String;)Lorg/partiql/plan/Rex$Op$Path$Symbol;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Path$Symbol;Lorg/partiql/plan/Rex;Ljava/lang/String;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Path$Symbol;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Path$Symbol$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpPathSymbolBuilder;
}

public final class org/partiql/plan/Rex$Op$Pivot : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Pivot$Companion;
	public final field key Lorg/partiql/plan/Rex;
	public final field rel Lorg/partiql/plan/Rel;
	public final field value Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpPivotBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun component3 ()Lorg/partiql/plan/Rel;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rex$Op$Pivot;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Pivot;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Pivot;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Pivot$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpPivotBuilder;
}

public final class org/partiql/plan/Rex$Op$Select : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Select$Companion;
	public final field constructor Lorg/partiql/plan/Rex;
	public final field rel Lorg/partiql/plan/Rel;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpSelectBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rel;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;)Lorg/partiql/plan/Rex$Op$Select;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Select;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Select;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Select$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpSelectBuilder;
}

public final class org/partiql/plan/Rex$Op$Struct : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Struct$Companion;
	public final field fields Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpStructBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/partiql/plan/Rex$Op$Struct;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Struct;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Struct;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Struct$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpStructBuilder;
}

public final class org/partiql/plan/Rex$Op$Struct$Field : org/partiql/plan/PlanNode {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Struct$Field$Companion;
	public final field k Lorg/partiql/plan/Rex;
	public final field v Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpStructFieldBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Rex$Op$Struct$Field;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Struct$Field;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Struct$Field;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Struct$Field$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpStructFieldBuilder;
}

public final class org/partiql/plan/Rex$Op$Subquery : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Subquery$Companion;
	public final field coercion Lorg/partiql/plan/Rex$Op$Subquery$Coercion;
	public final field constructor Lorg/partiql/plan/Rex;
	public final field rel Lorg/partiql/plan/Rel;
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex$Op$Subquery$Coercion;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpSubqueryBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun component2 ()Lorg/partiql/plan/Rel;
	public final fun component3 ()Lorg/partiql/plan/Rex$Op$Subquery$Coercion;
	public final fun copy (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex$Op$Subquery$Coercion;)Lorg/partiql/plan/Rex$Op$Subquery;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Subquery;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex$Op$Subquery$Coercion;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Subquery;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Subquery$Coercion : java/lang/Enum {
	public static final field ROW Lorg/partiql/plan/Rex$Op$Subquery$Coercion;
	public static final field SCALAR Lorg/partiql/plan/Rex$Op$Subquery$Coercion;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/Rex$Op$Subquery$Coercion;
	public static fun values ()[Lorg/partiql/plan/Rex$Op$Subquery$Coercion;
}

public final class org/partiql/plan/Rex$Op$Subquery$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpSubqueryBuilder;
}

public final class org/partiql/plan/Rex$Op$TupleUnion : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$TupleUnion$Companion;
	public final field args Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpTupleUnionBuilder;
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/partiql/plan/Rex$Op$TupleUnion;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$TupleUnion;Ljava/util/List;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$TupleUnion;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$TupleUnion$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpTupleUnionBuilder;
}

public final class org/partiql/plan/Rex$Op$Var : org/partiql/plan/Rex$Op {
	public static final field Companion Lorg/partiql/plan/Rex$Op$Var$Companion;
	public final field depth I
	public final field ref I
	public fun <init> (II)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/RexOpVarBuilder;
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Lorg/partiql/plan/Rex$Op$Var;
	public static synthetic fun copy$default (Lorg/partiql/plan/Rex$Op$Var;IIILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Var;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Rex$Op$Var$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/RexOpVarBuilder;
}

public abstract class org/partiql/plan/Statement : org/partiql/plan/PlanNode {
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/Statement$Query : org/partiql/plan/Statement {
	public static final field Companion Lorg/partiql/plan/Statement$Query$Companion;
	public final field root Lorg/partiql/plan/Rex;
	public fun <init> (Lorg/partiql/plan/Rex;)V
	public fun accept (Lorg/partiql/plan/visitor/PlanVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun builder ()Lorg/partiql/plan/builder/StatementQueryBuilder;
	public final fun component1 ()Lorg/partiql/plan/Rex;
	public final fun copy (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/Statement$Query;
	public static synthetic fun copy$default (Lorg/partiql/plan/Statement$Query;Lorg/partiql/plan/Rex;ILjava/lang/Object;)Lorg/partiql/plan/Statement$Query;
	public fun equals (Ljava/lang/Object;)Z
	public fun getChildren ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Statement$Query$Companion {
	public final fun builder ()Lorg/partiql/plan/builder/StatementQueryBuilder;
}

public final class org/partiql/plan/builder/CatalogBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Catalog;
	public final fun getItems ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public final fun items (Ljava/util/List;)Lorg/partiql/plan/builder/CatalogBuilder;
	public final fun name (Ljava/lang/String;)Lorg/partiql/plan/builder/CatalogBuilder;
	public final fun setItems (Ljava/util/List;)V
	public final fun setName (Ljava/lang/String;)V
}

public final class org/partiql/plan/builder/CatalogItemAggBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Catalog$Item$Agg;
	public final fun getPath ()Ljava/util/List;
	public final fun getSpecific ()Ljava/lang/String;
	public final fun path (Ljava/util/List;)Lorg/partiql/plan/builder/CatalogItemAggBuilder;
	public final fun setPath (Ljava/util/List;)V
	public final fun setSpecific (Ljava/lang/String;)V
	public final fun specific (Ljava/lang/String;)Lorg/partiql/plan/builder/CatalogItemAggBuilder;
}

public final class org/partiql/plan/builder/CatalogItemFnBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Catalog$Item$Fn;
	public final fun getPath ()Ljava/util/List;
	public final fun getSpecific ()Ljava/lang/String;
	public final fun path (Ljava/util/List;)Lorg/partiql/plan/builder/CatalogItemFnBuilder;
	public final fun setPath (Ljava/util/List;)V
	public final fun setSpecific (Ljava/lang/String;)V
	public final fun specific (Ljava/lang/String;)Lorg/partiql/plan/builder/CatalogItemFnBuilder;
}

public final class org/partiql/plan/builder/CatalogItemValueBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Lorg/partiql/types/PType;)V
	public synthetic fun <init> (Ljava/util/List;Lorg/partiql/types/PType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Catalog$Item$Value;
	public final fun getPath ()Ljava/util/List;
	public final fun getType ()Lorg/partiql/types/PType;
	public final fun path (Ljava/util/List;)Lorg/partiql/plan/builder/CatalogItemValueBuilder;
	public final fun setPath (Ljava/util/List;)V
	public final fun setType (Lorg/partiql/types/PType;)V
	public final fun type (Lorg/partiql/types/PType;)Lorg/partiql/plan/builder/CatalogItemValueBuilder;
}

public final class org/partiql/plan/builder/IdentifierQualifiedBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Identifier$Symbol;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Identifier$Symbol;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Identifier$Qualified;
	public final fun getRoot ()Lorg/partiql/plan/Identifier$Symbol;
	public final fun getSteps ()Ljava/util/List;
	public final fun root (Lorg/partiql/plan/Identifier$Symbol;)Lorg/partiql/plan/builder/IdentifierQualifiedBuilder;
	public final fun setRoot (Lorg/partiql/plan/Identifier$Symbol;)V
	public final fun setSteps (Ljava/util/List;)V
	public final fun steps (Ljava/util/List;)Lorg/partiql/plan/builder/IdentifierQualifiedBuilder;
}

public final class org/partiql/plan/builder/IdentifierSymbolBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lorg/partiql/plan/Identifier$CaseSensitivity;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/partiql/plan/Identifier$CaseSensitivity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Identifier$Symbol;
	public final fun caseSensitivity (Lorg/partiql/plan/Identifier$CaseSensitivity;)Lorg/partiql/plan/builder/IdentifierSymbolBuilder;
	public final fun getCaseSensitivity ()Lorg/partiql/plan/Identifier$CaseSensitivity;
	public final fun getSymbol ()Ljava/lang/String;
	public final fun setCaseSensitivity (Lorg/partiql/plan/Identifier$CaseSensitivity;)V
	public final fun setSymbol (Ljava/lang/String;)V
	public final fun symbol (Ljava/lang/String;)Lorg/partiql/plan/builder/IdentifierSymbolBuilder;
}

public final class org/partiql/plan/builder/PartiQlPlanBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Lorg/partiql/plan/Statement;)V
	public synthetic fun <init> (Ljava/util/List;Lorg/partiql/plan/Statement;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/PartiQLPlan;
	public final fun catalogs (Ljava/util/List;)Lorg/partiql/plan/builder/PartiQlPlanBuilder;
	public final fun getCatalogs ()Ljava/util/List;
	public final fun getStatement ()Lorg/partiql/plan/Statement;
	public final fun setCatalogs (Ljava/util/List;)V
	public final fun setStatement (Lorg/partiql/plan/Statement;)V
	public final fun statement (Lorg/partiql/plan/Statement;)Lorg/partiql/plan/builder/PartiQlPlanBuilder;
}

public final class org/partiql/plan/builder/PlanBuilder {
	public fun <init> ()V
	public final fun catalog (Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Catalog;
	public static synthetic fun catalog$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Catalog;
	public final fun catalogItemAgg (Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Catalog$Item$Agg;
	public static synthetic fun catalogItemAgg$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Catalog$Item$Agg;
	public final fun catalogItemFn (Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Catalog$Item$Fn;
	public static synthetic fun catalogItemFn$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Catalog$Item$Fn;
	public final fun catalogItemValue (Ljava/util/List;Lorg/partiql/types/PType;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Catalog$Item$Value;
	public static synthetic fun catalogItemValue$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Lorg/partiql/types/PType;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Catalog$Item$Value;
	public final fun identifierQualified (Lorg/partiql/plan/Identifier$Symbol;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Identifier$Qualified;
	public static synthetic fun identifierQualified$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Identifier$Symbol;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Identifier$Qualified;
	public final fun identifierSymbol (Ljava/lang/String;Lorg/partiql/plan/Identifier$CaseSensitivity;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Identifier$Symbol;
	public static synthetic fun identifierSymbol$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/String;Lorg/partiql/plan/Identifier$CaseSensitivity;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Identifier$Symbol;
	public final fun partiQLPlan (Ljava/util/List;Lorg/partiql/plan/Statement;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/PartiQLPlan;
	public static synthetic fun partiQLPlan$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Lorg/partiql/plan/Statement;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/PartiQLPlan;
	public final fun ref (Ljava/lang/Integer;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Ref;
	public static synthetic fun ref$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/Integer;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Ref;
	public final fun refCast (Lorg/partiql/types/PType;Lorg/partiql/types/PType;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Ref$Cast;
	public static synthetic fun refCast$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/types/PType;Lorg/partiql/types/PType;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Ref$Cast;
	public final fun rel (Lorg/partiql/plan/Rel$Type;Lorg/partiql/plan/Rel$Op;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel;
	public static synthetic fun rel$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel$Type;Lorg/partiql/plan/Rel$Op;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel;
	public final fun relBinding (Ljava/lang/String;Lorg/partiql/types/PType;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Binding;
	public static synthetic fun relBinding$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/String;Lorg/partiql/types/PType;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Binding;
	public final fun relOpAggregate (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Aggregate;
	public static synthetic fun relOpAggregate$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Aggregate;
	public final fun relOpAggregateCall (Lorg/partiql/plan/Ref;Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Aggregate$Call;
	public static synthetic fun relOpAggregateCall$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Ref;Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Aggregate$Call;
	public final fun relOpDistinct (Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Distinct;
	public static synthetic fun relOpDistinct$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Distinct;
	public final fun relOpErr (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Err;
	public static synthetic fun relOpErr$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Err;
	public final fun relOpExclude (Lorg/partiql/plan/Rel;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Exclude;
	public static synthetic fun relOpExclude$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude;
	public final fun relOpExcludePath (Lorg/partiql/plan/Rex$Op$Var;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Exclude$Path;
	public static synthetic fun relOpExcludePath$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex$Op$Var;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Path;
	public final fun relOpExcludeStep (Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Exclude$Step;
	public static synthetic fun relOpExcludeStep$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Step;
	public final fun relOpExcludeTypeCollIndex (Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;
	public static synthetic fun relOpExcludeTypeCollIndex$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;
	public final fun relOpExcludeTypeCollWildcard (Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;
	public static synthetic fun relOpExcludeTypeCollWildcard$default (Lorg/partiql/plan/builder/PlanBuilder;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;
	public final fun relOpExcludeTypeStructKey (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;
	public static synthetic fun relOpExcludeTypeStructKey$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;
	public final fun relOpExcludeTypeStructSymbol (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;
	public static synthetic fun relOpExcludeTypeStructSymbol$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;
	public final fun relOpExcludeTypeStructWildcard (Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;
	public static synthetic fun relOpExcludeTypeStructWildcard$default (Lorg/partiql/plan/builder/PlanBuilder;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;
	public final fun relOpFilter (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Filter;
	public static synthetic fun relOpFilter$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Filter;
	public final fun relOpJoin (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Join$Type;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Join;
	public static synthetic fun relOpJoin$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Join$Type;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Join;
	public final fun relOpLimit (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Limit;
	public static synthetic fun relOpLimit$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Limit;
	public final fun relOpOffset (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Offset;
	public static synthetic fun relOpOffset$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Offset;
	public final fun relOpProject (Lorg/partiql/plan/Rel;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Project;
	public static synthetic fun relOpProject$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Project;
	public final fun relOpScan (Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Scan;
	public static synthetic fun relOpScan$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Scan;
	public final fun relOpScanIndexed (Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$ScanIndexed;
	public static synthetic fun relOpScanIndexed$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$ScanIndexed;
	public final fun relOpSetExcept (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Set$Except;
	public static synthetic fun relOpSetExcept$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Set$Except;
	public final fun relOpSetIntersect (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Set$Intersect;
	public static synthetic fun relOpSetIntersect$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Set$Intersect;
	public final fun relOpSetUnion (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Set$Union;
	public static synthetic fun relOpSetUnion$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Set$Union;
	public final fun relOpSort (Lorg/partiql/plan/Rel;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Sort;
	public static synthetic fun relOpSort$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rel;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Sort;
	public final fun relOpSortSpec (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Sort$Order;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Sort$Spec;
	public static synthetic fun relOpSortSpec$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Sort$Order;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Sort$Spec;
	public final fun relOpUnpivot (Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Op$Unpivot;
	public static synthetic fun relOpUnpivot$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Op$Unpivot;
	public final fun relType (Ljava/util/List;Ljava/util/Set;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rel$Type;
	public static synthetic fun relType$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Ljava/util/Set;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rel$Type;
	public final fun rex (Lorg/partiql/types/PType;Lorg/partiql/plan/Rex$Op;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex;
	public static synthetic fun rex$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/types/PType;Lorg/partiql/plan/Rex$Op;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex;
	public final fun rexOpCallDynamic (Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Call$Dynamic;
	public static synthetic fun rexOpCallDynamic$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Call$Dynamic;
	public final fun rexOpCallDynamicCandidate (Lorg/partiql/plan/Ref;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;
	public static synthetic fun rexOpCallDynamicCandidate$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Ref;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;
	public final fun rexOpCallStatic (Lorg/partiql/plan/Ref;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Call$Static;
	public static synthetic fun rexOpCallStatic$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Ref;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Call$Static;
	public final fun rexOpCase (Ljava/util/List;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Case;
	public static synthetic fun rexOpCase$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Case;
	public final fun rexOpCaseBranch (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Case$Branch;
	public static synthetic fun rexOpCaseBranch$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Case$Branch;
	public final fun rexOpCast (Lorg/partiql/plan/Ref$Cast;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Cast;
	public static synthetic fun rexOpCast$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Ref$Cast;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Cast;
	public final fun rexOpCoalesce (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Coalesce;
	public static synthetic fun rexOpCoalesce$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Coalesce;
	public final fun rexOpCollection (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Collection;
	public static synthetic fun rexOpCollection$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Collection;
	public final fun rexOpErr (Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Err;
	public static synthetic fun rexOpErr$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Err;
	public final fun rexOpGlobal (Lorg/partiql/plan/Ref;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Global;
	public static synthetic fun rexOpGlobal$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Ref;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Global;
	public final fun rexOpLit (Lorg/partiql/value/PartiQLValue;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Lit;
	public static synthetic fun rexOpLit$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/value/PartiQLValue;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Lit;
	public final fun rexOpMissing (Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Missing;
	public static synthetic fun rexOpMissing$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Missing;
	public final fun rexOpNullif (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Nullif;
	public static synthetic fun rexOpNullif$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Nullif;
	public final fun rexOpPathIndex (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Path$Index;
	public static synthetic fun rexOpPathIndex$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Path$Index;
	public final fun rexOpPathKey (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Path$Key;
	public static synthetic fun rexOpPathKey$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Path$Key;
	public final fun rexOpPathSymbol (Lorg/partiql/plan/Rex;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Path$Symbol;
	public static synthetic fun rexOpPathSymbol$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Path$Symbol;
	public final fun rexOpPivot (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Pivot;
	public static synthetic fun rexOpPivot$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Pivot;
	public final fun rexOpSelect (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Select;
	public static synthetic fun rexOpSelect$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Select;
	public final fun rexOpStruct (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Struct;
	public static synthetic fun rexOpStruct$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Struct;
	public final fun rexOpStructField (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Struct$Field;
	public static synthetic fun rexOpStructField$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Struct$Field;
	public final fun rexOpSubquery (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex$Op$Subquery$Coercion;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Subquery;
	public static synthetic fun rexOpSubquery$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex$Op$Subquery$Coercion;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Subquery;
	public final fun rexOpTupleUnion (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$TupleUnion;
	public static synthetic fun rexOpTupleUnion$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$TupleUnion;
	public final fun rexOpVar (Ljava/lang/Integer;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Rex$Op$Var;
	public static synthetic fun rexOpVar$default (Lorg/partiql/plan/builder/PlanBuilder;Ljava/lang/Integer;Ljava/lang/Integer;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Rex$Op$Var;
	public final fun statementQuery (Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/Statement$Query;
	public static synthetic fun statementQuery$default (Lorg/partiql/plan/builder/PlanBuilder;Lorg/partiql/plan/Rex;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/partiql/plan/Statement$Query;
}

public final class org/partiql/plan/builder/PlanBuilderKt {
	public static final fun plan (Lkotlin/jvm/functions/Function1;)Lorg/partiql/plan/PlanNode;
}

public final class org/partiql/plan/builder/RefBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Integer;Ljava/lang/Integer;)V
	public synthetic fun <init> (Ljava/lang/Integer;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Ref;
	public final fun catalog (Ljava/lang/Integer;)Lorg/partiql/plan/builder/RefBuilder;
	public final fun getCatalog ()Ljava/lang/Integer;
	public final fun getSymbol ()Ljava/lang/Integer;
	public final fun setCatalog (Ljava/lang/Integer;)V
	public final fun setSymbol (Ljava/lang/Integer;)V
	public final fun symbol (Ljava/lang/Integer;)Lorg/partiql/plan/builder/RefBuilder;
}

public final class org/partiql/plan/builder/RefCastBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/types/PType;Lorg/partiql/types/PType;Ljava/lang/Boolean;)V
	public synthetic fun <init> (Lorg/partiql/types/PType;Lorg/partiql/types/PType;Ljava/lang/Boolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Ref$Cast;
	public final fun getInput ()Lorg/partiql/types/PType;
	public final fun getTarget ()Lorg/partiql/types/PType;
	public final fun input (Lorg/partiql/types/PType;)Lorg/partiql/plan/builder/RefCastBuilder;
	public final fun isNullable ()Ljava/lang/Boolean;
	public final fun isNullable (Ljava/lang/Boolean;)Lorg/partiql/plan/builder/RefCastBuilder;
	public final fun setInput (Lorg/partiql/types/PType;)V
	public final fun setNullable (Ljava/lang/Boolean;)V
	public final fun setTarget (Lorg/partiql/types/PType;)V
	public final fun target (Lorg/partiql/types/PType;)Lorg/partiql/plan/builder/RefCastBuilder;
}

public final class org/partiql/plan/builder/RelBindingBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lorg/partiql/types/PType;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/partiql/types/PType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Binding;
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Lorg/partiql/types/PType;
	public final fun name (Ljava/lang/String;)Lorg/partiql/plan/builder/RelBindingBuilder;
	public final fun setName (Ljava/lang/String;)V
	public final fun setType (Lorg/partiql/types/PType;)V
	public final fun type (Lorg/partiql/types/PType;)Lorg/partiql/plan/builder/RelBindingBuilder;
}

public final class org/partiql/plan/builder/RelBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel$Type;Lorg/partiql/plan/Rel$Op;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel$Type;Lorg/partiql/plan/Rel$Op;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel;
	public final fun getOp ()Lorg/partiql/plan/Rel$Op;
	public final fun getType ()Lorg/partiql/plan/Rel$Type;
	public final fun op (Lorg/partiql/plan/Rel$Op;)Lorg/partiql/plan/builder/RelBuilder;
	public final fun setOp (Lorg/partiql/plan/Rel$Op;)V
	public final fun setType (Lorg/partiql/plan/Rel$Type;)V
	public final fun type (Lorg/partiql/plan/Rel$Type;)Lorg/partiql/plan/builder/RelBuilder;
}

public final class org/partiql/plan/builder/RelOpAggregateBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Aggregate;
	public final fun calls (Ljava/util/List;)Lorg/partiql/plan/builder/RelOpAggregateBuilder;
	public final fun getCalls ()Ljava/util/List;
	public final fun getGroups ()Ljava/util/List;
	public final fun getInput ()Lorg/partiql/plan/Rel;
	public final fun getStrategy ()Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;
	public final fun groups (Ljava/util/List;)Lorg/partiql/plan/builder/RelOpAggregateBuilder;
	public final fun input (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpAggregateBuilder;
	public final fun setCalls (Ljava/util/List;)V
	public final fun setGroups (Ljava/util/List;)V
	public final fun setInput (Lorg/partiql/plan/Rel;)V
	public final fun setStrategy (Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;)V
	public final fun strategy (Lorg/partiql/plan/Rel$Op$Aggregate$Strategy;)Lorg/partiql/plan/builder/RelOpAggregateBuilder;
}

public final class org/partiql/plan/builder/RelOpAggregateCallBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Ref;Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Ref;Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun agg (Lorg/partiql/plan/Ref;)Lorg/partiql/plan/builder/RelOpAggregateCallBuilder;
	public final fun args (Ljava/util/List;)Lorg/partiql/plan/builder/RelOpAggregateCallBuilder;
	public final fun build ()Lorg/partiql/plan/Rel$Op$Aggregate$Call;
	public final fun getAgg ()Lorg/partiql/plan/Ref;
	public final fun getArgs ()Ljava/util/List;
	public final fun getSetQuantifier ()Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;
	public final fun setAgg (Lorg/partiql/plan/Ref;)V
	public final fun setArgs (Ljava/util/List;)V
	public final fun setQuantifier (Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;)Lorg/partiql/plan/builder/RelOpAggregateCallBuilder;
	public final fun setSetQuantifier (Lorg/partiql/plan/Rel$Op$Aggregate$Call$SetQuantifier;)V
}

public final class org/partiql/plan/builder/RelOpDistinctBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Distinct;
	public final fun getInput ()Lorg/partiql/plan/Rel;
	public final fun input (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpDistinctBuilder;
	public final fun setInput (Lorg/partiql/plan/Rel;)V
}

public final class org/partiql/plan/builder/RelOpErrBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Err;
	public final fun getMessage ()Ljava/lang/String;
	public final fun message (Ljava/lang/String;)Lorg/partiql/plan/builder/RelOpErrBuilder;
	public final fun setMessage (Ljava/lang/String;)V
}

public final class org/partiql/plan/builder/RelOpExcludeBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Exclude;
	public final fun getInput ()Lorg/partiql/plan/Rel;
	public final fun getPaths ()Ljava/util/List;
	public final fun input (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpExcludeBuilder;
	public final fun paths (Ljava/util/List;)Lorg/partiql/plan/builder/RelOpExcludeBuilder;
	public final fun setInput (Lorg/partiql/plan/Rel;)V
	public final fun setPaths (Ljava/util/List;)V
}

public final class org/partiql/plan/builder/RelOpExcludePathBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex$Op$Var;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex$Op$Var;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Exclude$Path;
	public final fun getRoot ()Lorg/partiql/plan/Rex$Op$Var;
	public final fun getSteps ()Ljava/util/List;
	public final fun root (Lorg/partiql/plan/Rex$Op$Var;)Lorg/partiql/plan/builder/RelOpExcludePathBuilder;
	public final fun setRoot (Lorg/partiql/plan/Rex$Op$Var;)V
	public final fun setSteps (Ljava/util/List;)V
	public final fun steps (Ljava/util/List;)Lorg/partiql/plan/builder/RelOpExcludePathBuilder;
}

public final class org/partiql/plan/builder/RelOpExcludeStepBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Exclude$Step;
	public final fun getSubsteps ()Ljava/util/List;
	public final fun getType ()Lorg/partiql/plan/Rel$Op$Exclude$Type;
	public final fun setSubsteps (Ljava/util/List;)V
	public final fun setType (Lorg/partiql/plan/Rel$Op$Exclude$Type;)V
	public final fun substeps (Ljava/util/List;)Lorg/partiql/plan/builder/RelOpExcludeStepBuilder;
	public final fun type (Lorg/partiql/plan/Rel$Op$Exclude$Type;)Lorg/partiql/plan/builder/RelOpExcludeStepBuilder;
}

public final class org/partiql/plan/builder/RelOpExcludeTypeCollIndexBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Integer;)V
	public synthetic fun <init> (Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;
	public final fun getIndex ()Ljava/lang/Integer;
	public final fun index (Ljava/lang/Integer;)Lorg/partiql/plan/builder/RelOpExcludeTypeCollIndexBuilder;
	public final fun setIndex (Ljava/lang/Integer;)V
}

public final class org/partiql/plan/builder/RelOpExcludeTypeCollWildcardBuilder {
	public fun <init> ()V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;
}

public final class org/partiql/plan/builder/RelOpExcludeTypeStructKeyBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;
	public final fun getKey ()Ljava/lang/String;
	public final fun key (Ljava/lang/String;)Lorg/partiql/plan/builder/RelOpExcludeTypeStructKeyBuilder;
	public final fun setKey (Ljava/lang/String;)V
}

public final class org/partiql/plan/builder/RelOpExcludeTypeStructSymbolBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;
	public final fun getSymbol ()Ljava/lang/String;
	public final fun setSymbol (Ljava/lang/String;)V
	public final fun symbol (Ljava/lang/String;)Lorg/partiql/plan/builder/RelOpExcludeTypeStructSymbolBuilder;
}

public final class org/partiql/plan/builder/RelOpExcludeTypeStructWildcardBuilder {
	public fun <init> ()V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;
}

public final class org/partiql/plan/builder/RelOpFilterBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Filter;
	public final fun getInput ()Lorg/partiql/plan/Rel;
	public final fun getPredicate ()Lorg/partiql/plan/Rex;
	public final fun input (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpFilterBuilder;
	public final fun predicate (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RelOpFilterBuilder;
	public final fun setInput (Lorg/partiql/plan/Rel;)V
	public final fun setPredicate (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RelOpJoinBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Join$Type;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Join$Type;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Join;
	public final fun getLhs ()Lorg/partiql/plan/Rel;
	public final fun getRex ()Lorg/partiql/plan/Rex;
	public final fun getRhs ()Lorg/partiql/plan/Rel;
	public final fun getType ()Lorg/partiql/plan/Rel$Op$Join$Type;
	public final fun lhs (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpJoinBuilder;
	public final fun rex (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RelOpJoinBuilder;
	public final fun rhs (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpJoinBuilder;
	public final fun setLhs (Lorg/partiql/plan/Rel;)V
	public final fun setRex (Lorg/partiql/plan/Rex;)V
	public final fun setRhs (Lorg/partiql/plan/Rel;)V
	public final fun setType (Lorg/partiql/plan/Rel$Op$Join$Type;)V
	public final fun type (Lorg/partiql/plan/Rel$Op$Join$Type;)Lorg/partiql/plan/builder/RelOpJoinBuilder;
}

public final class org/partiql/plan/builder/RelOpLimitBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Limit;
	public final fun getInput ()Lorg/partiql/plan/Rel;
	public final fun getLimit ()Lorg/partiql/plan/Rex;
	public final fun input (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpLimitBuilder;
	public final fun limit (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RelOpLimitBuilder;
	public final fun setInput (Lorg/partiql/plan/Rel;)V
	public final fun setLimit (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RelOpOffsetBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Offset;
	public final fun getInput ()Lorg/partiql/plan/Rel;
	public final fun getOffset ()Lorg/partiql/plan/Rex;
	public final fun input (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpOffsetBuilder;
	public final fun offset (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RelOpOffsetBuilder;
	public final fun setInput (Lorg/partiql/plan/Rel;)V
	public final fun setOffset (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RelOpProjectBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Project;
	public final fun getInput ()Lorg/partiql/plan/Rel;
	public final fun getProjections ()Ljava/util/List;
	public final fun input (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpProjectBuilder;
	public final fun projections (Ljava/util/List;)Lorg/partiql/plan/builder/RelOpProjectBuilder;
	public final fun setInput (Lorg/partiql/plan/Rel;)V
	public final fun setProjections (Ljava/util/List;)V
}

public final class org/partiql/plan/builder/RelOpScanBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Scan;
	public final fun getRex ()Lorg/partiql/plan/Rex;
	public final fun rex (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RelOpScanBuilder;
	public final fun setRex (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RelOpScanIndexedBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$ScanIndexed;
	public final fun getRex ()Lorg/partiql/plan/Rex;
	public final fun rex (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RelOpScanIndexedBuilder;
	public final fun setRex (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RelOpSetExceptBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Set$Except;
	public final fun getLhs ()Lorg/partiql/plan/Rel;
	public final fun getQuantifier ()Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final fun getRhs ()Lorg/partiql/plan/Rel;
	public final fun lhs (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpSetExceptBuilder;
	public final fun quantifier (Lorg/partiql/plan/Rel$Op$Set$Quantifier;)Lorg/partiql/plan/builder/RelOpSetExceptBuilder;
	public final fun rhs (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpSetExceptBuilder;
	public final fun setLhs (Lorg/partiql/plan/Rel;)V
	public final fun setQuantifier (Lorg/partiql/plan/Rel$Op$Set$Quantifier;)V
	public final fun setRhs (Lorg/partiql/plan/Rel;)V
}

public final class org/partiql/plan/builder/RelOpSetIntersectBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Set$Intersect;
	public final fun getLhs ()Lorg/partiql/plan/Rel;
	public final fun getQuantifier ()Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final fun getRhs ()Lorg/partiql/plan/Rel;
	public final fun lhs (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpSetIntersectBuilder;
	public final fun quantifier (Lorg/partiql/plan/Rel$Op$Set$Quantifier;)Lorg/partiql/plan/builder/RelOpSetIntersectBuilder;
	public final fun rhs (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpSetIntersectBuilder;
	public final fun setLhs (Lorg/partiql/plan/Rel;)V
	public final fun setQuantifier (Lorg/partiql/plan/Rel$Op$Set$Quantifier;)V
	public final fun setRhs (Lorg/partiql/plan/Rel;)V
}

public final class org/partiql/plan/builder/RelOpSetUnionBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel$Op$Set$Quantifier;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rel;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Set$Union;
	public final fun getLhs ()Lorg/partiql/plan/Rel;
	public final fun getQuantifier ()Lorg/partiql/plan/Rel$Op$Set$Quantifier;
	public final fun getRhs ()Lorg/partiql/plan/Rel;
	public final fun lhs (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpSetUnionBuilder;
	public final fun quantifier (Lorg/partiql/plan/Rel$Op$Set$Quantifier;)Lorg/partiql/plan/builder/RelOpSetUnionBuilder;
	public final fun rhs (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpSetUnionBuilder;
	public final fun setLhs (Lorg/partiql/plan/Rel;)V
	public final fun setQuantifier (Lorg/partiql/plan/Rel$Op$Set$Quantifier;)V
	public final fun setRhs (Lorg/partiql/plan/Rel;)V
}

public final class org/partiql/plan/builder/RelOpSortBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rel;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Sort;
	public final fun getInput ()Lorg/partiql/plan/Rel;
	public final fun getSpecs ()Ljava/util/List;
	public final fun input (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RelOpSortBuilder;
	public final fun setInput (Lorg/partiql/plan/Rel;)V
	public final fun setSpecs (Ljava/util/List;)V
	public final fun specs (Ljava/util/List;)Lorg/partiql/plan/builder/RelOpSortBuilder;
}

public final class org/partiql/plan/builder/RelOpSortSpecBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Sort$Order;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel$Op$Sort$Order;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Sort$Spec;
	public final fun getOrder ()Lorg/partiql/plan/Rel$Op$Sort$Order;
	public final fun getRex ()Lorg/partiql/plan/Rex;
	public final fun order (Lorg/partiql/plan/Rel$Op$Sort$Order;)Lorg/partiql/plan/builder/RelOpSortSpecBuilder;
	public final fun rex (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RelOpSortSpecBuilder;
	public final fun setOrder (Lorg/partiql/plan/Rel$Op$Sort$Order;)V
	public final fun setRex (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RelOpUnpivotBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Op$Unpivot;
	public final fun getRex ()Lorg/partiql/plan/Rex;
	public final fun rex (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RelOpUnpivotBuilder;
	public final fun setRex (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RelTypeBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/Set;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rel$Type;
	public final fun getProps ()Ljava/util/Set;
	public final fun getSchema ()Ljava/util/List;
	public final fun props (Ljava/util/Set;)Lorg/partiql/plan/builder/RelTypeBuilder;
	public final fun schema (Ljava/util/List;)Lorg/partiql/plan/builder/RelTypeBuilder;
	public final fun setProps (Ljava/util/Set;)V
	public final fun setSchema (Ljava/util/List;)V
}

public final class org/partiql/plan/builder/RexBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/types/PType;Lorg/partiql/plan/Rex$Op;)V
	public synthetic fun <init> (Lorg/partiql/types/PType;Lorg/partiql/plan/Rex$Op;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex;
	public final fun getOp ()Lorg/partiql/plan/Rex$Op;
	public final fun getType ()Lorg/partiql/types/PType;
	public final fun op (Lorg/partiql/plan/Rex$Op;)Lorg/partiql/plan/builder/RexBuilder;
	public final fun setOp (Lorg/partiql/plan/Rex$Op;)V
	public final fun setType (Lorg/partiql/types/PType;)V
	public final fun type (Lorg/partiql/types/PType;)Lorg/partiql/plan/builder/RexBuilder;
}

public final class org/partiql/plan/builder/RexOpCallDynamicBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun args (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpCallDynamicBuilder;
	public final fun build ()Lorg/partiql/plan/Rex$Op$Call$Dynamic;
	public final fun candidates (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpCallDynamicBuilder;
	public final fun getArgs ()Ljava/util/List;
	public final fun getCandidates ()Ljava/util/List;
	public final fun setArgs (Ljava/util/List;)V
	public final fun setCandidates (Ljava/util/List;)V
}

public final class org/partiql/plan/builder/RexOpCallDynamicCandidateBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Ref;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Ref;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;
	public final fun coercions (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpCallDynamicCandidateBuilder;
	public final fun fn (Lorg/partiql/plan/Ref;)Lorg/partiql/plan/builder/RexOpCallDynamicCandidateBuilder;
	public final fun getCoercions ()Ljava/util/List;
	public final fun getFn ()Lorg/partiql/plan/Ref;
	public final fun setCoercions (Ljava/util/List;)V
	public final fun setFn (Lorg/partiql/plan/Ref;)V
}

public final class org/partiql/plan/builder/RexOpCallStaticBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Ref;Ljava/util/List;)V
	public synthetic fun <init> (Lorg/partiql/plan/Ref;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun args (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpCallStaticBuilder;
	public final fun build ()Lorg/partiql/plan/Rex$Op$Call$Static;
	public final fun fn (Lorg/partiql/plan/Ref;)Lorg/partiql/plan/builder/RexOpCallStaticBuilder;
	public final fun getArgs ()Ljava/util/List;
	public final fun getFn ()Lorg/partiql/plan/Ref;
	public final fun setArgs (Ljava/util/List;)V
	public final fun setFn (Lorg/partiql/plan/Ref;)V
}

public final class org/partiql/plan/builder/RexOpCaseBranchBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Case$Branch;
	public final fun condition (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpCaseBranchBuilder;
	public final fun getCondition ()Lorg/partiql/plan/Rex;
	public final fun getRex ()Lorg/partiql/plan/Rex;
	public final fun rex (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpCaseBranchBuilder;
	public final fun setCondition (Lorg/partiql/plan/Rex;)V
	public final fun setRex (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RexOpCaseBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Ljava/util/List;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun branches (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpCaseBuilder;
	public final fun build ()Lorg/partiql/plan/Rex$Op$Case;
	public final fun default (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpCaseBuilder;
	public final fun getBranches ()Ljava/util/List;
	public final fun getDefault ()Lorg/partiql/plan/Rex;
	public final fun setBranches (Ljava/util/List;)V
	public final fun setDefault (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RexOpCastBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Ref$Cast;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Ref$Cast;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun arg (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpCastBuilder;
	public final fun build ()Lorg/partiql/plan/Rex$Op$Cast;
	public final fun cast (Lorg/partiql/plan/Ref$Cast;)Lorg/partiql/plan/builder/RexOpCastBuilder;
	public final fun getArg ()Lorg/partiql/plan/Rex;
	public final fun getCast ()Lorg/partiql/plan/Ref$Cast;
	public final fun setArg (Lorg/partiql/plan/Rex;)V
	public final fun setCast (Lorg/partiql/plan/Ref$Cast;)V
}

public final class org/partiql/plan/builder/RexOpCoalesceBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun args (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpCoalesceBuilder;
	public final fun build ()Lorg/partiql/plan/Rex$Op$Coalesce;
	public final fun getArgs ()Ljava/util/List;
	public final fun setArgs (Ljava/util/List;)V
}

public final class org/partiql/plan/builder/RexOpCollectionBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Collection;
	public final fun getValues ()Ljava/util/List;
	public final fun setValues (Ljava/util/List;)V
	public final fun values (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpCollectionBuilder;
}

public final class org/partiql/plan/builder/RexOpErrBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Err;
	public final fun causes (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpErrBuilder;
	public final fun getCauses ()Ljava/util/List;
	public final fun getMessage ()Ljava/lang/String;
	public final fun message (Ljava/lang/String;)Lorg/partiql/plan/builder/RexOpErrBuilder;
	public final fun setCauses (Ljava/util/List;)V
	public final fun setMessage (Ljava/lang/String;)V
}

public final class org/partiql/plan/builder/RexOpGlobalBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Ref;)V
	public synthetic fun <init> (Lorg/partiql/plan/Ref;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Global;
	public final fun getRef ()Lorg/partiql/plan/Ref;
	public final fun ref (Lorg/partiql/plan/Ref;)Lorg/partiql/plan/builder/RexOpGlobalBuilder;
	public final fun setRef (Lorg/partiql/plan/Ref;)V
}

public final class org/partiql/plan/builder/RexOpLitBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/value/PartiQLValue;)V
	public synthetic fun <init> (Lorg/partiql/value/PartiQLValue;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Lit;
	public final fun getValue ()Lorg/partiql/value/PartiQLValue;
	public final fun setValue (Lorg/partiql/value/PartiQLValue;)V
	public final fun value (Lorg/partiql/value/PartiQLValue;)Lorg/partiql/plan/builder/RexOpLitBuilder;
}

public final class org/partiql/plan/builder/RexOpMissingBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Missing;
	public final fun causes (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpMissingBuilder;
	public final fun getCauses ()Ljava/util/List;
	public final fun getMessage ()Ljava/lang/String;
	public final fun message (Ljava/lang/String;)Lorg/partiql/plan/builder/RexOpMissingBuilder;
	public final fun setCauses (Ljava/util/List;)V
	public final fun setMessage (Ljava/lang/String;)V
}

public final class org/partiql/plan/builder/RexOpNullifBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Nullif;
	public final fun getNullifier ()Lorg/partiql/plan/Rex;
	public final fun getValue ()Lorg/partiql/plan/Rex;
	public final fun nullifier (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpNullifBuilder;
	public final fun setNullifier (Lorg/partiql/plan/Rex;)V
	public final fun setValue (Lorg/partiql/plan/Rex;)V
	public final fun value (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpNullifBuilder;
}

public final class org/partiql/plan/builder/RexOpPathIndexBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Path$Index;
	public final fun getKey ()Lorg/partiql/plan/Rex;
	public final fun getRoot ()Lorg/partiql/plan/Rex;
	public final fun key (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpPathIndexBuilder;
	public final fun root (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpPathIndexBuilder;
	public final fun setKey (Lorg/partiql/plan/Rex;)V
	public final fun setRoot (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RexOpPathKeyBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Path$Key;
	public final fun getKey ()Lorg/partiql/plan/Rex;
	public final fun getRoot ()Lorg/partiql/plan/Rex;
	public final fun key (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpPathKeyBuilder;
	public final fun root (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpPathKeyBuilder;
	public final fun setKey (Lorg/partiql/plan/Rex;)V
	public final fun setRoot (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RexOpPathSymbolBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Path$Symbol;
	public final fun getKey ()Ljava/lang/String;
	public final fun getRoot ()Lorg/partiql/plan/Rex;
	public final fun key (Ljava/lang/String;)Lorg/partiql/plan/builder/RexOpPathSymbolBuilder;
	public final fun root (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpPathSymbolBuilder;
	public final fun setKey (Ljava/lang/String;)V
	public final fun setRoot (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/builder/RexOpPivotBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Pivot;
	public final fun getKey ()Lorg/partiql/plan/Rex;
	public final fun getRel ()Lorg/partiql/plan/Rel;
	public final fun getValue ()Lorg/partiql/plan/Rex;
	public final fun key (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpPivotBuilder;
	public final fun rel (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RexOpPivotBuilder;
	public final fun setKey (Lorg/partiql/plan/Rex;)V
	public final fun setRel (Lorg/partiql/plan/Rel;)V
	public final fun setValue (Lorg/partiql/plan/Rex;)V
	public final fun value (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpPivotBuilder;
}

public final class org/partiql/plan/builder/RexOpSelectBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Select;
	public final fun constructor (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpSelectBuilder;
	public final fun getConstructor ()Lorg/partiql/plan/Rex;
	public final fun getRel ()Lorg/partiql/plan/Rel;
	public final fun rel (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RexOpSelectBuilder;
	public final fun setConstructor (Lorg/partiql/plan/Rex;)V
	public final fun setRel (Lorg/partiql/plan/Rel;)V
}

public final class org/partiql/plan/builder/RexOpStructBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Struct;
	public final fun fields (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpStructBuilder;
	public final fun getFields ()Ljava/util/List;
	public final fun setFields (Ljava/util/List;)V
}

public final class org/partiql/plan/builder/RexOpStructFieldBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Struct$Field;
	public final fun getK ()Lorg/partiql/plan/Rex;
	public final fun getV ()Lorg/partiql/plan/Rex;
	public final fun k (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpStructFieldBuilder;
	public final fun setK (Lorg/partiql/plan/Rex;)V
	public final fun setV (Lorg/partiql/plan/Rex;)V
	public final fun v (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpStructFieldBuilder;
}

public final class org/partiql/plan/builder/RexOpSubqueryBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex$Op$Subquery$Coercion;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;Lorg/partiql/plan/Rel;Lorg/partiql/plan/Rex$Op$Subquery$Coercion;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Subquery;
	public final fun coercion (Lorg/partiql/plan/Rex$Op$Subquery$Coercion;)Lorg/partiql/plan/builder/RexOpSubqueryBuilder;
	public final fun constructor (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/RexOpSubqueryBuilder;
	public final fun getCoercion ()Lorg/partiql/plan/Rex$Op$Subquery$Coercion;
	public final fun getConstructor ()Lorg/partiql/plan/Rex;
	public final fun getRel ()Lorg/partiql/plan/Rel;
	public final fun rel (Lorg/partiql/plan/Rel;)Lorg/partiql/plan/builder/RexOpSubqueryBuilder;
	public final fun setCoercion (Lorg/partiql/plan/Rex$Op$Subquery$Coercion;)V
	public final fun setConstructor (Lorg/partiql/plan/Rex;)V
	public final fun setRel (Lorg/partiql/plan/Rel;)V
}

public final class org/partiql/plan/builder/RexOpTupleUnionBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun args (Ljava/util/List;)Lorg/partiql/plan/builder/RexOpTupleUnionBuilder;
	public final fun build ()Lorg/partiql/plan/Rex$Op$TupleUnion;
	public final fun getArgs ()Ljava/util/List;
	public final fun setArgs (Ljava/util/List;)V
}

public final class org/partiql/plan/builder/RexOpVarBuilder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Integer;Ljava/lang/Integer;)V
	public synthetic fun <init> (Ljava/lang/Integer;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Rex$Op$Var;
	public final fun depth (Ljava/lang/Integer;)Lorg/partiql/plan/builder/RexOpVarBuilder;
	public final fun getDepth ()Ljava/lang/Integer;
	public final fun getRef ()Ljava/lang/Integer;
	public final fun ref (Ljava/lang/Integer;)Lorg/partiql/plan/builder/RexOpVarBuilder;
	public final fun setDepth (Ljava/lang/Integer;)V
	public final fun setRef (Ljava/lang/Integer;)V
}

public final class org/partiql/plan/builder/StatementQueryBuilder {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Rex;)V
	public synthetic fun <init> (Lorg/partiql/plan/Rex;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lorg/partiql/plan/Statement$Query;
	public final fun getRoot ()Lorg/partiql/plan/Rex;
	public final fun root (Lorg/partiql/plan/Rex;)Lorg/partiql/plan/builder/StatementQueryBuilder;
	public final fun setRoot (Lorg/partiql/plan/Rex;)V
}

public final class org/partiql/plan/debug/PlanPrinter {
	public static final field INSTANCE Lorg/partiql/plan/debug/PlanPrinter;
	public final fun append (Ljava/lang/Appendable;Lorg/partiql/plan/PlanNode;)V
	public final fun toString (Lorg/partiql/plan/PlanNode;)Ljava/lang/String;
}

public abstract class org/partiql/plan/util/PlanRewriter : org/partiql/plan/visitor/PlanBaseVisitor {
	public fun <init> ()V
	public synthetic fun defaultReturn (Lorg/partiql/plan/PlanNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun defaultReturn (Lorg/partiql/plan/PlanNode;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitCatalog (Lorg/partiql/plan/Catalog;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalog (Lorg/partiql/plan/Catalog;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitCatalogItemAgg (Lorg/partiql/plan/Catalog$Item$Agg;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalogItemAgg (Lorg/partiql/plan/Catalog$Item$Agg;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitCatalogItemFn (Lorg/partiql/plan/Catalog$Item$Fn;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalogItemFn (Lorg/partiql/plan/Catalog$Item$Fn;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitCatalogItemValue (Lorg/partiql/plan/Catalog$Item$Value;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalogItemValue (Lorg/partiql/plan/Catalog$Item$Value;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitIdentifierQualified (Lorg/partiql/plan/Identifier$Qualified;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifierQualified (Lorg/partiql/plan/Identifier$Qualified;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitIdentifierSymbol (Lorg/partiql/plan/Identifier$Symbol;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifierSymbol (Lorg/partiql/plan/Identifier$Symbol;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitPartiQLPlan (Lorg/partiql/plan/PartiQLPlan;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPartiQLPlan (Lorg/partiql/plan/PartiQLPlan;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRef (Lorg/partiql/plan/Ref;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRef (Lorg/partiql/plan/Ref;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRefCast (Lorg/partiql/plan/Ref$Cast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRefCast (Lorg/partiql/plan/Ref$Cast;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRel (Lorg/partiql/plan/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRel (Lorg/partiql/plan/Rel;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelBinding (Lorg/partiql/plan/Rel$Binding;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelBinding (Lorg/partiql/plan/Rel$Binding;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpAggregate (Lorg/partiql/plan/Rel$Op$Aggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpAggregate (Lorg/partiql/plan/Rel$Op$Aggregate;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpAggregateCall (Lorg/partiql/plan/Rel$Op$Aggregate$Call;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpAggregateCall (Lorg/partiql/plan/Rel$Op$Aggregate$Call;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpDistinct (Lorg/partiql/plan/Rel$Op$Distinct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpDistinct (Lorg/partiql/plan/Rel$Op$Distinct;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpErr (Lorg/partiql/plan/Rel$Op$Err;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpErr (Lorg/partiql/plan/Rel$Op$Err;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpExclude (Lorg/partiql/plan/Rel$Op$Exclude;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExclude (Lorg/partiql/plan/Rel$Op$Exclude;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpExcludePath (Lorg/partiql/plan/Rel$Op$Exclude$Path;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludePath (Lorg/partiql/plan/Rel$Op$Exclude$Path;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpExcludeStep (Lorg/partiql/plan/Rel$Op$Exclude$Step;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeStep (Lorg/partiql/plan/Rel$Op$Exclude$Step;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpExcludeTypeCollIndex (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeCollIndex (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpExcludeTypeCollWildcard (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeCollWildcard (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpExcludeTypeStructKey (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeStructKey (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpExcludeTypeStructSymbol (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeStructSymbol (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpExcludeTypeStructWildcard (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeStructWildcard (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpFilter (Lorg/partiql/plan/Rel$Op$Filter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpFilter (Lorg/partiql/plan/Rel$Op$Filter;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpJoin (Lorg/partiql/plan/Rel$Op$Join;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpJoin (Lorg/partiql/plan/Rel$Op$Join;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpLimit (Lorg/partiql/plan/Rel$Op$Limit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpLimit (Lorg/partiql/plan/Rel$Op$Limit;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpOffset (Lorg/partiql/plan/Rel$Op$Offset;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpOffset (Lorg/partiql/plan/Rel$Op$Offset;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpProject (Lorg/partiql/plan/Rel$Op$Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpProject (Lorg/partiql/plan/Rel$Op$Project;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpScan (Lorg/partiql/plan/Rel$Op$Scan;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpScan (Lorg/partiql/plan/Rel$Op$Scan;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpScanIndexed (Lorg/partiql/plan/Rel$Op$ScanIndexed;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpScanIndexed (Lorg/partiql/plan/Rel$Op$ScanIndexed;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpSetExcept (Lorg/partiql/plan/Rel$Op$Set$Except;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSetExcept (Lorg/partiql/plan/Rel$Op$Set$Except;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpSetIntersect (Lorg/partiql/plan/Rel$Op$Set$Intersect;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSetIntersect (Lorg/partiql/plan/Rel$Op$Set$Intersect;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpSetUnion (Lorg/partiql/plan/Rel$Op$Set$Union;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSetUnion (Lorg/partiql/plan/Rel$Op$Set$Union;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpSort (Lorg/partiql/plan/Rel$Op$Sort;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSort (Lorg/partiql/plan/Rel$Op$Sort;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpSortSpec (Lorg/partiql/plan/Rel$Op$Sort$Spec;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSortSpec (Lorg/partiql/plan/Rel$Op$Sort$Spec;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelOpUnpivot (Lorg/partiql/plan/Rel$Op$Unpivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpUnpivot (Lorg/partiql/plan/Rel$Op$Unpivot;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRelType (Lorg/partiql/plan/Rel$Type;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelType (Lorg/partiql/plan/Rel$Type;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRex (Lorg/partiql/plan/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRex (Lorg/partiql/plan/Rex;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpCallDynamic (Lorg/partiql/plan/Rex$Op$Call$Dynamic;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCallDynamic (Lorg/partiql/plan/Rex$Op$Call$Dynamic;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpCallDynamicCandidate (Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCallDynamicCandidate (Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpCallStatic (Lorg/partiql/plan/Rex$Op$Call$Static;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCallStatic (Lorg/partiql/plan/Rex$Op$Call$Static;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpCase (Lorg/partiql/plan/Rex$Op$Case;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCase (Lorg/partiql/plan/Rex$Op$Case;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpCaseBranch (Lorg/partiql/plan/Rex$Op$Case$Branch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCaseBranch (Lorg/partiql/plan/Rex$Op$Case$Branch;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpCast (Lorg/partiql/plan/Rex$Op$Cast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCast (Lorg/partiql/plan/Rex$Op$Cast;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpCoalesce (Lorg/partiql/plan/Rex$Op$Coalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCoalesce (Lorg/partiql/plan/Rex$Op$Coalesce;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpCollection (Lorg/partiql/plan/Rex$Op$Collection;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCollection (Lorg/partiql/plan/Rex$Op$Collection;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpErr (Lorg/partiql/plan/Rex$Op$Err;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpErr (Lorg/partiql/plan/Rex$Op$Err;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpGlobal (Lorg/partiql/plan/Rex$Op$Global;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpGlobal (Lorg/partiql/plan/Rex$Op$Global;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpLit (Lorg/partiql/plan/Rex$Op$Lit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpLit (Lorg/partiql/plan/Rex$Op$Lit;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpMissing (Lorg/partiql/plan/Rex$Op$Missing;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpMissing (Lorg/partiql/plan/Rex$Op$Missing;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpNullif (Lorg/partiql/plan/Rex$Op$Nullif;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpNullif (Lorg/partiql/plan/Rex$Op$Nullif;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpPathIndex (Lorg/partiql/plan/Rex$Op$Path$Index;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPathIndex (Lorg/partiql/plan/Rex$Op$Path$Index;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpPathKey (Lorg/partiql/plan/Rex$Op$Path$Key;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPathKey (Lorg/partiql/plan/Rex$Op$Path$Key;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpPathSymbol (Lorg/partiql/plan/Rex$Op$Path$Symbol;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPathSymbol (Lorg/partiql/plan/Rex$Op$Path$Symbol;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpPivot (Lorg/partiql/plan/Rex$Op$Pivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPivot (Lorg/partiql/plan/Rex$Op$Pivot;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpSelect (Lorg/partiql/plan/Rex$Op$Select;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpSelect (Lorg/partiql/plan/Rex$Op$Select;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpStruct (Lorg/partiql/plan/Rex$Op$Struct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpStruct (Lorg/partiql/plan/Rex$Op$Struct;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpStructField (Lorg/partiql/plan/Rex$Op$Struct$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpStructField (Lorg/partiql/plan/Rex$Op$Struct$Field;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpSubquery (Lorg/partiql/plan/Rex$Op$Subquery;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpSubquery (Lorg/partiql/plan/Rex$Op$Subquery;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpTupleUnion (Lorg/partiql/plan/Rex$Op$TupleUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpTupleUnion (Lorg/partiql/plan/Rex$Op$TupleUnion;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitRexOpVar (Lorg/partiql/plan/Rex$Op$Var;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpVar (Lorg/partiql/plan/Rex$Op$Var;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
	public synthetic fun visitStatementQuery (Lorg/partiql/plan/Statement$Query;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStatementQuery (Lorg/partiql/plan/Statement$Query;Ljava/lang/Object;)Lorg/partiql/plan/PlanNode;
}

public abstract interface class org/partiql/plan/v1/Plan {
	public abstract fun getCatalogs ()Ljava/util/List;
	public abstract fun getStatement ()Lorg/partiql/plan/v1/Statement;
	public abstract fun getVersion ()Lorg/partiql/plan/v1/Version;
}

public abstract interface class org/partiql/plan/v1/Schema {
	public abstract fun getField (Ljava/lang/String;)Lorg/partiql/types/Field;
	public abstract fun getFields ()Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/Statement {
}

public abstract interface class org/partiql/plan/v1/Statement$Query {
	public abstract fun getRoot ()Lorg/partiql/plan/v1/rex/Rex;
}

public abstract interface class org/partiql/plan/v1/Version {
	public abstract fun toString ()Ljava/lang/String;
}

public abstract interface class org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public abstract interface class org/partiql/plan/v1/rel/RelAggregate : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getCalls ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelAggregate$Base : org/partiql/plan/v1/rel/RelAggregate {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCalls ()Ljava/util/List;
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getInputs ()Ljava/util/List;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelAggregate$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelAggregate;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelAggregate;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelAggregate;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelAggregateCall {
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getType ()Lorg/partiql/types/PType;
	public abstract fun isDistinct ()Z
}

public abstract interface class org/partiql/plan/v1/rel/RelCollation {
	public abstract fun getNulls ()Lorg/partiql/plan/v1/rel/RelCollation$Nulls;
	public abstract fun getOrder ()Lorg/partiql/plan/v1/rel/RelCollation$Order;
	public abstract fun getRex ()Lorg/partiql/plan/v1/rex/Rex;
}

public final class org/partiql/plan/v1/rel/RelCollation$Nulls : java/lang/Enum {
	public static final field FIRST Lorg/partiql/plan/v1/rel/RelCollation$Nulls;
	public static final field LAST Lorg/partiql/plan/v1/rel/RelCollation$Nulls;
	public static final field OTHER Lorg/partiql/plan/v1/rel/RelCollation$Nulls;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/rel/RelCollation$Nulls;
	public static fun values ()[Lorg/partiql/plan/v1/rel/RelCollation$Nulls;
}

public final class org/partiql/plan/v1/rel/RelCollation$Order : java/lang/Enum {
	public static final field ASC Lorg/partiql/plan/v1/rel/RelCollation$Order;
	public static final field DESC Lorg/partiql/plan/v1/rel/RelCollation$Order;
	public static final field OTHER Lorg/partiql/plan/v1/rel/RelCollation$Order;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/rel/RelCollation$Order;
	public static fun values ()[Lorg/partiql/plan/v1/rel/RelCollation$Order;
}

public abstract interface class org/partiql/plan/v1/rel/RelDistinct : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelDistinct$Base : org/partiql/plan/v1/rel/RelDistinct {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getInputs ()Ljava/util/List;
	public fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelDistinct$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelDistinct;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelDistinct;)Ljava/util/List;
	public static fun getSchema (Lorg/partiql/plan/v1/rel/RelDistinct;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelDistinct;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelExcept : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun isAll ()Z
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelExcept$Base : org/partiql/plan/v1/rel/RelExcept {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rel/Rel;)V
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rel/Rel;Z)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInputs ()Ljava/util/List;
	public fun getLeft ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getRight ()Lorg/partiql/plan/v1/rel/Rel;
	public fun hashCode ()I
	public fun isAll ()Z
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelExcept$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelExcept;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelExcept;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelExcept;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelExclude : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getPaths ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelExclude$Base : org/partiql/plan/v1/rel/RelExclude {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getInputs ()Ljava/util/List;
	public fun getPaths ()Ljava/util/List;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelExclude$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelExclude;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelExclude;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelExclude;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelExcludePath {
	public abstract fun getRoot ()Lorg/partiql/plan/v1/rex/RexVar;
	public abstract fun getSteps ()Lorg/partiql/plan/v1/rel/RelExcludeStep;
}

public abstract interface class org/partiql/plan/v1/rel/RelExcludeStep {
	public abstract fun getSubsteps ()Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rel/RelExcludeStep$CollectionWildcard : org/partiql/plan/v1/rel/RelExcludeStep {
}

public abstract interface class org/partiql/plan/v1/rel/RelExcludeStep$Index : org/partiql/plan/v1/rel/RelExcludeStep {
	public abstract fun getIndex ()I
}

public abstract interface class org/partiql/plan/v1/rel/RelExcludeStep$Key : org/partiql/plan/v1/rel/RelExcludeStep {
	public abstract fun getKey ()Ljava/lang/String;
}

public abstract interface class org/partiql/plan/v1/rel/RelExcludeStep$StructWildcard : org/partiql/plan/v1/rel/RelExcludeStep {
}

public abstract interface class org/partiql/plan/v1/rel/RelExcludeStep$Symbol : org/partiql/plan/v1/rel/RelExcludeStep {
	public abstract fun getSymbol ()Ljava/lang/String;
}

public abstract interface class org/partiql/plan/v1/rel/RelFilter : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getPredicate ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelFilter$Base : org/partiql/plan/v1/rel/RelFilter {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getInputs ()Ljava/util/List;
	public fun getPredicate ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelFilter$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelFilter;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelFilter;)Ljava/util/List;
	public static fun getSchema (Lorg/partiql/plan/v1/rel/RelFilter;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelFilter;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelIntersect : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun isAll ()Z
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelIntersect$Base : org/partiql/plan/v1/rel/RelIntersect {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rel/Rel;)V
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rel/Rel;Z)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInputs ()Ljava/util/List;
	public fun getLeft ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getRight ()Lorg/partiql/plan/v1/rel/Rel;
	public fun hashCode ()I
	public fun isAll ()Z
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelIntersect$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelIntersect;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelIntersect;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelIntersect;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelJoin : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getCondition ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getType ()Lorg/partiql/plan/v1/rel/RelJoinType;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelJoin$Base : org/partiql/plan/v1/rel/RelJoin {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rex/Rex;Lorg/partiql/plan/v1/rel/RelJoinType;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCondition ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getInputs ()Ljava/util/List;
	public fun getLeft ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getRight ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getType ()Lorg/partiql/plan/v1/rel/RelJoinType;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelJoin$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelJoin;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelJoin;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelJoin;)Z
}

public final class org/partiql/plan/v1/rel/RelJoinType : java/lang/Enum {
	public static final field FULL Lorg/partiql/plan/v1/rel/RelJoinType;
	public static final field INNER Lorg/partiql/plan/v1/rel/RelJoinType;
	public static final field LEFT Lorg/partiql/plan/v1/rel/RelJoinType;
	public static final field OTHER Lorg/partiql/plan/v1/rel/RelJoinType;
	public static final field RIGHT Lorg/partiql/plan/v1/rel/RelJoinType;
	public static fun valueOf (Ljava/lang/String;)Lorg/partiql/plan/v1/rel/RelJoinType;
	public static fun values ()[Lorg/partiql/plan/v1/rel/RelJoinType;
}

public abstract interface class org/partiql/plan/v1/rel/RelLimit : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getLimit ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelLimit$Base : org/partiql/plan/v1/rel/RelLimit {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getInputs ()Ljava/util/List;
	public fun getLimit ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelLimit$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelLimit;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelLimit;)Ljava/util/List;
	public static fun getSchema (Lorg/partiql/plan/v1/rel/RelLimit;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelLimit;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelOffset : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getOffset ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelOffset$Base : org/partiql/plan/v1/rel/RelOffset {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getInputs ()Ljava/util/List;
	public fun getOffset ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getSchema ()Lorg/partiql/plan/v1/Schema;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelOffset$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelOffset;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelOffset;)Ljava/util/List;
	public static fun getSchema (Lorg/partiql/plan/v1/rel/RelOffset;)Lorg/partiql/plan/v1/Schema;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelOffset;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelProject : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getProjections ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelProject$Base : org/partiql/plan/v1/rel/RelProject {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getInputs ()Ljava/util/List;
	public fun getProjections ()Ljava/util/List;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelProject$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelProject;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelProject;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelProject;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelScan : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelScan$Base : org/partiql/plan/v1/rel/RelScan {
	public fun <init> (Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getInputs ()Ljava/util/List;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelScan$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelScan;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelScan;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelScan;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelScanIndexed : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelScanIndexed$Base : org/partiql/plan/v1/rel/RelScanIndexed {
	public fun <init> (Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getInputs ()Ljava/util/List;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelScanIndexed$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelScanIndexed;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelScanIndexed;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelScanIndexed;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelSort : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getCollations ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelSort$Base : org/partiql/plan/v1/rel/RelSort {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCollations ()Ljava/util/List;
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getInputs ()Ljava/util/List;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelSort$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelSort;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelSort;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelSort;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelUnion : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun getLeft ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun isAll ()Z
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelUnion$Base : org/partiql/plan/v1/rel/RelUnion {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rel/Rel;)V
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rel/Rel;Z)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInputs ()Ljava/util/List;
	public fun getLeft ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getRight ()Lorg/partiql/plan/v1/rel/Rel;
	public fun hashCode ()I
	public fun isAll ()Z
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelUnion$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelUnion;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelUnion;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelUnion;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelUnpivot : org/partiql/plan/v1/rel/Rel {
	public abstract fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getInputs ()Ljava/util/List;
	public abstract fun isOrdered ()Z
}

public abstract class org/partiql/plan/v1/rel/RelUnpivot$Base : org/partiql/plan/v1/rel/RelUnpivot {
	public fun <init> (Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getInputs ()Ljava/util/List;
	public fun hashCode ()I
	public fun isOrdered ()Z
}

public final class org/partiql/plan/v1/rel/RelUnpivot$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rel/RelUnpivot;Lorg/partiql/plan/v1/rel/RelVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getInputs (Lorg/partiql/plan/v1/rel/RelUnpivot;)Ljava/util/List;
	public static fun isOrdered (Lorg/partiql/plan/v1/rel/RelUnpivot;)Z
}

public abstract interface class org/partiql/plan/v1/rel/RelVisitor {
	public abstract fun defaultReturn (Lorg/partiql/plan/v1/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun defaultVisit (Lorg/partiql/plan/v1/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visit (Lorg/partiql/plan/v1/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitAggregate (Lorg/partiql/plan/v1/rel/RelAggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitDistinct (Lorg/partiql/plan/v1/rel/RelDistinct;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitExcept (Lorg/partiql/plan/v1/rel/RelExcept;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitExclude (Lorg/partiql/plan/v1/rel/RelExclude;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitFilter (Lorg/partiql/plan/v1/rel/RelFilter;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitIntersect (Lorg/partiql/plan/v1/rel/RelIntersect;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitJoin (Lorg/partiql/plan/v1/rel/RelJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitLimit (Lorg/partiql/plan/v1/rel/RelLimit;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitOffset (Lorg/partiql/plan/v1/rel/RelOffset;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitProject (Lorg/partiql/plan/v1/rel/RelProject;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitScan (Lorg/partiql/plan/v1/rel/RelScan;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitScanIndexed (Lorg/partiql/plan/v1/rel/RelScanIndexed;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSort (Lorg/partiql/plan/v1/rel/RelSort;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitUnion (Lorg/partiql/plan/v1/rel/RelUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitUnpivot (Lorg/partiql/plan/v1/rel/RelUnpivot;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/v1/rel/RelVisitor$DefaultImpls {
	public static fun defaultVisit (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visit (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitAggregate (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelAggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitDistinct (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelDistinct;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitExcept (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelExcept;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitExclude (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelExclude;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitFilter (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelFilter;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitIntersect (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelIntersect;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitJoin (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitLimit (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelLimit;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitOffset (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelOffset;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitProject (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelProject;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitScan (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelScan;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitScanIndexed (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelScanIndexed;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSort (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelSort;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitUnion (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitUnpivot (Lorg/partiql/plan/v1/rel/RelVisitor;Lorg/partiql/plan/v1/rel/RelUnpivot;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getOperands ()Ljava/util/List;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/rex/RexCall : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getFunction ()Ljava/lang/String;
	public abstract fun getOperands ()Ljava/util/List;
}

public abstract class org/partiql/plan/v1/rex/RexCall$Base : org/partiql/plan/v1/rex/RexCall {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getArgs ()Ljava/util/List;
	public final fun getFunction ()Ljava/lang/String;
	public fun getOperands ()Ljava/util/List;
	public fun getType ()Lorg/partiql/types/PType;
}

public final class org/partiql/plan/v1/rex/RexCall$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexCall;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexCall;)Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rex/RexCase : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getBranches ()Ljava/util/List;
	public abstract fun getDefault ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getMatch ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getOperands ()Ljava/util/List;
}

public abstract class org/partiql/plan/v1/rex/RexCase$Base : org/partiql/plan/v1/rex/RexCase {
	public fun <init> (Lorg/partiql/plan/v1/rex/Rex;Ljava/util/List;Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBranches ()Ljava/util/List;
	public fun getDefault ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getMatch ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getOperands ()Ljava/util/List;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexCase$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexCase;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexCase;)Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rex/RexCaseBranch {
	public abstract fun getCondition ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getResult ()Lorg/partiql/plan/v1/rex/Rex;
}

public abstract interface class org/partiql/plan/v1/rex/RexCast : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getOperand ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getOperands ()Ljava/util/List;
	public abstract fun getTarget ()Lorg/partiql/types/PType;
}

public abstract class org/partiql/plan/v1/rex/RexCast$Base : org/partiql/plan/v1/rex/RexCast {
	public fun <init> (Lorg/partiql/plan/v1/rex/Rex;Lorg/partiql/types/PType;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOperand ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getOperands ()Ljava/util/List;
	public fun getTarget ()Lorg/partiql/types/PType;
	public fun getType ()Lorg/partiql/types/PType;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexCast$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexCast;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexCast;)Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rex/RexCoalesce : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getOperands ()Ljava/util/List;
}

public abstract class org/partiql/plan/v1/rex/RexCoalesce$Base : org/partiql/plan/v1/rex/RexCoalesce {
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArgs ()Ljava/util/List;
	public fun getOperands ()Ljava/util/List;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexCoalesce$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexCoalesce;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexCoalesce;)Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rex/RexCollection : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getOperands ()Ljava/util/List;
	public abstract fun getValues ()Ljava/util/List;
}

public abstract class org/partiql/plan/v1/rex/RexCollection$Base : org/partiql/plan/v1/rex/RexCollection {
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOperands ()Ljava/util/List;
	public fun getValues ()Ljava/util/List;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexCollection$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexCollection;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexCollection;)Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rex/RexGlobal : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getCatalog ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOperands ()Ljava/util/List;
}

public abstract class org/partiql/plan/v1/rex/RexGlobal$Base : org/partiql/plan/v1/rex/RexGlobal {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCatalog ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getOperands ()Ljava/util/List;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexGlobal$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexGlobal;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexGlobal;)Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rex/RexLit : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getOperands ()Ljava/util/List;
	public abstract fun getType ()Lorg/partiql/types/PType;
	public abstract fun getValue ()Ljava/lang/String;
}

public abstract class org/partiql/plan/v1/rex/RexLit$Base : org/partiql/plan/v1/rex/RexLit {
	public fun <init> (Ljava/lang/String;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOperands ()Ljava/util/List;
	public fun getType ()Lorg/partiql/types/PType;
	public fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexLit$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexLit;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexLit;)Ljava/util/List;
	public static fun getType (Lorg/partiql/plan/v1/rex/RexLit;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/rex/RexPath : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getRoot ()Lorg/partiql/plan/v1/rex/Rex;
}

public final class org/partiql/plan/v1/rex/RexPath$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexPath;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/rex/RexPath$Index : org/partiql/plan/v1/rex/RexPath {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getIndex ()Lorg/partiql/plan/v1/rex/Rex;
}

public final class org/partiql/plan/v1/rex/RexPath$Index$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexPath$Index;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/rex/RexPath$Key : org/partiql/plan/v1/rex/RexPath {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getKey ()Lorg/partiql/plan/v1/rex/Rex;
}

public final class org/partiql/plan/v1/rex/RexPath$Key$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexPath$Key;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/rex/RexPath$Symbol : org/partiql/plan/v1/rex/RexPath {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getSymbol ()Ljava/lang/String;
}

public final class org/partiql/plan/v1/rex/RexPath$Symbol$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexPath$Symbol;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/rex/RexPivot : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getKey ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getOperands ()Ljava/util/List;
	public abstract fun getType ()Lorg/partiql/types/PType;
	public abstract fun getValue ()Lorg/partiql/plan/v1/rex/Rex;
}

public abstract class org/partiql/plan/v1/rex/RexPivot$Base : org/partiql/plan/v1/rex/RexPivot {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rex/Rex;Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getKey ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getOperands ()Ljava/util/List;
	public fun getType ()Lorg/partiql/types/PType;
	public fun getValue ()Lorg/partiql/plan/v1/rex/Rex;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexPivot$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexPivot;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexPivot;)Ljava/util/List;
	public static fun getType (Lorg/partiql/plan/v1/rex/RexPivot;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/rex/RexSelect : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getConstructor ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
}

public abstract class org/partiql/plan/v1/rex/RexSelect$Base : org/partiql/plan/v1/rex/RexSelect {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Lorg/partiql/plan/v1/rex/Rex;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConstructor ()Lorg/partiql/plan/v1/rex/Rex;
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexSelect$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexSelect;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/rex/RexStruct : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getFields ()Ljava/util/List;
	public abstract fun getOperands ()Ljava/util/List;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public abstract class org/partiql/plan/v1/rex/RexStruct$Base : org/partiql/plan/v1/rex/RexStruct {
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFields ()Ljava/util/List;
	public fun getOperands ()Ljava/util/List;
	public fun getType ()Lorg/partiql/types/PType;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexStruct$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexStruct;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexStruct;)Ljava/util/List;
	public static fun getType (Lorg/partiql/plan/v1/rex/RexStruct;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/rex/RexStructField {
	public abstract fun getKey ()Lorg/partiql/plan/v1/rex/Rex;
	public abstract fun getValue ()Lorg/partiql/plan/v1/rex/Rex;
}

public abstract interface class org/partiql/plan/v1/rex/RexSubquery : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getOperands ()Ljava/util/List;
}

public abstract class org/partiql/plan/v1/rex/RexSubquery$Base : org/partiql/plan/v1/rex/RexSubquery {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getOperands ()Ljava/util/List;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexSubquery$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexSubquery;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexSubquery;)Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rex/RexSubqueryIn : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public abstract fun getValues ()Ljava/util/List;
}

public abstract class org/partiql/plan/v1/rex/RexSubqueryIn$Base : org/partiql/plan/v1/rex/RexSubqueryIn {
	public fun <init> (Lorg/partiql/plan/v1/rel/Rel;Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getInput ()Lorg/partiql/plan/v1/rel/Rel;
	public fun getValues ()Ljava/util/List;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexSubqueryIn$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexSubqueryIn;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/v1/rex/RexTupleUnion : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getOperands ()Ljava/util/List;
	public abstract fun getType ()Lorg/partiql/types/PType;
}

public abstract class org/partiql/plan/v1/rex/RexTupleUnion$Base : org/partiql/plan/v1/rex/RexTupleUnion {
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArgs ()Ljava/util/List;
	public fun getOperands ()Ljava/util/List;
	public fun getType ()Lorg/partiql/types/PType;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexTupleUnion$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexTupleUnion;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexTupleUnion;)Ljava/util/List;
	public static fun getType (Lorg/partiql/plan/v1/rex/RexTupleUnion;)Lorg/partiql/types/PType;
}

public abstract interface class org/partiql/plan/v1/rex/RexVar : org/partiql/plan/v1/rex/Rex {
	public abstract fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getDepth ()I
	public abstract fun getOffset ()I
	public abstract fun getOperands ()Ljava/util/List;
}

public abstract class org/partiql/plan/v1/rex/RexVar$Base : org/partiql/plan/v1/rex/RexVar {
	public fun <init> (II)V
	public fun accept (Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDepth ()I
	public fun getOffset ()I
	public fun getOperands ()Ljava/util/List;
	public fun hashCode ()I
}

public final class org/partiql/plan/v1/rex/RexVar$DefaultImpls {
	public static fun accept (Lorg/partiql/plan/v1/rex/RexVar;Lorg/partiql/plan/v1/rex/RexVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getOperands (Lorg/partiql/plan/v1/rex/RexVar;)Ljava/util/List;
}

public abstract interface class org/partiql/plan/v1/rex/RexVisitor {
	public abstract fun defaultReturn (Lorg/partiql/plan/v1/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun defaultVisit (Lorg/partiql/plan/v1/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visit (Lorg/partiql/plan/v1/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCall (Lorg/partiql/plan/v1/rex/RexCall;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCase (Lorg/partiql/plan/v1/rex/RexCase;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCast (Lorg/partiql/plan/v1/rex/RexCast;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCoalesce (Lorg/partiql/plan/v1/rex/RexCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCollection (Lorg/partiql/plan/v1/rex/RexCollection;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitGlobal (Lorg/partiql/plan/v1/rex/RexGlobal;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitLit (Lorg/partiql/plan/v1/rex/RexLit;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPath (Lorg/partiql/plan/v1/rex/RexPath;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPathIndex (Lorg/partiql/plan/v1/rex/RexPath$Index;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPathKey (Lorg/partiql/plan/v1/rex/RexPath$Key;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPathSymbol (Lorg/partiql/plan/v1/rex/RexPath$Symbol;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPivot (Lorg/partiql/plan/v1/rex/RexPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSelect (Lorg/partiql/plan/v1/rex/RexSelect;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitStruct (Lorg/partiql/plan/v1/rex/RexStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSubquery (Lorg/partiql/plan/v1/rex/RexSubquery;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitSubqueryIn (Lorg/partiql/plan/v1/rex/RexSubqueryIn;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitTupleUnion (Lorg/partiql/plan/v1/rex/RexTupleUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitVar (Lorg/partiql/plan/v1/rex/RexVar;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/partiql/plan/v1/rex/RexVisitor$DefaultImpls {
	public static fun defaultVisit (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visit (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCall (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexCall;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCase (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexCase;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCast (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexCast;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCoalesce (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitCollection (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexCollection;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitGlobal (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexGlobal;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitLit (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexLit;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPath (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexPath;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPathIndex (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexPath$Index;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPathKey (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexPath$Key;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPathSymbol (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexPath$Symbol;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitPivot (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSelect (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexSelect;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitStruct (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSubquery (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexSubquery;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitSubqueryIn (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexSubqueryIn;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitTupleUnion (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexTupleUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun visitVar (Lorg/partiql/plan/v1/rex/RexVisitor;Lorg/partiql/plan/v1/rex/RexVar;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class org/partiql/plan/visitor/PlanBaseVisitor : org/partiql/plan/visitor/PlanVisitor {
	public fun <init> ()V
	public abstract fun defaultReturn (Lorg/partiql/plan/PlanNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun defaultVisit (Lorg/partiql/plan/PlanNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visit (Lorg/partiql/plan/PlanNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalog (Lorg/partiql/plan/Catalog;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalogItem (Lorg/partiql/plan/Catalog$Item;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalogItemAgg (Lorg/partiql/plan/Catalog$Item$Agg;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalogItemFn (Lorg/partiql/plan/Catalog$Item$Fn;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatalogItemValue (Lorg/partiql/plan/Catalog$Item$Value;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifier (Lorg/partiql/plan/Identifier;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifierQualified (Lorg/partiql/plan/Identifier$Qualified;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifierSymbol (Lorg/partiql/plan/Identifier$Symbol;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPartiQLPlan (Lorg/partiql/plan/PartiQLPlan;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRef (Lorg/partiql/plan/Ref;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRefCast (Lorg/partiql/plan/Ref$Cast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRel (Lorg/partiql/plan/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelBinding (Lorg/partiql/plan/Rel$Binding;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOp (Lorg/partiql/plan/Rel$Op;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpAggregate (Lorg/partiql/plan/Rel$Op$Aggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpAggregateCall (Lorg/partiql/plan/Rel$Op$Aggregate$Call;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpDistinct (Lorg/partiql/plan/Rel$Op$Distinct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpErr (Lorg/partiql/plan/Rel$Op$Err;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExclude (Lorg/partiql/plan/Rel$Op$Exclude;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludePath (Lorg/partiql/plan/Rel$Op$Exclude$Path;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeStep (Lorg/partiql/plan/Rel$Op$Exclude$Step;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeType (Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeCollIndex (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeCollWildcard (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeStructKey (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeStructSymbol (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpExcludeTypeStructWildcard (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpFilter (Lorg/partiql/plan/Rel$Op$Filter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpJoin (Lorg/partiql/plan/Rel$Op$Join;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpLimit (Lorg/partiql/plan/Rel$Op$Limit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpOffset (Lorg/partiql/plan/Rel$Op$Offset;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpProject (Lorg/partiql/plan/Rel$Op$Project;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpScan (Lorg/partiql/plan/Rel$Op$Scan;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpScanIndexed (Lorg/partiql/plan/Rel$Op$ScanIndexed;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSet (Lorg/partiql/plan/Rel$Op$Set;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSetExcept (Lorg/partiql/plan/Rel$Op$Set$Except;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSetIntersect (Lorg/partiql/plan/Rel$Op$Set$Intersect;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSetUnion (Lorg/partiql/plan/Rel$Op$Set$Union;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSort (Lorg/partiql/plan/Rel$Op$Sort;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpSortSpec (Lorg/partiql/plan/Rel$Op$Sort$Spec;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelOpUnpivot (Lorg/partiql/plan/Rel$Op$Unpivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRelType (Lorg/partiql/plan/Rel$Type;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRex (Lorg/partiql/plan/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOp (Lorg/partiql/plan/Rex$Op;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCall (Lorg/partiql/plan/Rex$Op$Call;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCallDynamic (Lorg/partiql/plan/Rex$Op$Call$Dynamic;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCallDynamicCandidate (Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCallStatic (Lorg/partiql/plan/Rex$Op$Call$Static;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCase (Lorg/partiql/plan/Rex$Op$Case;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCaseBranch (Lorg/partiql/plan/Rex$Op$Case$Branch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCast (Lorg/partiql/plan/Rex$Op$Cast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCoalesce (Lorg/partiql/plan/Rex$Op$Coalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpCollection (Lorg/partiql/plan/Rex$Op$Collection;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpErr (Lorg/partiql/plan/Rex$Op$Err;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpGlobal (Lorg/partiql/plan/Rex$Op$Global;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpLit (Lorg/partiql/plan/Rex$Op$Lit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpMissing (Lorg/partiql/plan/Rex$Op$Missing;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpNullif (Lorg/partiql/plan/Rex$Op$Nullif;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPath (Lorg/partiql/plan/Rex$Op$Path;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPathIndex (Lorg/partiql/plan/Rex$Op$Path$Index;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPathKey (Lorg/partiql/plan/Rex$Op$Path$Key;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPathSymbol (Lorg/partiql/plan/Rex$Op$Path$Symbol;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpPivot (Lorg/partiql/plan/Rex$Op$Pivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpSelect (Lorg/partiql/plan/Rex$Op$Select;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpStruct (Lorg/partiql/plan/Rex$Op$Struct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpStructField (Lorg/partiql/plan/Rex$Op$Struct$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpSubquery (Lorg/partiql/plan/Rex$Op$Subquery;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpTupleUnion (Lorg/partiql/plan/Rex$Op$TupleUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitRexOpVar (Lorg/partiql/plan/Rex$Op$Var;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStatement (Lorg/partiql/plan/Statement;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStatementQuery (Lorg/partiql/plan/Statement$Query;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/visitor/PlanVisitor {
	public abstract fun visit (Lorg/partiql/plan/PlanNode;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCatalog (Lorg/partiql/plan/Catalog;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCatalogItem (Lorg/partiql/plan/Catalog$Item;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCatalogItemAgg (Lorg/partiql/plan/Catalog$Item$Agg;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCatalogItemFn (Lorg/partiql/plan/Catalog$Item$Fn;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitCatalogItemValue (Lorg/partiql/plan/Catalog$Item$Value;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitIdentifier (Lorg/partiql/plan/Identifier;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitIdentifierQualified (Lorg/partiql/plan/Identifier$Qualified;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitIdentifierSymbol (Lorg/partiql/plan/Identifier$Symbol;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitPartiQLPlan (Lorg/partiql/plan/PartiQLPlan;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRef (Lorg/partiql/plan/Ref;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRefCast (Lorg/partiql/plan/Ref$Cast;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRel (Lorg/partiql/plan/Rel;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelBinding (Lorg/partiql/plan/Rel$Binding;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOp (Lorg/partiql/plan/Rel$Op;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpAggregate (Lorg/partiql/plan/Rel$Op$Aggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpAggregateCall (Lorg/partiql/plan/Rel$Op$Aggregate$Call;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpDistinct (Lorg/partiql/plan/Rel$Op$Distinct;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpErr (Lorg/partiql/plan/Rel$Op$Err;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExclude (Lorg/partiql/plan/Rel$Op$Exclude;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExcludePath (Lorg/partiql/plan/Rel$Op$Exclude$Path;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExcludeStep (Lorg/partiql/plan/Rel$Op$Exclude$Step;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExcludeType (Lorg/partiql/plan/Rel$Op$Exclude$Type;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExcludeTypeCollIndex (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExcludeTypeCollWildcard (Lorg/partiql/plan/Rel$Op$Exclude$Type$CollWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExcludeTypeStructKey (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructKey;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExcludeTypeStructSymbol (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructSymbol;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpExcludeTypeStructWildcard (Lorg/partiql/plan/Rel$Op$Exclude$Type$StructWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpFilter (Lorg/partiql/plan/Rel$Op$Filter;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpJoin (Lorg/partiql/plan/Rel$Op$Join;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpLimit (Lorg/partiql/plan/Rel$Op$Limit;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpOffset (Lorg/partiql/plan/Rel$Op$Offset;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpProject (Lorg/partiql/plan/Rel$Op$Project;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpScan (Lorg/partiql/plan/Rel$Op$Scan;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpScanIndexed (Lorg/partiql/plan/Rel$Op$ScanIndexed;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpSet (Lorg/partiql/plan/Rel$Op$Set;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpSetExcept (Lorg/partiql/plan/Rel$Op$Set$Except;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpSetIntersect (Lorg/partiql/plan/Rel$Op$Set$Intersect;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpSetUnion (Lorg/partiql/plan/Rel$Op$Set$Union;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpSort (Lorg/partiql/plan/Rel$Op$Sort;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpSortSpec (Lorg/partiql/plan/Rel$Op$Sort$Spec;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelOpUnpivot (Lorg/partiql/plan/Rel$Op$Unpivot;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRelType (Lorg/partiql/plan/Rel$Type;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRex (Lorg/partiql/plan/Rex;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOp (Lorg/partiql/plan/Rex$Op;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCall (Lorg/partiql/plan/Rex$Op$Call;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCallDynamic (Lorg/partiql/plan/Rex$Op$Call$Dynamic;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCallDynamicCandidate (Lorg/partiql/plan/Rex$Op$Call$Dynamic$Candidate;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCallStatic (Lorg/partiql/plan/Rex$Op$Call$Static;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCase (Lorg/partiql/plan/Rex$Op$Case;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCaseBranch (Lorg/partiql/plan/Rex$Op$Case$Branch;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCast (Lorg/partiql/plan/Rex$Op$Cast;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCoalesce (Lorg/partiql/plan/Rex$Op$Coalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpCollection (Lorg/partiql/plan/Rex$Op$Collection;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpErr (Lorg/partiql/plan/Rex$Op$Err;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpGlobal (Lorg/partiql/plan/Rex$Op$Global;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpLit (Lorg/partiql/plan/Rex$Op$Lit;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpMissing (Lorg/partiql/plan/Rex$Op$Missing;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpNullif (Lorg/partiql/plan/Rex$Op$Nullif;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpPath (Lorg/partiql/plan/Rex$Op$Path;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpPathIndex (Lorg/partiql/plan/Rex$Op$Path$Index;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpPathKey (Lorg/partiql/plan/Rex$Op$Path$Key;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpPathSymbol (Lorg/partiql/plan/Rex$Op$Path$Symbol;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpPivot (Lorg/partiql/plan/Rex$Op$Pivot;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpSelect (Lorg/partiql/plan/Rex$Op$Select;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpStruct (Lorg/partiql/plan/Rex$Op$Struct;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpStructField (Lorg/partiql/plan/Rex$Op$Struct$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpSubquery (Lorg/partiql/plan/Rex$Op$Subquery;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpTupleUnion (Lorg/partiql/plan/Rex$Op$TupleUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitRexOpVar (Lorg/partiql/plan/Rex$Op$Var;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitStatement (Lorg/partiql/plan/Statement;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun visitStatementQuery (Lorg/partiql/plan/Statement$Query;Ljava/lang/Object;)Ljava/lang/Object;
}

