public abstract interface class org/partiql/plan/Action {
}

public abstract interface class org/partiql/plan/Action$Query : org/partiql/plan/Action {
	public abstract fun getRex ()Lorg/partiql/plan/rex/Rex;
}

public abstract interface class org/partiql/plan/Collation {
	public abstract fun getColumn ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getNulls ()Lorg/partiql/plan/Collation$Nulls;
	public abstract fun getOrder ()Lorg/partiql/plan/Collation$Order;
}

public final class org/partiql/plan/Collation$Nulls : org/partiql/spi/Enum {
	public static final field FIRST I
	public static final field LAST I
	public static fun FIRST ()Lorg/partiql/plan/Collation$Nulls;
	public static fun LAST ()Lorg/partiql/plan/Collation$Nulls;
	public fun name ()Ljava/lang/String;
}

public final class org/partiql/plan/Collation$Order : org/partiql/spi/Enum {
	public static final field ASC I
	public static final field DESC I
	public static fun ASC ()Lorg/partiql/plan/Collation$Order;
	public static fun DESC ()Lorg/partiql/plan/Collation$Order;
	public fun name ()Ljava/lang/String;
}

public final class org/partiql/plan/Exclusion {
	public static final field Companion Lorg/partiql/plan/Exclusion$Companion;
	public fun <init> (Lorg/partiql/plan/rex/RexVar;Ljava/util/List;)V
	public fun <init> (Lorg/partiql/plan/rex/RexVar;[Lorg/partiql/plan/Exclusion$Item;)V
	public static final fun collIndex (I)Lorg/partiql/plan/Exclusion$CollIndex;
	public static final fun collIndex (ILjava/util/List;)Lorg/partiql/plan/Exclusion$CollIndex;
	public static final fun collIndex (I[Lorg/partiql/plan/Exclusion$Item;)Lorg/partiql/plan/Exclusion$CollIndex;
	public static final fun collWildcard ()Lorg/partiql/plan/Exclusion$CollWildcard;
	public static final fun collWildcard (Ljava/util/List;)Lorg/partiql/plan/Exclusion$CollWildcard;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getItems ()Ljava/util/List;
	public final fun getVar ()Lorg/partiql/plan/rex/RexVar;
	public fun hashCode ()I
	public static final fun structKey (Ljava/lang/String;)Lorg/partiql/plan/Exclusion$StructKey;
	public static final fun structKey (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Exclusion$StructKey;
	public static final fun structSymbol (Ljava/lang/String;)Lorg/partiql/plan/Exclusion$StructSymbol;
	public static final fun structSymbol (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Exclusion$StructSymbol;
	public static final fun structWildCard ()Lorg/partiql/plan/Exclusion$StructWildcard;
	public static final fun structWildCard (Ljava/util/List;)Lorg/partiql/plan/Exclusion$StructWildcard;
}

public final class org/partiql/plan/Exclusion$CollIndex : org/partiql/plan/Exclusion$Item {
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIndex ()I
	public fun getItems ()Ljava/util/List;
	public fun hasItems ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Exclusion$CollWildcard : org/partiql/plan/Exclusion$Item {
	public fun equals (Ljava/lang/Object;)Z
	public fun getItems ()Ljava/util/List;
	public fun hasItems ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Exclusion$Companion {
	public final fun collIndex (I)Lorg/partiql/plan/Exclusion$CollIndex;
	public final fun collIndex (ILjava/util/List;)Lorg/partiql/plan/Exclusion$CollIndex;
	public final fun collIndex (I[Lorg/partiql/plan/Exclusion$Item;)Lorg/partiql/plan/Exclusion$CollIndex;
	public final fun collWildcard ()Lorg/partiql/plan/Exclusion$CollWildcard;
	public final fun collWildcard (Ljava/util/List;)Lorg/partiql/plan/Exclusion$CollWildcard;
	public final fun structKey (Ljava/lang/String;)Lorg/partiql/plan/Exclusion$StructKey;
	public final fun structKey (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Exclusion$StructKey;
	public final fun structSymbol (Ljava/lang/String;)Lorg/partiql/plan/Exclusion$StructSymbol;
	public final fun structSymbol (Ljava/lang/String;Ljava/util/List;)Lorg/partiql/plan/Exclusion$StructSymbol;
	public final fun structWildCard ()Lorg/partiql/plan/Exclusion$StructWildcard;
	public final fun structWildCard (Ljava/util/List;)Lorg/partiql/plan/Exclusion$StructWildcard;
}

public abstract interface class org/partiql/plan/Exclusion$Item {
	public abstract fun getItems ()Ljava/util/List;
	public abstract fun hasItems ()Z
}

public final class org/partiql/plan/Exclusion$StructKey : org/partiql/plan/Exclusion$Item {
	public fun equals (Ljava/lang/Object;)Z
	public fun getItems ()Ljava/util/List;
	public final fun getKey ()Ljava/lang/String;
	public fun hasItems ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Exclusion$StructSymbol : org/partiql/plan/Exclusion$Item {
	public fun equals (Ljava/lang/Object;)Z
	public fun getItems ()Ljava/util/List;
	public final fun getSymbol ()Ljava/lang/String;
	public fun hasItems ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/partiql/plan/Exclusion$StructWildcard : org/partiql/plan/Exclusion$Item {
	public fun equals (Ljava/lang/Object;)Z
	public fun getItems ()Ljava/util/List;
	public fun hasItems ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/plan/JoinType : org/partiql/spi/Enum {
	public static final field FULL I
	public static final field INNER I
	public static final field LEFT I
	public static final field RIGHT I
	public static fun FULL ()Lorg/partiql/plan/JoinType;
	public static fun INNER ()Lorg/partiql/plan/JoinType;
	public static fun LEFT ()Lorg/partiql/plan/JoinType;
	public static fun RIGHT ()Lorg/partiql/plan/JoinType;
	public fun name ()Ljava/lang/String;
}

public abstract interface class org/partiql/plan/Operand : java/lang/Iterable {
	public static fun single (Lorg/partiql/plan/Operator;)Lorg/partiql/plan/Operand;
	public static fun vararg (Ljava/util/List;)Lorg/partiql/plan/Operand;
}

public class org/partiql/plan/Operand$Single : org/partiql/plan/Operand {
	public final field operator Lorg/partiql/plan/Operator;
	public fun iterator ()Ljava/util/Iterator;
}

public class org/partiql/plan/Operand$Variadic : org/partiql/plan/Operand {
	public final field operators Ljava/util/List;
	public fun iterator ()Ljava/util/Iterator;
}

public abstract interface class org/partiql/plan/Operator {
	public abstract fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun getOperand (I)Lorg/partiql/plan/Operand;
	public abstract fun getOperands ()Ljava/util/List;
	public abstract fun getTag ()I
	public abstract fun setTag (I)V
}

public abstract class org/partiql/plan/OperatorRewriter : org/partiql/plan/OperatorVisitor {
	public fun <init> ()V
	public fun <init> (Lorg/partiql/plan/Operators;)V
	public synthetic fun defaultReturn (Lorg/partiql/plan/Operator;Ljava/lang/Object;)Ljava/lang/Object;
	public fun defaultReturn (Lorg/partiql/plan/Operator;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun defaultVisit (Lorg/partiql/plan/Operator;Ljava/lang/Object;)Ljava/lang/Object;
	public fun defaultVisit (Lorg/partiql/plan/Operator;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public fun onError (Lorg/partiql/plan/Operator;Ljava/lang/Class;)Lorg/partiql/plan/Operator;
	public final fun visit (Lorg/partiql/plan/Operator;Ljava/lang/Object;Ljava/lang/Class;)Lorg/partiql/plan/Operator;
	public synthetic fun visitAggregate (Lorg/partiql/plan/rel/RelAggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitAggregate (Lorg/partiql/plan/rel/RelAggregate;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public fun visitAggregateGroup (Lorg/partiql/plan/rex/Rex;Ljava/lang/Object;)Lorg/partiql/plan/rex/Rex;
	public fun visitAggregateMeasure (Lorg/partiql/plan/rel/RelAggregate$Measure;Ljava/lang/Object;)Lorg/partiql/plan/rel/RelAggregate$Measure;
	public final fun visitAll (Ljava/util/List;Ljava/lang/Object;Lorg/partiql/plan/OperatorRewriter$Mapper;)Ljava/util/List;
	public synthetic fun visitArray (Lorg/partiql/plan/rex/RexArray;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitArray (Lorg/partiql/plan/rex/RexArray;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitBag (Lorg/partiql/plan/rex/RexBag;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitBag (Lorg/partiql/plan/rex/RexBag;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitCall (Lorg/partiql/plan/rex/RexCall;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCall (Lorg/partiql/plan/rex/RexCall;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitCase (Lorg/partiql/plan/rex/RexCase;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCase (Lorg/partiql/plan/rex/RexCase;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public fun visitCaseBranch (Lorg/partiql/plan/rex/RexCase$Branch;Ljava/lang/Object;)Lorg/partiql/plan/rex/RexCase$Branch;
	public synthetic fun visitCast (Lorg/partiql/plan/rex/RexCast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCast (Lorg/partiql/plan/rex/RexCast;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitCoalesce (Lorg/partiql/plan/rex/RexCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCoalesce (Lorg/partiql/plan/rex/RexCoalesce;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public fun visitCollation (Lorg/partiql/plan/Collation;Ljava/lang/Object;)Lorg/partiql/plan/Collation;
	public synthetic fun visitCorrelate (Lorg/partiql/plan/rel/RelCorrelate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCorrelate (Lorg/partiql/plan/rel/RelCorrelate;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitDispatch (Lorg/partiql/plan/rex/RexDispatch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDispatch (Lorg/partiql/plan/rex/RexDispatch;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitDistinct (Lorg/partiql/plan/rel/RelDistinct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDistinct (Lorg/partiql/plan/rel/RelDistinct;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitError (Lorg/partiql/plan/rex/RexError;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitError (Lorg/partiql/plan/rex/RexError;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitExcept (Lorg/partiql/plan/rel/RelExcept;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcept (Lorg/partiql/plan/rel/RelExcept;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitExclude (Lorg/partiql/plan/rel/RelExclude;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExclude (Lorg/partiql/plan/rel/RelExclude;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public fun visitExclusions (Lorg/partiql/plan/Exclusion;Ljava/lang/Object;)Lorg/partiql/plan/Exclusion;
	public synthetic fun visitFilter (Lorg/partiql/plan/rel/RelFilter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFilter (Lorg/partiql/plan/rel/RelFilter;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitIntersect (Lorg/partiql/plan/rel/RelIntersect;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIntersect (Lorg/partiql/plan/rel/RelIntersect;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitIterate (Lorg/partiql/plan/rel/RelIterate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIterate (Lorg/partiql/plan/rel/RelIterate;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitJoin (Lorg/partiql/plan/rel/RelJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitJoin (Lorg/partiql/plan/rel/RelJoin;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitLimit (Lorg/partiql/plan/rel/RelLimit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLimit (Lorg/partiql/plan/rel/RelLimit;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitLit (Lorg/partiql/plan/rex/RexLit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLit (Lorg/partiql/plan/rex/RexLit;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitNullIf (Lorg/partiql/plan/rex/RexNullIf;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitNullIf (Lorg/partiql/plan/rex/RexNullIf;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitOffset (Lorg/partiql/plan/rel/RelOffset;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitOffset (Lorg/partiql/plan/rel/RelOffset;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitPathIndex (Lorg/partiql/plan/rex/RexPathIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathIndex (Lorg/partiql/plan/rex/RexPathIndex;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitPathKey (Lorg/partiql/plan/rex/RexPathKey;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathKey (Lorg/partiql/plan/rex/RexPathKey;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitPathSymbol (Lorg/partiql/plan/rex/RexPathSymbol;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathSymbol (Lorg/partiql/plan/rex/RexPathSymbol;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitPivot (Lorg/partiql/plan/rex/RexPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPivot (Lorg/partiql/plan/rex/RexPivot;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitProject (Lorg/partiql/plan/rel/RelProject;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitProject (Lorg/partiql/plan/rel/RelProject;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public fun visitProjection (Lorg/partiql/plan/rex/Rex;Ljava/lang/Object;)Lorg/partiql/plan/rex/Rex;
	public final fun visitRel (Lorg/partiql/plan/rel/Rel;Ljava/lang/Object;)Lorg/partiql/plan/rel/Rel;
	public final fun visitRex (Lorg/partiql/plan/rex/Rex;Ljava/lang/Object;)Lorg/partiql/plan/rex/Rex;
	public synthetic fun visitScan (Lorg/partiql/plan/rel/RelScan;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitScan (Lorg/partiql/plan/rel/RelScan;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitSelect (Lorg/partiql/plan/rex/RexSelect;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelect (Lorg/partiql/plan/rex/RexSelect;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitSort (Lorg/partiql/plan/rel/RelSort;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSort (Lorg/partiql/plan/rel/RelSort;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitSpread (Lorg/partiql/plan/rex/RexSpread;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSpread (Lorg/partiql/plan/rex/RexSpread;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitStruct (Lorg/partiql/plan/rex/RexStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStruct (Lorg/partiql/plan/rex/RexStruct;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public fun visitStructField (Lorg/partiql/plan/rex/RexStruct$Field;Ljava/lang/Object;)Lorg/partiql/plan/rex/RexStruct$Field;
	public synthetic fun visitSubquery (Lorg/partiql/plan/rex/RexSubquery;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSubquery (Lorg/partiql/plan/rex/RexSubquery;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitSubqueryComp (Lorg/partiql/plan/rex/RexSubqueryComp;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSubqueryComp (Lorg/partiql/plan/rex/RexSubqueryComp;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitSubqueryIn (Lorg/partiql/plan/rex/RexSubqueryIn;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSubqueryIn (Lorg/partiql/plan/rex/RexSubqueryIn;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitSubqueryTest (Lorg/partiql/plan/rex/RexSubqueryTest;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSubqueryTest (Lorg/partiql/plan/rex/RexSubqueryTest;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitTable (Lorg/partiql/plan/rex/RexTable;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTable (Lorg/partiql/plan/rex/RexTable;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitUnion (Lorg/partiql/plan/rel/RelUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitUnion (Lorg/partiql/plan/rel/RelUnion;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitUnpivot (Lorg/partiql/plan/rel/RelUnpivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitUnpivot (Lorg/partiql/plan/rel/RelUnpivot;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
	public synthetic fun visitVar (Lorg/partiql/plan/rex/RexVar;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitVar (Lorg/partiql/plan/rex/RexVar;Ljava/lang/Object;)Lorg/partiql/plan/Operator;
}

public abstract interface class org/partiql/plan/OperatorRewriter$Mapper {
	public abstract fun apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/OperatorVisitor {
	public abstract fun defaultReturn (Lorg/partiql/plan/Operator;Ljava/lang/Object;)Ljava/lang/Object;
	public fun defaultVisit (Lorg/partiql/plan/Operator;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visit (Lorg/partiql/plan/Operator;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitAggregate (Lorg/partiql/plan/rel/RelAggregate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitArray (Lorg/partiql/plan/rex/RexArray;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitBag (Lorg/partiql/plan/rex/RexBag;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCall (Lorg/partiql/plan/rex/RexCall;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCase (Lorg/partiql/plan/rex/RexCase;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCast (Lorg/partiql/plan/rex/RexCast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCoalesce (Lorg/partiql/plan/rex/RexCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCorrelate (Lorg/partiql/plan/rel/RelCorrelate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDispatch (Lorg/partiql/plan/rex/RexDispatch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDistinct (Lorg/partiql/plan/rel/RelDistinct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitError (Lorg/partiql/plan/rex/RexError;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcept (Lorg/partiql/plan/rel/RelExcept;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExclude (Lorg/partiql/plan/rel/RelExclude;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFilter (Lorg/partiql/plan/rel/RelFilter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIntersect (Lorg/partiql/plan/rel/RelIntersect;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIterate (Lorg/partiql/plan/rel/RelIterate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitJoin (Lorg/partiql/plan/rel/RelJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLimit (Lorg/partiql/plan/rel/RelLimit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLit (Lorg/partiql/plan/rex/RexLit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitNullIf (Lorg/partiql/plan/rex/RexNullIf;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitOffset (Lorg/partiql/plan/rel/RelOffset;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathIndex (Lorg/partiql/plan/rex/RexPathIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathKey (Lorg/partiql/plan/rex/RexPathKey;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathSymbol (Lorg/partiql/plan/rex/RexPathSymbol;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPivot (Lorg/partiql/plan/rex/RexPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitProject (Lorg/partiql/plan/rel/RelProject;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitScan (Lorg/partiql/plan/rel/RelScan;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelect (Lorg/partiql/plan/rex/RexSelect;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSort (Lorg/partiql/plan/rel/RelSort;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSpread (Lorg/partiql/plan/rex/RexSpread;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStruct (Lorg/partiql/plan/rex/RexStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSubquery (Lorg/partiql/plan/rex/RexSubquery;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSubqueryComp (Lorg/partiql/plan/rex/RexSubqueryComp;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSubqueryIn (Lorg/partiql/plan/rex/RexSubqueryIn;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSubqueryTest (Lorg/partiql/plan/rex/RexSubqueryTest;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTable (Lorg/partiql/plan/rex/RexTable;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitUnion (Lorg/partiql/plan/rel/RelUnion;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitUnpivot (Lorg/partiql/plan/rel/RelUnpivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitVar (Lorg/partiql/plan/rex/RexVar;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitWith (Lorg/partiql/plan/rel/RelWith;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/partiql/plan/Operators {
	public static final field Companion Lorg/partiql/plan/Operators$Companion;
	public static final field STANDARD Lorg/partiql/plan/Operators;
	public abstract fun aggregate (Lorg/partiql/plan/rel/Rel;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/rel/RelAggregate;
	public abstract fun array (Ljava/util/List;)Lorg/partiql/plan/rex/RexArray;
	public abstract fun bag (Ljava/util/Collection;)Lorg/partiql/plan/rex/RexBag;
	public abstract fun call (Lorg/partiql/spi/function/Fn;Ljava/util/List;)Lorg/partiql/plan/rex/RexCall;
	public abstract fun caseWhen (Lorg/partiql/plan/rex/Rex;Ljava/util/List;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexCase;
	public abstract fun cast (Lorg/partiql/plan/rex/Rex;Lorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexCast;
	public abstract fun coalesce (Ljava/util/List;)Lorg/partiql/plan/rex/RexCoalesce;
	public abstract fun correlate (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/JoinType;)Lorg/partiql/plan/rel/RelCorrelate;
	public abstract fun dispatch (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/rex/RexDispatch;
	public abstract fun distinct (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelDistinct;
	public abstract fun error (Lorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexError;
	public abstract fun except (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelExcept;
	public abstract fun exclude (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelExclude;
	public abstract fun filter (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelFilter;
	public abstract fun intersect (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelIntersect;
	public abstract fun iterate (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelIterate;
	public abstract fun join (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/JoinType;)Lorg/partiql/plan/rel/RelJoin;
	public abstract fun limit (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelLimit;
	public abstract fun lit (Lorg/partiql/spi/value/Datum;)Lorg/partiql/plan/rex/RexLit;
	public abstract fun nullIf (Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexNullIf;
	public abstract fun offset (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelOffset;
	public abstract fun pathIndex (Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPathIndex;
	public abstract fun pathKey (Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPathKey;
	public abstract fun pathSymbol (Lorg/partiql/plan/rex/Rex;Ljava/lang/String;)Lorg/partiql/plan/rex/RexPathSymbol;
	public abstract fun pivot (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPivot;
	public abstract fun project (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelProject;
	public abstract fun scan (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelScan;
	public abstract fun select (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexSelect;
	public abstract fun sort (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelSort;
	public abstract fun spread (Ljava/util/List;)Lorg/partiql/plan/rex/RexSpread;
	public abstract fun struct (Ljava/util/List;)Lorg/partiql/plan/rex/RexStruct;
	public abstract fun subquery (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Z)Lorg/partiql/plan/rex/RexSubquery;
	public abstract fun subqueryComp (Lorg/partiql/plan/rel/Rel;Ljava/util/List;Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;Lorg/partiql/plan/rex/RexSubqueryComp$Quantifier;)Lorg/partiql/plan/rex/RexSubqueryComp;
	public abstract fun subqueryIn (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rex/RexSubqueryIn;
	public abstract fun subqueryTest (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/RexSubqueryTest$Test;)Lorg/partiql/plan/rex/RexSubqueryTest;
	public abstract fun table (Lorg/partiql/spi/catalog/Table;)Lorg/partiql/plan/rex/RexTable;
	public abstract fun union (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelUnion;
	public abstract fun unpivot (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelUnpivot;
	public abstract fun variable (IILorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexVar;
	public abstract fun with (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelWith;
}

public final class org/partiql/plan/Operators$Companion {
}

public final class org/partiql/plan/Operators$DefaultImpls {
	public static fun aggregate (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/rel/RelAggregate;
	public static fun array (Lorg/partiql/plan/Operators;Ljava/util/List;)Lorg/partiql/plan/rex/RexArray;
	public static fun bag (Lorg/partiql/plan/Operators;Ljava/util/Collection;)Lorg/partiql/plan/rex/RexBag;
	public static fun call (Lorg/partiql/plan/Operators;Lorg/partiql/spi/function/Fn;Ljava/util/List;)Lorg/partiql/plan/rex/RexCall;
	public static fun caseWhen (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;Ljava/util/List;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexCase;
	public static fun cast (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;Lorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexCast;
	public static fun coalesce (Lorg/partiql/plan/Operators;Ljava/util/List;)Lorg/partiql/plan/rex/RexCoalesce;
	public static fun correlate (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/JoinType;)Lorg/partiql/plan/rel/RelCorrelate;
	public static fun dispatch (Lorg/partiql/plan/Operators;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/rex/RexDispatch;
	public static fun distinct (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelDistinct;
	public static fun error (Lorg/partiql/plan/Operators;Lorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexError;
	public static fun except (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelExcept;
	public static fun exclude (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelExclude;
	public static fun filter (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelFilter;
	public static fun intersect (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelIntersect;
	public static fun iterate (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelIterate;
	public static fun join (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/JoinType;)Lorg/partiql/plan/rel/RelJoin;
	public static fun limit (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelLimit;
	public static fun lit (Lorg/partiql/plan/Operators;Lorg/partiql/spi/value/Datum;)Lorg/partiql/plan/rex/RexLit;
	public static fun nullIf (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexNullIf;
	public static fun offset (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelOffset;
	public static fun pathIndex (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPathIndex;
	public static fun pathKey (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPathKey;
	public static fun pathSymbol (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;Ljava/lang/String;)Lorg/partiql/plan/rex/RexPathSymbol;
	public static fun pivot (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPivot;
	public static fun project (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelProject;
	public static fun scan (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelScan;
	public static fun select (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexSelect;
	public static fun sort (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelSort;
	public static fun spread (Lorg/partiql/plan/Operators;Ljava/util/List;)Lorg/partiql/plan/rex/RexSpread;
	public static fun struct (Lorg/partiql/plan/Operators;Ljava/util/List;)Lorg/partiql/plan/rex/RexStruct;
	public static fun subquery (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Z)Lorg/partiql/plan/rex/RexSubquery;
	public static fun subqueryComp (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Ljava/util/List;Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;Lorg/partiql/plan/rex/RexSubqueryComp$Quantifier;)Lorg/partiql/plan/rex/RexSubqueryComp;
	public static fun subqueryIn (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rex/RexSubqueryIn;
	public static fun subqueryTest (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/RexSubqueryTest$Test;)Lorg/partiql/plan/rex/RexSubqueryTest;
	public static fun table (Lorg/partiql/plan/Operators;Lorg/partiql/spi/catalog/Table;)Lorg/partiql/plan/rex/RexTable;
	public static fun union (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelUnion;
	public static fun unpivot (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelUnpivot;
	public static fun variable (Lorg/partiql/plan/Operators;IILorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexVar;
	public static fun with (Lorg/partiql/plan/Operators;Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelWith;
}

public abstract interface class org/partiql/plan/Plan {
	public abstract fun getAction ()Lorg/partiql/plan/Action;
	public fun getVersion ()Lorg/partiql/plan/Version;
}

public class org/partiql/plan/Version : org/partiql/spi/Enum {
	public static final field V1 I
	public static fun V1 ()Lorg/partiql/plan/Version;
	public fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/plan/WithListElement {
	public fun <init> (Ljava/lang/String;Lorg/partiql/plan/rex/Rex;)V
	public fun getName ()Ljava/lang/String;
	public fun getRepresentation ()Lorg/partiql/plan/rex/Rex;
}

public abstract interface class org/partiql/plan/rel/Rel : org/partiql/plan/Operator {
	public abstract fun getType ()Lorg/partiql/plan/rel/RelType;
	public abstract fun setType (Lorg/partiql/plan/rel/RelType;)V
}

public abstract class org/partiql/plan/rel/RelAggregate : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelAggregate;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/rel/RelAggregate;
	public static fun create (Lorg/partiql/plan/rel/Rel;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/rel/RelAggregate;
	public abstract fun getGroups ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getMeasures ()Ljava/util/List;
	public static fun measure (Lorg/partiql/spi/function/Agg;Ljava/util/List;Z)Lorg/partiql/plan/rel/RelAggregate$Measure;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public class org/partiql/plan/rel/RelAggregate$Measure {
	public fun copy (Ljava/util/List;)Lorg/partiql/plan/rel/RelAggregate$Measure;
	public fun getAgg ()Lorg/partiql/spi/function/Agg;
	public fun getArgs ()Ljava/util/List;
	public fun isDistinct ()Z
}

public abstract class org/partiql/plan/rel/RelBase : org/partiql/plan/rel/Rel {
	public fun <init> ()V
	public final fun getOperand (I)Lorg/partiql/plan/Operand;
	public final fun getOperands ()Ljava/util/List;
	public fun getTag ()I
	public final fun getType ()Lorg/partiql/plan/rel/RelType;
	protected abstract fun operands ()Ljava/util/List;
	public fun setTag (I)V
	public fun setType (Lorg/partiql/plan/rel/RelType;)V
	protected abstract fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelCorrelate : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelCorrelate;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/JoinType;)Lorg/partiql/plan/rel/RelCorrelate;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/JoinType;)Lorg/partiql/plan/rel/RelCorrelate;
	public abstract fun getJoinType ()Lorg/partiql/plan/JoinType;
	public abstract fun getLeft ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/rel/Rel;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelDistinct : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelDistinct;
	public static fun create (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelDistinct;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelExcept : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelExcept;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelExcept;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelExcept;
	public abstract fun getLeft ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/rel/Rel;
	public abstract fun isAll ()Z
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelExclude : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelExclude;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelExclude;
	public static fun create (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelExclude;
	public abstract fun getExclusions ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelFilter : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelFilter;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelFilter;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelFilter;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getPredicate ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelIntersect : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelIntersect;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelIntersect;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelIntersect;
	public abstract fun getLeft ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/rel/Rel;
	public abstract fun isAll ()Z
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelIterate : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelIterate;
	public static fun create (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelIterate;
	public abstract fun getRex ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelJoin : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelJoin;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/JoinType;)Lorg/partiql/plan/rel/RelJoin;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/JoinType;)Lorg/partiql/plan/rel/RelJoin;
	public abstract fun getCondition ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getJoinType ()Lorg/partiql/plan/JoinType;
	public abstract fun getLeft ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/rel/Rel;
	protected final fun operands ()Ljava/util/List;
	protected fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelLimit : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelLimit;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelLimit;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelLimit;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getLimit ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelOffset : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelOffset;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelOffset;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelOffset;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getOffset ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelProject : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelProject;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelProject;
	public static fun create (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelProject;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getProjections ()Ljava/util/List;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelScan : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelScan;
	public static fun create (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelScan;
	public abstract fun getRex ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelSort : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelSort;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelSort;
	public static fun create (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelSort;
	public abstract fun getCollations ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public final class org/partiql/plan/rel/RelType {
	public static final field ORDERED I
	public fun getDegree ()I
	public fun getField (I)Lorg/partiql/spi/types/PTypeField;
	public fun getField (Ljava/lang/String;)Lorg/partiql/spi/types/PTypeField;
	public fun getFields ()[Lorg/partiql/spi/types/PTypeField;
	public fun isOrdered ()Z
	public static fun of ([Lorg/partiql/spi/types/PTypeField;)Lorg/partiql/plan/rel/RelType;
	public static fun of ([Lorg/partiql/spi/types/PTypeField;I)Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelUnion : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelUnion;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelUnion;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rel/Rel;Z)Lorg/partiql/plan/rel/RelUnion;
	public abstract fun getLeft ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getRight ()Lorg/partiql/plan/rel/Rel;
	public abstract fun isAll ()Z
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelUnpivot : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelUnpivot;
	public static fun create (Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rel/RelUnpivot;
	public abstract fun getRex ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract class org/partiql/plan/rel/RelWith : org/partiql/plan/rel/RelBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;)Lorg/partiql/plan/rel/RelWith;
	public abstract fun copy (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelWith;
	public static fun create (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rel/RelWith;
	public abstract fun getElements ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rel/RelType;
}

public abstract interface class org/partiql/plan/rex/Rex : org/partiql/plan/Operator {
	public abstract fun getType ()Lorg/partiql/plan/rex/RexType;
	public abstract fun setType (Lorg/partiql/plan/rex/RexType;)V
}

public abstract class org/partiql/plan/rex/RexArray : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Ljava/util/List;)Lorg/partiql/plan/rex/RexArray;
	public abstract fun getValues ()Ljava/util/List;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexBag : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Ljava/util/Collection;)Lorg/partiql/plan/rex/RexBag;
	public abstract fun getValues ()Ljava/util/Collection;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexBase : org/partiql/plan/rex/Rex {
	public fun <init> ()V
	public final fun getOperand (I)Lorg/partiql/plan/Operand;
	public final fun getOperands ()Ljava/util/List;
	public fun getTag ()I
	public final fun getType ()Lorg/partiql/plan/rex/RexType;
	protected abstract fun operands ()Ljava/util/List;
	public fun setTag (I)V
	public final fun setType (Lorg/partiql/plan/rex/RexType;)V
	protected abstract fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexCall : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/spi/function/Fn;Ljava/util/List;)Lorg/partiql/plan/rex/RexCall;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getFunction ()Lorg/partiql/spi/function/Fn;
	protected fun operands ()Ljava/util/List;
	protected fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexCase : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun branch (Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexCase$Branch;
	public static fun create (Lorg/partiql/plan/rex/Rex;Ljava/util/List;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexCase;
	public abstract fun getBranches ()Ljava/util/List;
	public abstract fun getDefault ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getMatch ()Lorg/partiql/plan/rex/Rex;
	protected fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public class org/partiql/plan/rex/RexCase$Branch {
	public fun getCondition ()Lorg/partiql/plan/rex/Rex;
	public fun getResult ()Lorg/partiql/plan/rex/Rex;
}

public abstract class org/partiql/plan/rex/RexCast : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rex/Rex;Lorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexCast;
	public abstract fun getOperand ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getTarget ()Lorg/partiql/spi/types/PType;
	protected fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexCoalesce : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Ljava/util/List;)Lorg/partiql/plan/rex/RexCoalesce;
	public abstract fun getArgs ()Ljava/util/List;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexDispatch : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lorg/partiql/plan/rex/RexDispatch;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getFunctions ()Ljava/util/List;
	public abstract fun getName ()Ljava/lang/String;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexError : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create ()Lorg/partiql/plan/rex/RexError;
	protected fun operands ()Ljava/util/List;
	protected fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexLit : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/spi/value/Datum;)Lorg/partiql/plan/rex/RexLit;
	public abstract fun getDatum ()Lorg/partiql/spi/value/Datum;
	protected fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexNullIf : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexNullIf;
	public abstract fun getV1 ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getV2 ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexPathIndex : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPathIndex;
	public abstract fun getIndex ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getOperand ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexPathKey : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPathKey;
	public abstract fun getKey ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getOperand ()Lorg/partiql/plan/rex/Rex;
	protected fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexPathSymbol : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rex/Rex;Ljava/lang/String;)Lorg/partiql/plan/rex/RexPathSymbol;
	public abstract fun getOperand ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getSymbol ()Ljava/lang/String;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexPivot : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexPivot;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getKey ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getValue ()Lorg/partiql/plan/rex/Rex;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexSelect : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexSelect;
	public abstract fun getConstructor ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexSpread : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Ljava/util/List;)Lorg/partiql/plan/rex/RexSpread;
	public abstract fun getArgs ()Ljava/util/List;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexStruct : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Ljava/util/List;)Lorg/partiql/plan/rex/RexStruct;
	public static fun field (Lorg/partiql/plan/rex/Rex;Lorg/partiql/plan/rex/Rex;)Lorg/partiql/plan/rex/RexStruct$Field;
	public abstract fun getFields ()Ljava/util/List;
	protected fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public class org/partiql/plan/rex/RexStruct$Field {
	public fun getKey ()Lorg/partiql/plan/rex/Rex;
	public fun getValue ()Lorg/partiql/plan/rex/Rex;
}

public abstract class org/partiql/plan/rex/RexSubquery : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/Rex;Z)Lorg/partiql/plan/rex/RexSubquery;
	public abstract fun getConstructor ()Lorg/partiql/plan/rex/Rex;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun isScalar ()Z
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexSubqueryComp : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rel/Rel;Ljava/util/List;Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;Lorg/partiql/plan/rex/RexSubqueryComp$Quantifier;)Lorg/partiql/plan/rex/RexSubqueryComp;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getComparison ()Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getQuantifier ()Lorg/partiql/plan/rex/RexSubqueryComp$Quantifier;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public class org/partiql/plan/rex/RexSubqueryComp$Comparison : org/partiql/spi/Enum {
	public static final field EQ I
	public static final field GE I
	public static final field GT I
	public static final field LE I
	public static final field LT I
	public static final field NE I
	public static fun EQ ()Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;
	public static fun GE ()Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;
	public static fun GT ()Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;
	public static fun LE ()Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;
	public static fun LT ()Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;
	public static fun NE ()Lorg/partiql/plan/rex/RexSubqueryComp$Comparison;
	public fun name ()Ljava/lang/String;
}

public class org/partiql/plan/rex/RexSubqueryComp$Quantifier : org/partiql/spi/Enum {
	public static final field ALL I
	public static final field ANY I
	public static final field SOME I
	public static fun ALL ()Lorg/partiql/plan/rex/RexSubqueryComp$Quantifier;
	public static fun ANY ()Lorg/partiql/plan/rex/RexSubqueryComp$Quantifier;
	public static fun SOME ()Lorg/partiql/plan/rex/RexSubqueryComp$Quantifier;
	public fun name ()Ljava/lang/String;
}

public abstract class org/partiql/plan/rex/RexSubqueryIn : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rel/Rel;Ljava/util/List;)Lorg/partiql/plan/rex/RexSubqueryIn;
	public abstract fun getArgs ()Ljava/util/List;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public abstract class org/partiql/plan/rex/RexSubqueryTest : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/plan/rel/Rel;Lorg/partiql/plan/rex/RexSubqueryTest$Test;)Lorg/partiql/plan/rex/RexSubqueryTest;
	public abstract fun getInput ()Lorg/partiql/plan/rel/Rel;
	public abstract fun getTest ()Lorg/partiql/plan/rex/RexSubqueryTest$Test;
	protected fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public class org/partiql/plan/rex/RexSubqueryTest$Test : org/partiql/spi/Enum {
	public static final field EXISTS I
	public static final field UNIQUE I
	public static fun EXISTS ()Lorg/partiql/plan/rex/RexSubqueryTest$Test;
	public static fun UNIQUE ()Lorg/partiql/plan/rex/RexSubqueryTest$Test;
	public fun name ()Ljava/lang/String;
}

public abstract class org/partiql/plan/rex/RexTable : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (Lorg/partiql/spi/catalog/Table;)Lorg/partiql/plan/rex/RexTable;
	public abstract fun getTable ()Lorg/partiql/spi/catalog/Table;
	protected final fun operands ()Ljava/util/List;
	protected final fun type ()Lorg/partiql/plan/rex/RexType;
}

public final class org/partiql/plan/rex/RexType {
	public fun equals (Ljava/lang/Object;)Z
	public fun getPType ()Lorg/partiql/spi/types/PType;
	public fun hashCode ()I
	public static fun of (Lorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexType;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/partiql/plan/rex/RexVar : org/partiql/plan/rex/RexBase {
	public fun <init> ()V
	public fun accept (Lorg/partiql/plan/OperatorVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun create (IILorg/partiql/spi/types/PType;)Lorg/partiql/plan/rex/RexVar;
	public abstract fun getOffset ()I
	public abstract fun getScope ()I
	protected final fun operands ()Ljava/util/List;
}

