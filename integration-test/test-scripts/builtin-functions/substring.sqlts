/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 *  You may not use this file except in compliance with the License.
 * A copy of the License is located at:
 *
 *      http://aws.amazon.com/apache2.0/
 *
 *  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
 *  language governing permissions and limitations under the License.
 */

// valid cases 2 arguments --------------------------------------------------------------------------------------------

for::{
    template: [
        test::{
            name: "substring valid cases",
            sql: "substring('${target}' FROM ${start})",
            expected: $result
        },

        test::{
            name: "substring valid cases",
            sql: "substring('${target}', ${start})",
            expected: $result
        }
    ],

    variableSets: [
        { target: "123456789", start: "0",  result: result::"123456789" },
        { target: "123456789", start: "1",  result: result::"123456789" },
        { target: "123456789", start: "2",  result: result::"23456789" },
        { target: "123456789", start: "-4", result: result::"123456789" },

        { target: "", start: "-1", result: result::"" },
        { target: "", start: "0",  result: result::"" },

        { target: "😁😞😸😸", start: "3", result: result::"😸😸" },
        { target: "話家身圧費谷料村能計税金", start: "6", result: result::"谷料村能計税金" },
        { target: "ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя", start: "40", result: result::"ШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя" },
        { target: "( ͡° ͜ʖ ͡°)┬─┬ノ( º _ ºノ)", start: "16", result: result::"( º _ ºノ)" },
        { target: "𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫", start: "17", result: result::"𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫" },

        // there are hidden code-points for some emoji's, see http://unicode.org/reports/tr51/#def_emoji_modifier_sequence
        // U+1F469 U+1F3FD
        { target: "👩🏽", start: "2", result: result::"🏽" },
    ]
}

// valid cases 3 arguments --------------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "substring valid cases",
            sql: "substring('${target}' FROM ${start} FOR ${quantity})",
            expected: $result
        },

        test::{
            name: "substring valid cases",
            sql: "substring('${target}', ${start}, ${quantity})",
            expected: $result
        }
    ],
    variableSets: [
        { target: "123456789", start: "0",  quantity: "999", result: result::"123456789" },
        { target: "123456789", start: "0",  quantity: "2",   result: result::"1" },

        { target: "123456789", start: "1",  quantity: "999", result: result::"123456789" },
        { target: "123456789", start: "1",  quantity: "2",   result: result::"12" },

        { target: "123456789", start: "2",  quantity: "999", result: result::"23456789" },
        { target: "123456789", start: "2",  quantity: "3",   result: result::"234" },

        { target: "123456789", start: "-4", quantity: "999", result: result::"123456789" },
        { target: "123456789", start: "-4", quantity: "6",   result: result::"1" },

        { target: "",  start: "-1", quantity: "999", result: result::"" },
        { target: "",  start: "0",  quantity: "999", result: result::"" },
        { target: "1", start: "-4", quantity: "1",   result: result::"" },
        { target: "1", start: "-4", quantity: "0",   result: result::"" },
        { target: "1", start: "1", quantity: "0",   result: result::"" },
        { target: "1", start: "0", quantity: "0",   result: result::"" },

        { target: "😁😞😸😸", start: "3", quantity: "999", result: result::"😸😸" },
        { target: "😁😞😸😸", start: "3", quantity: "1",   result: result::"😸" },

        { target: "話家身圧費谷料村能計税金", start: "6", quantity: "999", result: result::"谷料村能計税金" },
        { target: "話家身圧費谷料村能計税金", start: "6", quantity: "2",   result: result::"谷料" },

        { target: "ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя", start: "40", quantity: "999", result: result::"ШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя" },
        { target: "ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя", start: "40", quantity: "4",   result: result::"ШЩЪЫ" },

        { target: "( ͡° ͜ʖ ͡°)┬─┬ノ( º _ ºノ)", start: "16", quantity: "999", result: result::"( º _ ºノ)" },
        { target: "( ͡° ͜ʖ ͡°)┬─┬ノ( º _ ºノ)", start: "18", quantity: "5", result: result::"º _ º" },

        { target: "𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫", start: "17", quantity: "999", result: result::"𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫" },
        { target: "𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐬 𝐨𝐯𝐞𝐫", start: "17", quantity: "5", result: result::"𝐣𝐮𝐦𝐩𝐬" },

        // there are hidden code-points for some emoji's, see http://unicode.org/reports/tr51/#def_emoji_modifier_sequence
        // U+1F469 U+1F3FD
        { target: "👩🏽", start: "1", quantity: "1", result: result::"👩" },
    ]
}

// null propagation 2 args -----------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "substring null and missing propagation",
            sql: "substring(${target}, ${start_pos})",
            expected: $result
        }
    ],
    variableSets: [
        { target: "null",    start_pos: "1",       result: result::null },
        { target: "''",      start_pos: "null",    result: result::null },
        { target: "null",    start_pos: "null",    result: result::null },

        { target: "missing", start_pos: "1",       result: result::null },
        { target: "''",      start_pos: "missing", result: result::null },
        { target: "missing", start_pos: "missing", result: result::null },

        { target: "null",    start_pos: "missing", result: result::null },
        { target: "missing", start_pos: "null",    result: result::null },
    ]
}

// null propagation 3 args -----------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "substring null and missing propagation",
            sql: "substring(${target}, ${start_pos}, ${quantity})",
            expected: $result
        }
    ],
    variableSets: [
        { target: "null", start_pos: "1",    quantity: "1",    result: result::null },
        { target: "''",   start_pos: "null", quantity: "1",    result: result::null },
        { target: "''",   start_pos: "1",    quantity: "null", result: result::null },
        { target: "null", start_pos: "null", quantity: "1",    result: result::null },
        { target: "''",   start_pos: "null", quantity: "null", result: result::null },
        { target: "null", start_pos: "null", quantity: "null", result: result::null },

        { target: "missing", start_pos: "1",       quantity: "1",       result: result::null },
        { target: "''",      start_pos: "missing", quantity: "1",       result: result::null },
        { target: "''",      start_pos: "1",       quantity: "missing", result: result::null },
        { target: "missing", start_pos: "missing", quantity: "1",       result: result::null },
        { target: "''",      start_pos: "missing", quantity: "missing", result: result::null },
        { target: "missing", start_pos: "missing", quantity: "missing", result: result::null },

        { target: "null", start_pos: "missing", quantity: "1",       result: result::null },
        { target: "null", start_pos: "1",       quantity: "missing", result: result::null },
        { target: "null", start_pos: "missing", quantity: "missing", result: result::null },

        { target: "missing", start_pos: "null", quantity: "1",       result: result::null },
        { target: "''",      start_pos: "null", quantity: "missing", result: result::null },
        { target: "missing", start_pos: "null", quantity: "missing", result: result::null },

        { target: "missing", start_pos: "1",       quantity: "null", result: result::null },
        { target: "''",      start_pos: "missing", quantity: "null", result: result::null },
        { target: "missing", start_pos: "missing", quantity: "null", result: result::null },

        { target: "missing", start_pos: "null", quantity: "1",    result: result::null },
        { target: "missing", start_pos: "1",    quantity: "null", result: result::null },
        { target: "missing", start_pos: "null", quantity: "null", result: result::null },

        { target: "null", start_pos: "missing", quantity: "1",    result: result::null },
        { target: "''",   start_pos: "missing", quantity: "null", result: result::null },
        { target: "null", start_pos: "missing", quantity: "null", result: result::null },

        { target: "null", start_pos: "1",    quantity: "missing", result: result::null },
        { target: "''",   start_pos: "null", quantity: "missing", result: result::null },
        { target: "null", start_pos: "null", quantity: "missing", result: result::null },

    ]
}

// wrong number of arguments --------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "substring wrong number of arguments",
            sql: $sql,
            expected: $error
        }
    ],
    variableSets: [
        { sql: "substring('')",           error: error::{ code: PARSE_EXPECTED_ARGUMENT_DELIMITER, properties: { LINE_NUMBER:1, COLUMN_NUMBER:13, TOKEN_TYPE:"RIGHT_PAREN", TOKEN_VALUE:')' } } },
        { sql: "substring('', 1, 1, 1)",  error: error::{ code: PARSE_EXPECTED_TOKEN_TYPE,         properties: { LINE_NUMBER:1, COLUMN_NUMBER:19, TOKEN_TYPE:"COMMA", TOKEN_VALUE:',', EXPECTED_TOKEN_TYPE:"RIGHT_PAREN" } } },
        { sql: "substring('', 1, 1, '')", error: error::{ code: PARSE_EXPECTED_TOKEN_TYPE,         properties: { LINE_NUMBER:1, COLUMN_NUMBER:19, TOKEN_TYPE:"COMMA", TOKEN_VALUE:',', EXPECTED_TOKEN_TYPE:"RIGHT_PAREN" } } },
    ]
}

// wrong type of arguments ---------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "substring wrong type of arguments",
            sql: $sql,
            expected: error::{
                code: "null",
                properties: {
                    LINE_NUMBER: 1,
                    COLUMN_NUMBER: 1,
                }
            }
        }
    ],
    variableSets: [
        { sql: "substring('', `{}`)" },
        { sql: "substring(1, 1)" },

        { sql: "substring(1, 1, 1)" },
        { sql: "substring('', [], 1)" },
        { sql: "substring('', 1.1, 1)" },
        { sql: "substring('', 1e1, 1)" },
        { sql: "substring('', 1, 1.1)" },
    ]
}

// invalid arguments ---------------------------------------------------------------------------------------
test::{
    name: "substring invalid quantity",
    sql: "substring('1', 4, -11)",
    expected: error::{
        code: "null",
        properties: {
            LINE_NUMBER: 1,
            COLUMN_NUMBER: 1,
        }
    }
}
