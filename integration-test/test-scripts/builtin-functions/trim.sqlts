/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 *  You may not use this file except in compliance with the License.
 * A copy of the License is located at:
 *
 *      http://aws.amazon.com/apache2.0/
 *
 *  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
 *  language governing permissions and limitations under the License.
 */




// valid cases ----------------------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "trim valid cases",
            sql: "trim(${spec} '${to_remove}' from '${target}')",
            expected: $result
        }
    ],
    variableSets: [
        { spec: "both",     to_remove: "💩", target: "💩💩💩💩😁💩💩💩💩", result: result::"😁" },
        { spec: "leading",  to_remove: "💩", target: "💩💩💩💩😁💩💩💩💩", result: result::"😁💩💩💩💩" },
        { spec: "trailing", to_remove: "💩", target: "💩💩💩💩😁💩💩💩💩", result: result::"💩💩💩💩😁" },

        { spec: "both",     to_remove: "12", target: "111112a1212121211", result: result::"a" },
        { spec: "leading",  to_remove: "12", target: "111112a1212121211", result: result::"a1212121211" },
        { spec: "trailing", to_remove: "12", target: "111112a1212121211", result: result::"111112a" },

        { spec: "both",     to_remove: "💩😸", target: "💩💩💩😸😸😸1💩💩💩😸😸😸a💩💩💩😸😸😸1💩💩💩😸😸😸", result: result::"1💩💩💩😸😸😸a💩💩💩😸😸😸1" },
        { spec: "leading",  to_remove: "💩😸", target: "💩💩💩😸😸😸1💩💩💩😸😸😸a💩💩💩😸😸😸1💩💩💩😸😸😸", result: result::"1💩💩💩😸😸😸a💩💩💩😸😸😸1💩💩💩😸😸😸" },
        { spec: "trailing", to_remove: "💩😸", target: "💩💩💩😸😸😸1💩💩💩😸😸😸a💩💩💩😸😸😸1💩💩💩😸😸😸", result: result::"💩💩💩😸😸😸1💩💩💩😸😸😸a💩💩💩😸😸😸1" },

        { spec: "both",     to_remove: "話 ", target: "話話 話話話話話話費谷料村能話話話話 話話話話    ", result: result::"費谷料村能" },
        { spec: "leading",  to_remove: "話 ", target: "話話 話話話話話話費谷料村能話話話話 話話話話    ", result: result::"費谷料村能話話話話 話話話話    " },
        { spec: "trailing", to_remove: "話 ", target: "話話 話話話話話話費谷料村能話話話話 話話話話    ", result: result::"話話 話話話話話話費谷料村能" },

        { spec: "both",     to_remove: "°º□(）)╯ノ︵_ ", target: "(╯°□°）╯︵ ┻━┻ ┬─┬ノ( º _ ºノ)", result: result::"┻━┻ ┬─┬" },
        { spec: "leading",  to_remove: "°º□(）)╯ノ︵_ ", target: "(╯°□°）╯︵ ┻━┻ ┬─┬ノ( º _ ºノ)", result: result::"┻━┻ ┬─┬ノ( º _ ºノ)" },
        { spec: "trailing", to_remove: "°º□(）)╯ノ︵_ ", target: "(╯°□°）╯︵ ┻━┻ ┬─┬ノ( º _ ºノ)", result: result::"(╯°□°）╯︵ ┻━┻ ┬─┬" },

        { spec: "both",     to_remove: "👶🏻", target: "👶🏻👩👶🏻", result: result::"👩" },
        { spec: "leading",  to_remove: "👶🏻", target: "👶🏻👩👶🏻", result: result::"👩👶🏻" },
        { spec: "trailing", to_remove: "👶🏻", target: "👶🏻👩👶🏻", result: result::"👶🏻👩" },

        { spec: "both",     to_remove: " ", target: "            ", result: result::"" },
        { spec: "leading",  to_remove: " ", target: "            ", result: result::"" },
        { spec: "trailing", to_remove: " ", target: "            ", result: result::"" },
    ]
}

// variations on valid syntax ------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "trim variations on valid syntax",
            sql: "${sql}",
            expected: result::"foobar"
        }
    ],
    variableSets: [
        { sql: "trim('      foobar       ')" },
        { sql: "trim(from '      foobar       ')" },
        { sql: "trim(both from '      foobar       ')" },
        { sql: "trim(both ' ' from '      foobar       ')" },

        { sql: "trim('12' from '1212foobar1212')" },
        { sql: "trim('12' from 'foobar1212')" },
        { sql: "trim('12' from '1212foobar')" },
    ]
}

// null propagation -----------------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "trim null and missing propagation",
            sql: "${sql}",
            expected: $result
        }
    ],
    variableSets: [
        { sql: "trim(null)",    result: result::null },
        { sql: "trim(missing)", result: result::null },

        { sql: "trim(leading from null)",  result: result::null },
        { sql: "trim(trailing from null)", result: result::null },
        { sql: "trim(both from null)",     result: result::null },

        { sql: "trim(leading from missing)",  result: result::null },
        { sql: "trim(trailing from missing)", result: result::null },
        { sql: "trim(both from missing)",     result: result::null },

        { sql: "trim(leading '' from null)",  result: result::null },
        { sql: "trim(trailing '' from null)", result: result::null },
        { sql: "trim(both '' from null)",     result: result::null },

        { sql: "trim(leading '' from missing)",  result: result::null },
        { sql: "trim(trailing '' from missing)", result: result::null },
        { sql: "trim(both '' from missing)",     result: result::null },

        { sql: "trim(leading null from '')",  result: result::null },
        { sql: "trim(trailing null from '')", result: result::null },
        { sql: "trim(both null from '')",     result: result::null },

        { sql: "trim(leading missing from '')",  result: result::null },
        { sql: "trim(trailing missing from '')", result: result::null },
        { sql: "trim(both missing from '')",     result: result::null },

        { sql: "trim(leading null from missing)",  result: result::null },
        { sql: "trim(trailing null from missing)", result: result::null },
        { sql: "trim(both null from missing)",     result: result::null },

        { sql: "trim(leading missing from null)",  result: result::null },
        { sql: "trim(trailing missing from null)", result: result::null },
        { sql: "trim(both missing from null)",     result: result::null },

        { sql: "trim(leading null from null)",  result: result::null },
        { sql: "trim(trailing null from null)", result: result::null },
        { sql: "trim(both null from null)",     result: result::null },

        { sql: "trim(leading missing from missing)",  result: result::null },
        { sql: "trim(trailing missing from missing)", result: result::null },
        { sql: "trim(both missing from missing)",     result: result::null },
    ]
}

// wrong syntax --------------------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "trim wrong number of arguments",
            sql: "${sql}",
            expected: $error
        }
    ],

    variableSets: [
        { sql: "trim()",               error: error::{ code: PARSE_UNEXPECTED_TERM,                            properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 6,  TOKEN_TYPE: "RIGHT_PAREN", TOKEN_VALUE: ')' } } },
        { sql: "trim('', '')",         error: error::{ code: PARSE_EXPECTED_RIGHT_PAREN_BUILTIN_FUNCTION_CALL, properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 8,  TOKEN_TYPE: "COMMA",       TOKEN_VALUE: ',' } } },
        { sql: "trim(leading '')",     error: error::{ code: PARSE_EXPECTED_KEYWORD,                           properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 16, TOKEN_TYPE: "RIGHT_PAREN", TOKEN_VALUE: ')', KEYWORD:"FROM" } } },
        { sql: "trim(foobar from '')", error: error::{ code: EVALUATOR_BINDING_DOES_NOT_EXIST,                 properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 6,  BINDING_NAME:"foobar" } } },
    ]
}

// wrong type of arguments ----------------------------------------------------------------------------------------
for::{
    template: [
        test::{
            name: "trim wrong number of arguments",
            sql: "trim(${spec} ${to_remove} from ${target})",
            expected: $error
        }
    ],

    variableSets: [
        { spec: "1",        to_remove: "''",      target: "''",     error: error::{ code: PARSE_EXPECTED_RIGHT_PAREN_BUILTIN_FUNCTION_CALL, properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 8,  TOKEN_TYPE: "LITERAL", TOKEN_VALUE: "" } } },
        { spec: "foobar",   to_remove: "''",      target: "''",     error: error::{ code: PARSE_EXPECTED_RIGHT_PAREN_BUILTIN_FUNCTION_CALL, properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 13, TOKEN_TYPE: "LITERAL", TOKEN_VALUE: "" } } },
        { spec: "'foobar'", to_remove: "''",      target: "''",     error: error::{ code: PARSE_EXPECTED_RIGHT_PAREN_BUILTIN_FUNCTION_CALL, properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 15, TOKEN_TYPE: "LITERAL", TOKEN_VALUE: "" } } },
        { spec: "leading",  to_remove: "1",       target: "''",     error: error::{ code: "null",                                           properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 1, } } },
        { spec: "leading",  to_remove: "foobar",  target: "''",     error: error::{ code: EVALUATOR_BINDING_DOES_NOT_EXIST,                 properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 14, BINDING_NAME: "foobar" } } },
        { spec: "leading",  to_remove: "''",      target: "1",      error: error::{ code: "null",                                           properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 1, } } },
        { spec: "leading",  to_remove: "''",      target: "foobar", error: error::{ code: EVALUATOR_BINDING_DOES_NOT_EXIST,                 properties: { LINE_NUMBER: 1, COLUMN_NUMBER: 22, BINDING_NAME: "foobar" } } },
    ]
}

