/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 *  You may not use this file except in compliance with the License.
 * A copy of the License is located at:
 *
 *      http://aws.amazon.com/apache2.0/
 *
 *  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
 *  language governing permissions and limitations under the License.
 */

// Ported from https://github.com/postgres/postgres/blob/master/src/test/regress/sql/join.sql
set_default_environment::"join.ion"

test::{
  name:"PG_JOIN_01",
  sql:"SELECT * FROM j1_tbl JOIN j2_tbl ON (j1_tbl.i = j2_tbl.i)",
  expected:result::(bag
    {
      i:1,
      j:4,
      t:"one",
      i:1,
      k:-1
    }
    {
      i:2,
      j:3,
      t:"two",
      i:2,
      k:2
    }
    {
      i:2,
      j:3,
      t:"two",
      i:2,
      k:4
    }
    {
      i:3,
      j:2,
      t:"three",
      i:3,
      k:-3
    }
    {
      i:5,
      j:0,
      t:"five",
      i:5,
      k:-5
    }
    {
      i:5,
      j:0,
      t:"five",
      i:5,
      k:-5
    }
  )
}

test::{
  name:"PG_JOIN_02",
  sql:"SELECT * FROM j1_tbl JOIN j2_tbl ON (j1_tbl.i = j2_tbl.k)",
  expected:result::(bag
    {
      i:2,
      j:3,
      t:"two",
      i:2,
      k:2
    }
    {
      i:4,
      j:1,
      t:"four",
      i:2,
      k:4
    }
  )
}

test::{
  name:"PG_JOIN_03",
  sql:"SELECT * FROM j1_tbl JOIN j2_tbl ON (j1_tbl.i <= j2_tbl.k)",
  expected:result::(bag
    {
      i:1,
      j:4,
      t:"one",
      i:2,
      k:2
    }
    {
      i:1,
      j:4,
      t:"one",
      i:2,
      k:4
    }
    {
      i:2,
      j:3,
      t:"two",
      i:2,
      k:2
    }
    {
      i:2,
      j:3,
      t:"two",
      i:2,
      k:4
    }
    {
      i:3,
      j:2,
      t:"three",
      i:2,
      k:4
    }
    {
      i:4,
      j:1,
      t:"four",
      i:2,
      k:4
    }
  )
}

test::{
  name:"PG_JOIN_04",
  sql:"SELECT * FROM j1_tbl LEFT JOIN j2_tbl ON j1_tbl.i = j2_tbl.i WHERE (j2_tbl.k = 1)",
  expected:result::(bag)
}

test::{
  name:"PG_JOIN_05",
  sql:"SELECT * FROM j1_tbl LEFT JOIN j2_tbl ON j1_tbl.i = j2_tbl.i WHERE (j2_tbl.i = 1)",
  expected:result::(bag
    {
      i:1,
      j:4,
      t:"one",
      i:1,
      k:-1
    }
  )
}

test::{
  name:"PG_JOIN_06",
  sql:"SELECT * FROM (SELECT * FROM t2) as s2 INNER JOIN (SELECT * FROM t3) s3 ON s2.name = s3.name",
  expected:result::(bag
    {
      name:"bb",
      n:12,
      name:"bb",
      n:13
    }
    {
      name:"cc",
      n:22,
      name:"cc",
      n:23
    }
  )
}

test::{
  name:"PG_JOIN_07",
  sql:"SELECT * FROM (SELECT * FROM t2) as s2 LEFT JOIN (SELECT * FROM t3) s3 ON s2.name = s3.name",
  expected:result::(bag
    {
      name:"bb",
      n:12,
      name:"bb",
      n:13
    }
    {
      name:"cc",
      n:22,
      name:"cc",
      n:23
    }
    {
      name:"ee",
      n:42,
      _2:null
    }
  )
}

test::{
  name:"PG_JOIN_08",
  sql:"SELECT * FROM (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2 INNER JOIN (SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3 ON s2.name = s3.name",
  expected:result::(bag
    {
      name:"bb",
      s2_n:12,
      s2_2:2,
      name:"bb",
      s3_n:13,
      s3_2:3
    }
    {
      name:"cc",
      s2_n:22,
      s2_2:2,
      name:"cc",
      s3_n:23,
      s3_2:3
    }
  )
}

test::{
  name:"PG_JOIN_09",
  sql:"SELECT * FROM (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2 LEFT JOIN (SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3 ON s2.name = s3.name",
  expected:result::(bag
    {
      name:"bb",
      s2_n:12,
      s2_2:2,
      name:"bb",
      s3_n:13,
      s3_2:3
    }
    {
      name:"cc",
      s2_n:22,
      s2_2:2,
      name:"cc",
      s3_n:23,
      s3_2:3
    }
    {
      name:"ee",
      s2_n:42,
      s2_2:2,
      _2:null
    }
  )
}

test::{
  name:"PG_JOIN_10",
  sql:"SELECT * FROM (SELECT name, n as s1_n, 1 as s1_1 FROM t1) as s1 INNER JOIN (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2 ON s1.name = s2.name INNER JOIN (SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3 ON s2.name = s3.name",
  expected:result::(bag
    {
      name:"bb",
      s1_n:11,
      s1_1:1,
      name:"bb",
      s2_n:12,
      s2_2:2,
      name:"bb",
      s3_n:13,
      s3_2:3
    }
  )
}
