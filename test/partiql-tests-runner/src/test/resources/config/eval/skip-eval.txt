// TODO: NOT NEEDED FOR V1 RELEASE. Alias tests. Fixing this would not result in an API change.
PERMISSIVE:::testing alias support
STRICT:::testing alias support
PERMISSIVE:::testing nested alias support
STRICT:::testing nested alias support
PERMISSIVE:::group and order by count
STRICT:::group and order by count

// TODO: NOT NEEDED FOR V1 RELEASE. Arithmetic tests. All tests are wrong.
PERMISSIVE:::repeatingDecimal // TODO: This is wrong. 4.0000 / 3.0 = 1.3333333
STRICT:::repeatingDecimal // TODO: This is wrong. 4.0000 / 3.0 = 1.3333333
PERMISSIVE:::subtractionOutOfAllowedPrecision // TODO: This is wrong. 1e100 - 1e-100 = 1e100
STRICT:::subtractionOutOfAllowedPrecision // TODO: This is wrong. 1e100 - 1e-100 = 1e100

// TODO: NEEDED. Datetime methods for EXTRACT for TIME WITH TIMEZONE and TIMESTAMP WITH TIMEZONE
PERMISSIVE:::EXTRACT(SECOND FROM TIME (2) '01:23:45.678')
STRICT:::EXTRACT(SECOND FROM TIME (2) '01:23:45.678')
PERMISSIVE:::EXTRACT(HOUR FROM TIME (2) WITH TIME ZONE '01:23:45.678-06:30')
STRICT:::EXTRACT(HOUR FROM TIME (2) WITH TIME ZONE '01:23:45.678-06:30')
PERMISSIVE:::EXTRACT(SECOND FROM TIME (2) WITH TIME ZONE '01:23:45.678-06:30')
STRICT:::EXTRACT(SECOND FROM TIME (2) WITH TIME ZONE '01:23:45.678-06:30')
PERMISSIVE:::EXTRACT(TIMEZONE_HOUR FROM `2000-01-02T03:04:05.67+08:09`)
STRICT:::EXTRACT(TIMEZONE_HOUR FROM `2000-01-02T03:04:05.67+08:09`)
PERMISSIVE:::EXTRACT(TIMEZONE_MINUTE FROM `2000-01-02T03:04:05.67+08:09`)
STRICT:::EXTRACT(TIMEZONE_MINUTE FROM `2000-01-02T03:04:05.67+08:09`)
PERMISSIVE:::EXTRACT(TIMEZONE_HOUR FROM `2000-01-02T03:04:05.67-08:09`)
STRICT:::EXTRACT(TIMEZONE_HOUR FROM `2000-01-02T03:04:05.67-08:09`)
PERMISSIVE:::EXTRACT(TIMEZONE_MINUTE FROM `2000-01-02T03:04:05.67-08:09`)
STRICT:::EXTRACT(TIMEZONE_MINUTE FROM `2000-01-02T03:04:05.67-08:09`)

// TODO: NOT NEEDED FOR V1 RELEASE. Undefined variable tests. The references are ambiguous, and tests likely need to be updated.
PERMISSIVE:::GROUP BY binding referenced in FROM clause
PERMISSIVE:::GROUP BY binding referenced in WHERE clause
PERMISSIVE:::GROUP AS binding referenced in FROM clause
PERMISSIVE:::GROUP AS binding referenced in WHERE clause
PERMISSIVE:::GROUP BY with JOIN : SELECT supplierName, COUNT(*) as the_count FROM suppliers AS s INNER JOIN products AS p ON s.supplierId = p.supplierId GROUP BY supplierName
STRICT:::GROUP BY with JOIN : SELECT supplierName, COUNT(*) as the_count FROM suppliers AS s INNER JOIN products AS p ON s.supplierId = p.supplierId GROUP BY supplierName
PERMISSIVE:::SELECT col1, g FROM simple_1_col_1_group, join_me GROUP BY col1 GROUP AS g
STRICT:::SELECT col1, g FROM simple_1_col_1_group, join_me GROUP BY col1 GROUP AS g
PERMISSIVE:::SELECT VALUE { 'col1': col1, 'g': g } FROM simple_1_col_1_group, join_me GROUP BY col1 GROUP AS g
STRICT:::SELECT VALUE { 'col1': col1, 'g': g } FROM simple_1_col_1_group, join_me GROUP BY col1 GROUP AS g
PERMISSIVE:::SELECT col1, g FROM simple_1_col_1_group, different_types_per_row GROUP BY col1 GROUP AS g
STRICT:::SELECT col1, g FROM simple_1_col_1_group, different_types_per_row GROUP BY col1 GROUP AS g
PERMISSIVE:::SELECT VALUE { 'col1': col1, 'g': g } FROM simple_1_col_1_group, different_types_per_row GROUP BY col1 GROUP AS g
STRICT:::SELECT VALUE { 'col1': col1, 'g': g } FROM simple_1_col_1_group, different_types_per_row GROUP BY col1 GROUP AS g
PERMISSIVE:::select fld3,period from t1,t2 where fld1 = 011401
PERMISSIVE:::select fld3,period from t2,t1 where companynr*10 = 37*10
PERMISSIVE:::MYSQL_SELECT_20
STRICT:::MYSQL_SELECT_20
PERMISSIVE:::MYSQL_SELECT_21
STRICT:::MYSQL_SELECT_21

// TODO: NOT NEEDED FOR V1 RELEASE. Negative offset. No API change. No impact.
PERMISSIVE:::offset -1
STRICT:::offset -1
STRICT:::offset 1-2

// TODO: NOT NEEDED FOR V1 RELEASE. Special forms. No API change.
PERMISSIVE:::More than one character given for ESCAPE

// TODO: MAYBE NEEDED FOR V1 RELEASE. Bag ops.
PERMISSIVE:::Example 6 - Value Coercion not union-compatible
STRICT:::Example 6 - Value Coercion not union-compatible

// TODO: NOT NEEDED FOR V1 RELEASE. Sexp tests. This is hotly debated.
PERMISSIVE:::projectOfSexp
STRICT:::projectOfSexp

// TODO: NOT NEEDED FOR V1 RELEASE. GPML.
PERMISSIVE:::Right with variables
STRICT:::Right with variables
PERMISSIVE:::Right with spots
STRICT:::Right with spots
PERMISSIVE:::Right shorthand
STRICT:::Right shorthand
PERMISSIVE:::Left with variables
STRICT:::Left with variables
PERMISSIVE:::Left with spots
STRICT:::Left with spots
PERMISSIVE:::Left shorthand
STRICT:::Left shorthand
PERMISSIVE:::Left+right with variables
STRICT:::Left+right with variables
PERMISSIVE:::Left+right with spots
STRICT:::Left+right with spots
PERMISSIVE:::Left+right shorthand
STRICT:::Left+right shorthand
PERMISSIVE:::Left+right with variables and label
STRICT:::Left+right with variables and label
PERMISSIVE:::Undirected with variables
STRICT:::Undirected with variables
PERMISSIVE:::Undirected with spots
STRICT:::Undirected with spots
PERMISSIVE:::Undirected shorthand
STRICT:::Undirected shorthand
PERMISSIVE:::Undirected with variables and label
STRICT:::Undirected with variables and label
PERMISSIVE:::Right+undirected with variables
STRICT:::Right+undirected with variables
PERMISSIVE:::Right+undirected with spots
STRICT:::Right+undirected with spots
PERMISSIVE:::Right+undirected shorthand
STRICT:::Right+undirected shorthand
PERMISSIVE:::Right+undirected with variables and labels
STRICT:::Right+undirected with variables and labels
PERMISSIVE:::Left+undirected with variables
STRICT:::Left+undirected with variables
PERMISSIVE:::Left+undirected with spots
STRICT:::Left+undirected with spots
PERMISSIVE:::Left+undirected shorthand
STRICT:::Left+undirected shorthand
PERMISSIVE:::Left+undirected with variables and label
STRICT:::Left+undirected with variables and label
PERMISSIVE:::Left+right+undirected with variables
STRICT:::Left+right+undirected with variables
PERMISSIVE:::Left+right+undirected with spots
STRICT:::Left+right+undirected with spots
PERMISSIVE:::Left+right+undirected shorthand
STRICT:::Left+right+undirected shorthand
PERMISSIVE:::(N0E0 MATCH (x))
STRICT:::(N0E0 MATCH (x))
PERMISSIVE:::(N0E0 MATCH -[y]-> )
STRICT:::(N0E0 MATCH -[y]-> )
PERMISSIVE:::(N0E0 MATCH (x)-[y]->(z) )
STRICT:::(N0E0 MATCH (x)-[y]->(z) )
PERMISSIVE:::(N1E0 MATCH (x))
STRICT:::(N1E0 MATCH (x))
PERMISSIVE:::(N1E0 MATCH -[y]-> )
STRICT:::(N1E0 MATCH -[y]-> )
PERMISSIVE:::(N1E0 MATCH (x)-[y]->(z) )
STRICT:::(N1E0 MATCH (x)-[y]->(z) )
PERMISSIVE:::(N1E0 MATCH (x)-[y]->(x) )
STRICT:::(N1E0 MATCH (x)-[y]->(x) )
PERMISSIVE:::(N1U1 MATCH (x))
STRICT:::(N1U1 MATCH (x))
PERMISSIVE:::(N1U1 MATCH ~[y]~ )
STRICT:::(N1U1 MATCH ~[y]~ )
PERMISSIVE:::(N1U1 MATCH (x)~[y]~(z) )
STRICT:::(N1U1 MATCH (x)~[y]~(z) )
PERMISSIVE:::(N1U1 MATCH (x)~[y]~(x) )
STRICT:::(N1U1 MATCH (x)~[y]~(x) )
PERMISSIVE:::(N1U1 MATCH (x1)~[y1]~(x2)~[y2]~(x3) )
STRICT:::(N1U1 MATCH (x1)~[y1]~(x2)~[y2]~(x3) )
PERMISSIVE:::(N1D2 MATCH (x))
STRICT:::(N1D2 MATCH (x))
PERMISSIVE:::(N1D2 MATCH -[y]-> )
STRICT:::(N1D2 MATCH -[y]-> )
PERMISSIVE:::(N1D2 MATCH (x)-[y]->(z) )
STRICT:::(N1D2 MATCH (x)-[y]->(z) )
PERMISSIVE:::(N1D2 MATCH (x)-[y]->(x) )
STRICT:::(N1D2 MATCH (x)-[y]->(x) )
PERMISSIVE:::(N1D2 MATCH (x1)-[y1]->(x2)-[y2]->(x3) )
STRICT:::(N1D2 MATCH (x1)-[y1]->(x2)-[y2]->(x3) )
PERMISSIVE:::(N2E0 MATCH (x))
STRICT:::(N2E0 MATCH (x))
PERMISSIVE:::(N2E0 MATCH -[y]-> )
STRICT:::(N2E0 MATCH -[y]-> )
PERMISSIVE:::(N2E0 MATCH (x)-[y]->(z) )
STRICT:::(N2E0 MATCH (x)-[y]->(z) )
PERMISSIVE:::(N2E0 MATCH (x)-[y]->(x) )
STRICT:::(N2E0 MATCH (x)-[y]->(x) )
PERMISSIVE:::(N2D1 MATCH (x))
STRICT:::(N2D1 MATCH (x))
PERMISSIVE:::(N2D1 MATCH -[y]-> )
STRICT:::(N2D1 MATCH -[y]-> )
PERMISSIVE:::(N2D1 MATCH (x)-[y]->(z) )
STRICT:::(N2D1 MATCH (x)-[y]->(z) )
PERMISSIVE:::(N2D1 MATCH (x)-[y]->(x) )
STRICT:::(N2D1 MATCH (x)-[y]->(x) )
PERMISSIVE:::(N2D1 MATCH (x1)-[y1]->(x2)-[y2]->(x3) )
STRICT:::(N2D1 MATCH (x1)-[y1]->(x2)-[y2]->(x3) )
PERMISSIVE:::(N2D1 MATCH (x1)-[y1]->(x2)-[y2]-(x3) )
STRICT:::(N2D1 MATCH (x1)-[y1]->(x2)-[y2]-(x3) )
PERMISSIVE:::(N2D1 MATCH (x1)-[y1]-(x2)-[y2]->(x3) )
STRICT:::(N2D1 MATCH (x1)-[y1]-(x2)-[y2]->(x3) )
PERMISSIVE:::(N2D1 MATCH (x1)-[y1]-(x2)-[y2]-(x3) )
STRICT:::(N2D1 MATCH (x1)-[y1]-(x2)-[y2]-(x3) )
PERMISSIVE:::(N2U1 MATCH (x))
STRICT:::(N2U1 MATCH (x))
PERMISSIVE:::(N2U1 MATCH ~[y]~ )
STRICT:::(N2U1 MATCH ~[y]~ )
PERMISSIVE:::(N2U1 MATCH (x)~[y]~(z) )
STRICT:::(N2U1 MATCH (x)~[y]~(z) )
PERMISSIVE:::(N2U1 MATCH (x)~[y]~(x) )
STRICT:::(N2U1 MATCH (x)~[y]~(x) )
PERMISSIVE:::(N2U1 MATCH (x1)~[y1]~(x2)~[y2]~(x3) )
STRICT:::(N2U1 MATCH (x1)~[y1]~(x2)~[y2]~(x3) )
PERMISSIVE:::(N2U1 MATCH (x1)~[y1]~(x2)-[y2]-(x3) )
STRICT:::(N2U1 MATCH (x1)~[y1]~(x2)-[y2]-(x3) )
PERMISSIVE:::(N2U1 MATCH (x1)-[y1]-(x2)~[y2]~(x3) )
STRICT:::(N2U1 MATCH (x1)-[y1]-(x2)~[y2]~(x3) )
PERMISSIVE:::(N2U1 MATCH (x1)-[y1]-(x2)-[y2]-(x3) )
STRICT:::(N2U1 MATCH (x1)-[y1]-(x2)-[y2]-(x3) )
PERMISSIVE:::(N2D2 MATCH (x))
STRICT:::(N2D2 MATCH (x))
PERMISSIVE:::(N2D2 MATCH -[y]-> )
STRICT:::(N2D2 MATCH -[y]-> )
PERMISSIVE:::(N2D2 MATCH (x)-[y]->(z) )
STRICT:::(N2D2 MATCH (x)-[y]->(z) )
PERMISSIVE:::(N2D2 MATCH (x)-[y]->(x) )
STRICT:::(N2D2 MATCH (x)-[y]->(x) )
PERMISSIVE:::(N2D2 MATCH (x1)-[y1]->(x2)-[y2]->(x3) )
STRICT:::(N2D2 MATCH (x1)-[y1]->(x2)-[y2]->(x3) )
PERMISSIVE:::(N2D2 MATCH (x1)-[y1]->(x2)-[y2]-(x3) )
STRICT:::(N2D2 MATCH (x1)-[y1]->(x2)-[y2]-(x3) )
PERMISSIVE:::(N2D2 MATCH (x1)-[y1]-(x2)-[y2]->(x3) )
STRICT:::(N2D2 MATCH (x1)-[y1]-(x2)-[y2]->(x3) )
PERMISSIVE:::(N2D2 MATCH (x1)-[y1]-(x2)-[y2]-(x3) )
STRICT:::(N2D2 MATCH (x1)-[y1]-(x2)-[y2]-(x3) )
PERMISSIVE:::(N2D2c MATCH (x))
STRICT:::(N2D2c MATCH (x))
PERMISSIVE:::(N2D2c MATCH -[y]-> )
STRICT:::(N2D2c MATCH -[y]-> )
PERMISSIVE:::(N2D2c MATCH (x)-[y]->(z) )
STRICT:::(N2D2c MATCH (x)-[y]->(z) )
PERMISSIVE:::(N2D2c MATCH (x)-[y]->(x) )
STRICT:::(N2D2c MATCH (x)-[y]->(x) )
PERMISSIVE:::(N2D2c MATCH (x1)-[y1]->(x2)-[y2]->(x3) )
STRICT:::(N2D2c MATCH (x1)-[y1]->(x2)-[y2]->(x3) )
PERMISSIVE:::(N2D2c MATCH (x1)-[y1]->(x2)-[y2]->(x1) )
STRICT:::(N2D2c MATCH (x1)-[y1]->(x2)-[y2]->(x1) )
PERMISSIVE:::(N2D2c MATCH (x1)-[y1]->(x2)-[y2]-(x3) )
STRICT:::(N2D2c MATCH (x1)-[y1]->(x2)-[y2]-(x3) )
PERMISSIVE:::(N2D2c MATCH (x1)-[y1]-(x2)-[y2]->(x3) )
STRICT:::(N2D2c MATCH (x1)-[y1]-(x2)-[y2]->(x3) )
PERMISSIVE:::(N2D2c MATCH (x1)-[y1]-(x2)-[y2]-(x3) )
STRICT:::(N2D2c MATCH (x1)-[y1]-(x2)-[y2]-(x3) )
PERMISSIVE:::(N2U2 MATCH (x))
STRICT:::(N2U2 MATCH (x))
PERMISSIVE:::(N2U2 MATCH ~[y]~ )
STRICT:::(N2U2 MATCH ~[y]~ )
PERMISSIVE:::(N2U2 MATCH (x)~[y]~(z) )
STRICT:::(N2U2 MATCH (x)~[y]~(z) )
PERMISSIVE:::(N2U2 MATCH (x)~[y]~(x) )
STRICT:::(N2U2 MATCH (x)~[y]~(x) )
PERMISSIVE:::(N2U2 MATCH (x1)~[y1]~(x2)~[y2]~(x3) )
STRICT:::(N2U2 MATCH (x1)~[y1]~(x2)~[y2]~(x3) )
PERMISSIVE:::(N2U2 MATCH (x1)~[y1]~(x2)~[y2]~(x1) )
STRICT:::(N2U2 MATCH (x1)~[y1]~(x2)~[y2]~(x1) )
