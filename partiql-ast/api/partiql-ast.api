public final class org/partiql/ast/Ast {
	public static final field INSTANCE Lorg/partiql/ast/Ast;
	public static final fun exclude (Ljava/util/List;)Lorg/partiql/ast/Exclude;
	public static final fun excludePath (Lorg/partiql/ast/expr/ExprVarRef;Ljava/util/List;)Lorg/partiql/ast/ExcludePath;
	public static final fun excludeStepCollIndex (I)Lorg/partiql/ast/ExcludeStep$CollIndex;
	public static final fun excludeStepCollWildcard ()Lorg/partiql/ast/ExcludeStep$CollWildcard;
	public static final fun excludeStepStructField (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/ExcludeStep$StructField;
	public static final fun excludeStepStructWildcard ()Lorg/partiql/ast/ExcludeStep$StructWildcard;
	public static final fun explain (Ljava/util/Map;Lorg/partiql/ast/Statement;)Lorg/partiql/ast/Explain;
	public static final fun exprAnd (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprAnd;
	public static final fun exprArray (Ljava/util/List;)Lorg/partiql/ast/expr/ExprArray;
	public static final fun exprBag (Ljava/util/List;)Lorg/partiql/ast/expr/ExprBag;
	public static final fun exprBetween (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Z)Lorg/partiql/ast/expr/ExprBetween;
	public static final fun exprCall (Lorg/partiql/ast/IdentifierChain;Ljava/util/List;Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/expr/ExprCall;
	public static final fun exprCase (Lorg/partiql/ast/expr/Expr;Ljava/util/List;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprCase;
	public static final fun exprCaseBranch (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprCase$Branch;
	public static final fun exprCast (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/DataType;)Lorg/partiql/ast/expr/ExprCast;
	public static final fun exprCoalesce (Ljava/util/List;)Lorg/partiql/ast/expr/ExprCoalesce;
	public static final fun exprExtract (Lorg/partiql/ast/DatetimeField;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprExtract;
	public static final fun exprInCollection (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Z)Lorg/partiql/ast/expr/ExprInCollection;
	public static final fun exprIsType (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/DataType;Z)Lorg/partiql/ast/expr/ExprIsType;
	public static final fun exprLike (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Z)Lorg/partiql/ast/expr/ExprLike;
	public static final fun exprLit (Lorg/partiql/value/PartiQLValue;)Lorg/partiql/ast/expr/ExprLit;
	public static final fun exprMatch (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/graph/GraphMatch;)Lorg/partiql/ast/expr/ExprMatch;
	public static final fun exprNot (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprNot;
	public static final fun exprNullIf (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprNullIf;
	public static final fun exprOperator (Ljava/lang/String;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOperator;
	public static final fun exprOr (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOr;
	public static final fun exprOverlay (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOverlay;
	public static final fun exprParameter (I)Lorg/partiql/ast/expr/ExprParameter;
	public static final fun exprPath (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/PathStep;)Lorg/partiql/ast/expr/ExprPath;
	public static final fun exprPathStepAllElements (Lorg/partiql/ast/expr/PathStep;)Lorg/partiql/ast/expr/PathStep$AllElements;
	public static final fun exprPathStepAllFields (Lorg/partiql/ast/expr/PathStep;)Lorg/partiql/ast/expr/PathStep$AllFields;
	public static final fun exprPathStepElement (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/PathStep;)Lorg/partiql/ast/expr/PathStep$Element;
	public static final fun exprPathStepField (Lorg/partiql/ast/Identifier;Lorg/partiql/ast/expr/PathStep;)Lorg/partiql/ast/expr/PathStep$Field;
	public static final fun exprPosition (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprPosition;
	public static final fun exprQuerySet (Lorg/partiql/ast/QueryBody;Lorg/partiql/ast/OrderBy;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprQuerySet;
	public static final fun exprRowValue (Ljava/util/List;)Lorg/partiql/ast/expr/ExprRowValue;
	public static final fun exprSessionAttribute (Lorg/partiql/ast/expr/SessionAttribute;)Lorg/partiql/ast/expr/ExprSessionAttribute;
	public static final fun exprStruct (Ljava/util/List;)Lorg/partiql/ast/expr/ExprStruct;
	public static final fun exprStructField (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprStruct$Field;
	public static final fun exprSubstring (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprSubstring;
	public static final fun exprTrim (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/TrimSpec;)Lorg/partiql/ast/expr/ExprTrim;
	public static final fun exprValues (Ljava/util/List;)Lorg/partiql/ast/expr/ExprValues;
	public static final fun exprVarRef (Lorg/partiql/ast/IdentifierChain;Lorg/partiql/ast/expr/Scope;)Lorg/partiql/ast/expr/ExprVarRef;
	public static final fun exprVariant (Ljava/lang/String;Ljava/lang/String;)Lorg/partiql/ast/expr/ExprVariant;
	public static final fun exprWindow (Lorg/partiql/ast/expr/WindowFunction;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/ExprWindow$Over;)Lorg/partiql/ast/expr/ExprWindow;
	public static final fun exprWindowOver (Ljava/util/List;Ljava/util/List;)Lorg/partiql/ast/expr/ExprWindow$Over;
	public static final fun from (Ljava/util/List;)Lorg/partiql/ast/From;
	public static final fun fromExpr (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/FromType;Lorg/partiql/ast/Identifier;Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/FromExpr;
	public static final fun fromJoin (Lorg/partiql/ast/FromTableRef;Lorg/partiql/ast/FromTableRef;Lorg/partiql/ast/JoinType;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/FromJoin;
	public static final fun graphLabelConj (Lorg/partiql/ast/graph/GraphLabel;Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphLabel$Conj;
	public static final fun graphLabelDisj (Lorg/partiql/ast/graph/GraphLabel;Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphLabel$Disj;
	public static final fun graphLabelName (Ljava/lang/String;)Lorg/partiql/ast/graph/GraphLabel$Name;
	public static final fun graphLabelNegation (Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphLabel$Negation;
	public static final fun graphLabelWildcard ()Lorg/partiql/ast/graph/GraphLabel$Wildcard;
	public static final fun graphMatch (Ljava/util/List;Lorg/partiql/ast/graph/GraphSelector;)Lorg/partiql/ast/graph/GraphMatch;
	public static final fun graphMatchEdge (Lorg/partiql/ast/graph/GraphDirection;Lorg/partiql/ast/graph/GraphQuantifier;Lorg/partiql/ast/expr/Expr;Ljava/lang/String;Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphPart$Edge;
	public static final fun graphMatchNode (Lorg/partiql/ast/expr/Expr;Ljava/lang/String;Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphPart$Node;
	public static final fun graphMatchPattern (Lorg/partiql/ast/graph/GraphPattern;)Lorg/partiql/ast/graph/GraphPart$Pattern;
	public static final fun graphPattern (Lorg/partiql/ast/graph/GraphRestrictor;Lorg/partiql/ast/expr/Expr;Ljava/lang/String;Lorg/partiql/ast/graph/GraphQuantifier;Ljava/util/List;)Lorg/partiql/ast/graph/GraphPattern;
	public static final fun graphQuantifier (JLjava/lang/Long;)Lorg/partiql/ast/graph/GraphQuantifier;
	public static final fun graphSelectorAllShortest ()Lorg/partiql/ast/graph/GraphSelector$AllShortest;
	public static final fun graphSelectorAny ()Lorg/partiql/ast/graph/GraphSelector$Any;
	public static final fun graphSelectorAnyK (J)Lorg/partiql/ast/graph/GraphSelector$AnyK;
	public static final fun graphSelectorAnyShortest ()Lorg/partiql/ast/graph/GraphSelector$AnyShortest;
	public static final fun graphSelectorShortestK (J)Lorg/partiql/ast/graph/GraphSelector$ShortestK;
	public static final fun graphSelectorShortestKGroup (J)Lorg/partiql/ast/graph/GraphSelector$ShortestKGroup;
	public static final fun groupBy (Lorg/partiql/ast/GroupByStrategy;Ljava/util/List;Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/GroupBy;
	public static final fun groupByKey (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/GroupBy$Key;
	public static final fun identifier (Ljava/lang/String;Z)Lorg/partiql/ast/Identifier;
	public static final fun identifierChain (Lorg/partiql/ast/Identifier;Lorg/partiql/ast/IdentifierChain;)Lorg/partiql/ast/IdentifierChain;
	public static final fun let (Ljava/util/List;)Lorg/partiql/ast/Let;
	public static final fun letBinding (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/Let$Binding;
	public static final fun orderBy (Ljava/util/List;)Lorg/partiql/ast/OrderBy;
	public static final fun query (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/Query;
	public static final fun queryBodySFW (Lorg/partiql/ast/Select;Lorg/partiql/ast/Exclude;Lorg/partiql/ast/From;Lorg/partiql/ast/Let;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/GroupBy;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/QueryBody$SFW;
	public static final fun queryBodySetOp (Lorg/partiql/ast/SetOp;ZLorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/QueryBody$SetOp;
	public static final fun selectItemExpr (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/SelectItem$Expr;
	public static final fun selectItemStar (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/SelectItem$Star;
	public static final fun selectList (Ljava/util/List;Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/SelectList;
	public static final fun selectPivot (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/SelectPivot;
	public static final fun selectStar (Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/SelectStar;
	public static final fun selectValue (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/SelectValue;
	public static final fun setOp (Lorg/partiql/ast/SetOpType;Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/SetOp;
	public static final fun sort (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/Order;Lorg/partiql/ast/Nulls;)Lorg/partiql/ast/Sort;
}

public abstract class org/partiql/ast/AstEnum : org/partiql/ast/AstNode {
	public fun <init> ()V
	public abstract fun code ()I
	public abstract fun name ()Ljava/lang/String;
}

public abstract class org/partiql/ast/AstNode {
	public field tag Ljava/lang/String;
	public fun <init> ()V
	public abstract fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun children ()Ljava/util/Collection;
}

public abstract class org/partiql/ast/AstRewriter : org/partiql/ast/AstVisitor {
	public fun <init> ()V
	public synthetic fun defaultReturn (Lorg/partiql/ast/AstNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun defaultReturn (Lorg/partiql/ast/AstNode;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExclude (Lorg/partiql/ast/Exclude;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExclude (Lorg/partiql/ast/Exclude;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExcludePath (Lorg/partiql/ast/ExcludePath;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludePath (Lorg/partiql/ast/ExcludePath;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExcludeStepCollIndex (Lorg/partiql/ast/ExcludeStep$CollIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepCollIndex (Lorg/partiql/ast/ExcludeStep$CollIndex;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExcludeStepCollWildcard (Lorg/partiql/ast/ExcludeStep$CollWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepCollWildcard (Lorg/partiql/ast/ExcludeStep$CollWildcard;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExcludeStepStructField (Lorg/partiql/ast/ExcludeStep$StructField;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepStructField (Lorg/partiql/ast/ExcludeStep$StructField;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExcludeStepStructWildcard (Lorg/partiql/ast/ExcludeStep$StructWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepStructWildcard (Lorg/partiql/ast/ExcludeStep$StructWildcard;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExplain (Lorg/partiql/ast/Explain;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExplain (Lorg/partiql/ast/Explain;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprAnd (Lorg/partiql/ast/expr/ExprAnd;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprAnd (Lorg/partiql/ast/expr/ExprAnd;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprArray (Lorg/partiql/ast/expr/ExprArray;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprArray (Lorg/partiql/ast/expr/ExprArray;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprBag (Lorg/partiql/ast/expr/ExprBag;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprBag (Lorg/partiql/ast/expr/ExprBag;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprBetween (Lorg/partiql/ast/expr/ExprBetween;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprBetween (Lorg/partiql/ast/expr/ExprBetween;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprCall (Lorg/partiql/ast/expr/ExprCall;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCall (Lorg/partiql/ast/expr/ExprCall;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprCase (Lorg/partiql/ast/expr/ExprCase;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCase (Lorg/partiql/ast/expr/ExprCase;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprCaseBranch (Lorg/partiql/ast/expr/ExprCase$Branch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCaseBranch (Lorg/partiql/ast/expr/ExprCase$Branch;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprCast (Lorg/partiql/ast/expr/ExprCast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCast (Lorg/partiql/ast/expr/ExprCast;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprCoalesce (Lorg/partiql/ast/expr/ExprCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCoalesce (Lorg/partiql/ast/expr/ExprCoalesce;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprExtract (Lorg/partiql/ast/expr/ExprExtract;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprExtract (Lorg/partiql/ast/expr/ExprExtract;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprInCollection (Lorg/partiql/ast/expr/ExprInCollection;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprInCollection (Lorg/partiql/ast/expr/ExprInCollection;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprIsType (Lorg/partiql/ast/expr/ExprIsType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprIsType (Lorg/partiql/ast/expr/ExprIsType;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprLike (Lorg/partiql/ast/expr/ExprLike;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprLike (Lorg/partiql/ast/expr/ExprLike;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprLit (Lorg/partiql/ast/expr/ExprLit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprLit (Lorg/partiql/ast/expr/ExprLit;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprMatch (Lorg/partiql/ast/expr/ExprMatch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprMatch (Lorg/partiql/ast/expr/ExprMatch;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprNot (Lorg/partiql/ast/expr/ExprNot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprNot (Lorg/partiql/ast/expr/ExprNot;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprNullIf (Lorg/partiql/ast/expr/ExprNullIf;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprNullIf (Lorg/partiql/ast/expr/ExprNullIf;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprOperator (Lorg/partiql/ast/expr/ExprOperator;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOperator (Lorg/partiql/ast/expr/ExprOperator;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprOr (Lorg/partiql/ast/expr/ExprOr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOr (Lorg/partiql/ast/expr/ExprOr;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprOverlay (Lorg/partiql/ast/expr/ExprOverlay;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOverlay (Lorg/partiql/ast/expr/ExprOverlay;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprParameter (Lorg/partiql/ast/expr/ExprParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprParameter (Lorg/partiql/ast/expr/ExprParameter;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprPath (Lorg/partiql/ast/expr/ExprPath;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprPath (Lorg/partiql/ast/expr/ExprPath;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprPosition (Lorg/partiql/ast/expr/ExprPosition;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprPosition (Lorg/partiql/ast/expr/ExprPosition;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprQuerySet (Lorg/partiql/ast/expr/ExprQuerySet;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprQuerySet (Lorg/partiql/ast/expr/ExprQuerySet;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprRowValue (Lorg/partiql/ast/expr/ExprRowValue;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprRowValue (Lorg/partiql/ast/expr/ExprRowValue;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprSessionAttribute (Lorg/partiql/ast/expr/ExprSessionAttribute;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprSessionAttribute (Lorg/partiql/ast/expr/ExprSessionAttribute;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprStruct (Lorg/partiql/ast/expr/ExprStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprStruct (Lorg/partiql/ast/expr/ExprStruct;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprStructField (Lorg/partiql/ast/expr/ExprStruct$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprStructField (Lorg/partiql/ast/expr/ExprStruct$Field;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprSubstring (Lorg/partiql/ast/expr/ExprSubstring;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprSubstring (Lorg/partiql/ast/expr/ExprSubstring;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprTrim (Lorg/partiql/ast/expr/ExprTrim;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprTrim (Lorg/partiql/ast/expr/ExprTrim;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprValues (Lorg/partiql/ast/expr/ExprValues;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprValues (Lorg/partiql/ast/expr/ExprValues;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprVarRef (Lorg/partiql/ast/expr/ExprVarRef;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprVarRef (Lorg/partiql/ast/expr/ExprVarRef;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprVariant (Lorg/partiql/ast/expr/ExprVariant;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprVariant (Lorg/partiql/ast/expr/ExprVariant;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprWindow (Lorg/partiql/ast/expr/ExprWindow;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprWindow (Lorg/partiql/ast/expr/ExprWindow;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitExprWindowOver (Lorg/partiql/ast/expr/ExprWindow$Over;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprWindowOver (Lorg/partiql/ast/expr/ExprWindow$Over;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitFrom (Lorg/partiql/ast/From;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFrom (Lorg/partiql/ast/From;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitFromExpr (Lorg/partiql/ast/FromExpr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFromExpr (Lorg/partiql/ast/FromExpr;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitFromJoin (Lorg/partiql/ast/FromJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFromJoin (Lorg/partiql/ast/FromJoin;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphMatch (Lorg/partiql/ast/graph/GraphMatch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphMatch (Lorg/partiql/ast/graph/GraphMatch;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphPattern (Lorg/partiql/ast/graph/GraphPattern;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphPattern (Lorg/partiql/ast/graph/GraphPattern;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphQuantifier (Lorg/partiql/ast/graph/GraphQuantifier;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphQuantifier (Lorg/partiql/ast/graph/GraphQuantifier;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphSelectorAllShortest (Lorg/partiql/ast/graph/GraphSelector$AllShortest;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorAllShortest (Lorg/partiql/ast/graph/GraphSelector$AllShortest;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphSelectorAny (Lorg/partiql/ast/graph/GraphSelector$Any;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorAny (Lorg/partiql/ast/graph/GraphSelector$Any;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphSelectorAnyK (Lorg/partiql/ast/graph/GraphSelector$AnyK;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorAnyK (Lorg/partiql/ast/graph/GraphSelector$AnyK;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphSelectorAnyShortest (Lorg/partiql/ast/graph/GraphSelector$AnyShortest;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorAnyShortest (Lorg/partiql/ast/graph/GraphSelector$AnyShortest;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphSelectorShortestK (Lorg/partiql/ast/graph/GraphSelector$ShortestK;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorShortestK (Lorg/partiql/ast/graph/GraphSelector$ShortestK;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGraphSelectorShortestKGroup (Lorg/partiql/ast/graph/GraphSelector$ShortestKGroup;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorShortestKGroup (Lorg/partiql/ast/graph/GraphSelector$ShortestKGroup;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGroupBy (Lorg/partiql/ast/GroupBy;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGroupBy (Lorg/partiql/ast/GroupBy;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitGroupByKey (Lorg/partiql/ast/GroupBy$Key;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGroupByKey (Lorg/partiql/ast/GroupBy$Key;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitIdentifier (Lorg/partiql/ast/Identifier;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifier (Lorg/partiql/ast/Identifier;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitIdentifierChain (Lorg/partiql/ast/IdentifierChain;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifierChain (Lorg/partiql/ast/IdentifierChain;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitLet (Lorg/partiql/ast/Let;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLet (Lorg/partiql/ast/Let;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitLetBinding (Lorg/partiql/ast/Let$Binding;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLetBinding (Lorg/partiql/ast/Let$Binding;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitPathStepAllElements (Lorg/partiql/ast/expr/PathStep$AllElements;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepAllElements (Lorg/partiql/ast/expr/PathStep$AllElements;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitPathStepAllFields (Lorg/partiql/ast/expr/PathStep$AllFields;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepAllFields (Lorg/partiql/ast/expr/PathStep$AllFields;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitPathStepElement (Lorg/partiql/ast/expr/PathStep$Element;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepElement (Lorg/partiql/ast/expr/PathStep$Element;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitPathStepField (Lorg/partiql/ast/expr/PathStep$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepField (Lorg/partiql/ast/expr/PathStep$Field;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitQuery (Lorg/partiql/ast/Query;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQuery (Lorg/partiql/ast/Query;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitQueryBodySFW (Lorg/partiql/ast/QueryBody$SFW;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQueryBodySFW (Lorg/partiql/ast/QueryBody$SFW;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitQueryBodySetOp (Lorg/partiql/ast/QueryBody$SetOp;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQueryBodySetOp (Lorg/partiql/ast/QueryBody$SetOp;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitSelectItemExpr (Lorg/partiql/ast/SelectItem$Expr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectItemExpr (Lorg/partiql/ast/SelectItem$Expr;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitSelectItemStar (Lorg/partiql/ast/SelectItem$Star;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectItemStar (Lorg/partiql/ast/SelectItem$Star;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitSelectList (Lorg/partiql/ast/SelectList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectList (Lorg/partiql/ast/SelectList;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitSelectPivot (Lorg/partiql/ast/SelectPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectPivot (Lorg/partiql/ast/SelectPivot;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitSelectStar (Lorg/partiql/ast/SelectStar;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectStar (Lorg/partiql/ast/SelectStar;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitSelectValue (Lorg/partiql/ast/SelectValue;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectValue (Lorg/partiql/ast/SelectValue;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
	public synthetic fun visitSetOp (Lorg/partiql/ast/SetOp;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSetOp (Lorg/partiql/ast/SetOp;Ljava/lang/Object;)Lorg/partiql/ast/AstNode;
}

public abstract class org/partiql/ast/AstVisitor {
	public fun <init> ()V
	public abstract fun defaultReturn (Lorg/partiql/ast/AstNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun defaultVisit (Lorg/partiql/ast/AstNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visit (Lorg/partiql/ast/AstNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDataType (Lorg/partiql/ast/DataType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExclude (Lorg/partiql/ast/Exclude;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludePath (Lorg/partiql/ast/ExcludePath;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStep (Lorg/partiql/ast/ExcludeStep;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepCollIndex (Lorg/partiql/ast/ExcludeStep$CollIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepCollWildcard (Lorg/partiql/ast/ExcludeStep$CollWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepStructField (Lorg/partiql/ast/ExcludeStep$StructField;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepStructWildcard (Lorg/partiql/ast/ExcludeStep$StructWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExplain (Lorg/partiql/ast/Explain;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExpr (Lorg/partiql/ast/expr/Expr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprAnd (Lorg/partiql/ast/expr/ExprAnd;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprArray (Lorg/partiql/ast/expr/ExprArray;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprBag (Lorg/partiql/ast/expr/ExprBag;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprBetween (Lorg/partiql/ast/expr/ExprBetween;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCall (Lorg/partiql/ast/expr/ExprCall;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCase (Lorg/partiql/ast/expr/ExprCase;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCaseBranch (Lorg/partiql/ast/expr/ExprCase$Branch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCast (Lorg/partiql/ast/expr/ExprCast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCoalesce (Lorg/partiql/ast/expr/ExprCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprExtract (Lorg/partiql/ast/expr/ExprExtract;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprInCollection (Lorg/partiql/ast/expr/ExprInCollection;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprIsType (Lorg/partiql/ast/expr/ExprIsType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprLike (Lorg/partiql/ast/expr/ExprLike;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprLit (Lorg/partiql/ast/expr/ExprLit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprMatch (Lorg/partiql/ast/expr/ExprMatch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprNot (Lorg/partiql/ast/expr/ExprNot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprNullIf (Lorg/partiql/ast/expr/ExprNullIf;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOperator (Lorg/partiql/ast/expr/ExprOperator;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOr (Lorg/partiql/ast/expr/ExprOr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOverlay (Lorg/partiql/ast/expr/ExprOverlay;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprParameter (Lorg/partiql/ast/expr/ExprParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprPath (Lorg/partiql/ast/expr/ExprPath;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprPosition (Lorg/partiql/ast/expr/ExprPosition;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprQuerySet (Lorg/partiql/ast/expr/ExprQuerySet;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprRowValue (Lorg/partiql/ast/expr/ExprRowValue;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprSessionAttribute (Lorg/partiql/ast/expr/ExprSessionAttribute;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprStruct (Lorg/partiql/ast/expr/ExprStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprStructField (Lorg/partiql/ast/expr/ExprStruct$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprSubstring (Lorg/partiql/ast/expr/ExprSubstring;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprTrim (Lorg/partiql/ast/expr/ExprTrim;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprValues (Lorg/partiql/ast/expr/ExprValues;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprVarRef (Lorg/partiql/ast/expr/ExprVarRef;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprVariant (Lorg/partiql/ast/expr/ExprVariant;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprWindow (Lorg/partiql/ast/expr/ExprWindow;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprWindowOver (Lorg/partiql/ast/expr/ExprWindow$Over;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFrom (Lorg/partiql/ast/From;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFromExpr (Lorg/partiql/ast/FromExpr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFromJoin (Lorg/partiql/ast/FromJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFromTableRef (Lorg/partiql/ast/FromTableRef;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphLabel (Lorg/partiql/ast/graph/GraphLabel;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphLabelConj (Lorg/partiql/ast/graph/GraphLabel$Conj;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphLabelDisj (Lorg/partiql/ast/graph/GraphLabel$Disj;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphLabelName (Lorg/partiql/ast/graph/GraphLabel$Name;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphLabelNegation (Lorg/partiql/ast/graph/GraphLabel$Negation;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphLabelWildcard (Lorg/partiql/ast/graph/GraphLabel$Wildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphMatch (Lorg/partiql/ast/graph/GraphMatch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphPart (Lorg/partiql/ast/graph/GraphPart;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphPartEdge (Lorg/partiql/ast/graph/GraphPart$Edge;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphPartNode (Lorg/partiql/ast/graph/GraphPart$Node;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphPartPattern (Lorg/partiql/ast/graph/GraphPart$Pattern;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphPattern (Lorg/partiql/ast/graph/GraphPattern;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphQuantifier (Lorg/partiql/ast/graph/GraphQuantifier;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelector (Lorg/partiql/ast/graph/GraphSelector;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorAllShortest (Lorg/partiql/ast/graph/GraphSelector$AllShortest;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorAny (Lorg/partiql/ast/graph/GraphSelector$Any;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorAnyK (Lorg/partiql/ast/graph/GraphSelector$AnyK;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorAnyShortest (Lorg/partiql/ast/graph/GraphSelector$AnyShortest;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorShortestK (Lorg/partiql/ast/graph/GraphSelector$ShortestK;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGraphSelectorShortestKGroup (Lorg/partiql/ast/graph/GraphSelector$ShortestKGroup;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGroupBy (Lorg/partiql/ast/GroupBy;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGroupByKey (Lorg/partiql/ast/GroupBy$Key;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifier (Lorg/partiql/ast/Identifier;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifierChain (Lorg/partiql/ast/IdentifierChain;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLet (Lorg/partiql/ast/Let;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLetBinding (Lorg/partiql/ast/Let$Binding;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitOrderBy (Lorg/partiql/ast/OrderBy;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStep (Lorg/partiql/ast/expr/PathStep;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepAllElements (Lorg/partiql/ast/expr/PathStep$AllElements;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepAllFields (Lorg/partiql/ast/expr/PathStep$AllFields;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepElement (Lorg/partiql/ast/expr/PathStep$Element;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepField (Lorg/partiql/ast/expr/PathStep$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQuery (Lorg/partiql/ast/Query;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQueryBody (Lorg/partiql/ast/QueryBody;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQueryBodySFW (Lorg/partiql/ast/QueryBody$SFW;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQueryBodySetOp (Lorg/partiql/ast/QueryBody$SetOp;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelect (Lorg/partiql/ast/Select;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectItem (Lorg/partiql/ast/SelectItem;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectItemExpr (Lorg/partiql/ast/SelectItem$Expr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectItemStar (Lorg/partiql/ast/SelectItem$Star;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectList (Lorg/partiql/ast/SelectList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectPivot (Lorg/partiql/ast/SelectPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectStar (Lorg/partiql/ast/SelectStar;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectValue (Lorg/partiql/ast/SelectValue;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSetOp (Lorg/partiql/ast/SetOp;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSort (Lorg/partiql/ast/Sort;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStatement (Lorg/partiql/ast/Statement;Ljava/lang/Object;)Ljava/lang/Object;
}

public class org/partiql/ast/DataType : org/partiql/ast/AstEnum {
	public static final field BAG I
	public static final field BIGINT I
	public static final field BINARY_LARGE_OBJECT I
	public static final field BIT I
	public static final field BIT_VARYING I
	public static final field BLOB I
	public static final field BOOL I
	public static final field BOOLEAN I
	public static final field CHAR I
	public static final field CHARACTER I
	public static final field CHARACTER_LARGE_OBJECT I
	public static final field CHARACTER_VARYING I
	public static final field CHAR_LARGE_OBJECT I
	public static final field CHAR_VARYING I
	public static final field CLOB I
	public static final field DATE I
	public static final field DEC I
	public static final field DECIMAL I
	public static final field DOUBLE_PRECISION I
	public static final field FLOAT I
	public static final field INT I
	public static final field INT2 I
	public static final field INT4 I
	public static final field INT8 I
	public static final field INTEGER I
	public static final field INTEGER2 I
	public static final field INTEGER4 I
	public static final field INTEGER8 I
	public static final field INTERVAL I
	public static final field LIST I
	public static final field MISSING I
	public static final field NULL I
	public static final field NUMERIC I
	public static final field REAL I
	public static final field SEXP I
	public static final field SMALLINT I
	public static final field STRING I
	public static final field STRUCT I
	public static final field SYMBOL I
	public static final field TIME I
	public static final field TIMESTAMP I
	public static final field TIMESTAMP_WITH_TIME_ZONE I
	public static final field TIME_WITH_TIME_ZONE I
	public static final field TINYINT I
	public static final field TUPLE I
	public static final field UNKNOWN I
	public static final field USER_DEFINED I
	public static final field VARCHAR I
	public static fun BAG ()Lorg/partiql/ast/DataType;
	public static fun BIGINT ()Lorg/partiql/ast/DataType;
	public static fun BINARY_LARGE_OBJECT ()Lorg/partiql/ast/DataType;
	public static fun BINARY_LARGE_OBJECT (I)Lorg/partiql/ast/DataType;
	public static fun BIT ()Lorg/partiql/ast/DataType;
	public static fun BIT (I)Lorg/partiql/ast/DataType;
	public static fun BIT_VARYING ()Lorg/partiql/ast/DataType;
	public static fun BIT_VARYING (I)Lorg/partiql/ast/DataType;
	public static fun BLOB ()Lorg/partiql/ast/DataType;
	public static fun BLOB (I)Lorg/partiql/ast/DataType;
	public static fun BOOL ()Lorg/partiql/ast/DataType;
	public static fun BOOLEAN ()Lorg/partiql/ast/DataType;
	public static fun CHAR ()Lorg/partiql/ast/DataType;
	public static fun CHAR (I)Lorg/partiql/ast/DataType;
	public static fun CHARACTER ()Lorg/partiql/ast/DataType;
	public static fun CHARACTER (I)Lorg/partiql/ast/DataType;
	public static fun CHARACTER_LARGE_OBJECT ()Lorg/partiql/ast/DataType;
	public static fun CHARACTER_LARGE_OBJECT (I)Lorg/partiql/ast/DataType;
	public static fun CHARACTER_VARYING ()Lorg/partiql/ast/DataType;
	public static fun CHARACTER_VARYING (I)Lorg/partiql/ast/DataType;
	public static fun CHAR_LARGE_OBJECT ()Lorg/partiql/ast/DataType;
	public static fun CHAR_LARGE_OBJECT (I)Lorg/partiql/ast/DataType;
	public static fun CHAR_VARYING ()Lorg/partiql/ast/DataType;
	public static fun CHAR_VARYING (I)Lorg/partiql/ast/DataType;
	public static fun CLOB ()Lorg/partiql/ast/DataType;
	public static fun CLOB (I)Lorg/partiql/ast/DataType;
	public static fun DATE ()Lorg/partiql/ast/DataType;
	public static fun DEC ()Lorg/partiql/ast/DataType;
	public static fun DEC (I)Lorg/partiql/ast/DataType;
	public static fun DEC (II)Lorg/partiql/ast/DataType;
	public static fun DECIMAL ()Lorg/partiql/ast/DataType;
	public static fun DECIMAL (I)Lorg/partiql/ast/DataType;
	public static fun DECIMAL (II)Lorg/partiql/ast/DataType;
	public static fun DOUBLE_PRECISION ()Lorg/partiql/ast/DataType;
	public static fun FLOAT ()Lorg/partiql/ast/DataType;
	public static fun FLOAT (I)Lorg/partiql/ast/DataType;
	public static fun INT ()Lorg/partiql/ast/DataType;
	public static fun INT2 ()Lorg/partiql/ast/DataType;
	public static fun INT4 ()Lorg/partiql/ast/DataType;
	public static fun INT8 ()Lorg/partiql/ast/DataType;
	public static fun INTEGER ()Lorg/partiql/ast/DataType;
	public static fun INTEGER2 ()Lorg/partiql/ast/DataType;
	public static fun INTEGER4 ()Lorg/partiql/ast/DataType;
	public static fun INTEGER8 ()Lorg/partiql/ast/DataType;
	public static fun INTERVAL ()Lorg/partiql/ast/DataType;
	public static fun LIST ()Lorg/partiql/ast/DataType;
	public static fun MISSING ()Lorg/partiql/ast/DataType;
	public static fun NULL ()Lorg/partiql/ast/DataType;
	public static fun NUMERIC ()Lorg/partiql/ast/DataType;
	public static fun NUMERIC (I)Lorg/partiql/ast/DataType;
	public static fun NUMERIC (II)Lorg/partiql/ast/DataType;
	public static fun REAL ()Lorg/partiql/ast/DataType;
	public static fun SEXP ()Lorg/partiql/ast/DataType;
	public static fun SMALLINT ()Lorg/partiql/ast/DataType;
	public static fun STRING ()Lorg/partiql/ast/DataType;
	public static fun STRING (I)Lorg/partiql/ast/DataType;
	public static fun STRUCT ()Lorg/partiql/ast/DataType;
	public static fun SYMBOL ()Lorg/partiql/ast/DataType;
	public static fun TIME ()Lorg/partiql/ast/DataType;
	public static fun TIME (I)Lorg/partiql/ast/DataType;
	public static fun TIMESTAMP ()Lorg/partiql/ast/DataType;
	public static fun TIMESTAMP (I)Lorg/partiql/ast/DataType;
	public static fun TIMESTAMP_WITH_TIME_ZONE ()Lorg/partiql/ast/DataType;
	public static fun TIMESTAMP_WITH_TIME_ZONE (I)Lorg/partiql/ast/DataType;
	public static fun TIME_WITH_TIME_ZONE ()Lorg/partiql/ast/DataType;
	public static fun TIME_WITH_TIME_ZONE (I)Lorg/partiql/ast/DataType;
	public static fun TINYINT ()Lorg/partiql/ast/DataType;
	public static fun TUPLE ()Lorg/partiql/ast/DataType;
	public static fun UNKNOWN ()Lorg/partiql/ast/DataType;
	public static fun USER_DEFINED ()Lorg/partiql/ast/DataType;
	public static fun USER_DEFINED (Lorg/partiql/ast/IdentifierChain;)Lorg/partiql/ast/DataType;
	public static fun VARCHAR ()Lorg/partiql/ast/DataType;
	public static fun VARCHAR (I)Lorg/partiql/ast/DataType;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun getLength ()Ljava/lang/Integer;
	public fun getName ()Lorg/partiql/ast/IdentifierChain;
	public fun getPrecision ()Ljava/lang/Integer;
	public fun getScale ()Ljava/lang/Integer;
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/DataType;
}

public class org/partiql/ast/DatetimeField : org/partiql/ast/AstEnum {
	public static final field DAY I
	public static final field HOUR I
	public static final field MINUTE I
	public static final field MONTH I
	public static final field SECOND I
	public static final field TIMEZONE_HOUR I
	public static final field TIMEZONE_MINUTE I
	public static final field UNKNOWN I
	public static final field YEAR I
	public static fun DAY ()Lorg/partiql/ast/DatetimeField;
	public static fun HOUR ()Lorg/partiql/ast/DatetimeField;
	public static fun MINUTE ()Lorg/partiql/ast/DatetimeField;
	public static fun MONTH ()Lorg/partiql/ast/DatetimeField;
	public static fun SECOND ()Lorg/partiql/ast/DatetimeField;
	public static fun TIMEZONE_HOUR ()Lorg/partiql/ast/DatetimeField;
	public static fun TIMEZONE_MINUTE ()Lorg/partiql/ast/DatetimeField;
	public static fun UNKNOWN ()Lorg/partiql/ast/DatetimeField;
	public static fun YEAR ()Lorg/partiql/ast/DatetimeField;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/DatetimeField;
}

public class org/partiql/ast/Exclude : org/partiql/ast/AstNode {
	public final field excludePaths Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/Exclude$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/Exclude$Builder {
	public fun build ()Lorg/partiql/ast/Exclude;
	public fun excludePaths (Ljava/util/List;)Lorg/partiql/ast/Exclude$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/ExcludePath : org/partiql/ast/AstNode {
	public final field excludeSteps Ljava/util/List;
	public final field root Lorg/partiql/ast/expr/ExprVarRef;
	public fun <init> (Lorg/partiql/ast/expr/ExprVarRef;Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/ExcludePath$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/ExcludePath$Builder {
	public fun build ()Lorg/partiql/ast/ExcludePath;
	public fun excludeSteps (Ljava/util/List;)Lorg/partiql/ast/ExcludePath$Builder;
	public fun root (Lorg/partiql/ast/expr/ExprVarRef;)Lorg/partiql/ast/ExcludePath$Builder;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/partiql/ast/ExcludeStep : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public class org/partiql/ast/ExcludeStep$CollIndex : org/partiql/ast/ExcludeStep {
	public final field index I
	public fun <init> (I)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/ExcludeStep$CollIndex$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/ExcludeStep$CollIndex$Builder {
	public fun build ()Lorg/partiql/ast/ExcludeStep$CollIndex;
	public fun index (I)Lorg/partiql/ast/ExcludeStep$CollIndex$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/ExcludeStep$CollWildcard : org/partiql/ast/ExcludeStep {
	public fun <init> ()V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/ExcludeStep$CollWildcard$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/ExcludeStep$CollWildcard$Builder {
	public fun build ()Lorg/partiql/ast/ExcludeStep$CollWildcard;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/ExcludeStep$StructField : org/partiql/ast/ExcludeStep {
	public final field symbol Lorg/partiql/ast/Identifier;
	public fun <init> (Lorg/partiql/ast/Identifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/ExcludeStep$StructField$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/ExcludeStep$StructField$Builder {
	public fun build ()Lorg/partiql/ast/ExcludeStep$StructField;
	public fun symbol (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/ExcludeStep$StructField$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/ExcludeStep$StructWildcard : org/partiql/ast/ExcludeStep {
	public fun <init> ()V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/ExcludeStep$StructWildcard$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/ExcludeStep$StructWildcard$Builder {
	public fun build ()Lorg/partiql/ast/ExcludeStep$StructWildcard;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/Explain : org/partiql/ast/Statement {
	public final field options Ljava/util/Map;
	public final field statement Lorg/partiql/ast/Statement;
	public fun <init> (Ljava/util/Map;Lorg/partiql/ast/Statement;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/Explain$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/Explain$Builder {
	public fun build ()Lorg/partiql/ast/Explain;
	public fun options (Ljava/util/Map;)Lorg/partiql/ast/Explain$Builder;
	public fun statement (Lorg/partiql/ast/Statement;)Lorg/partiql/ast/Explain$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/From : org/partiql/ast/AstNode {
	public final field tableRefs Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/From$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/From$Builder {
	public fun build ()Lorg/partiql/ast/From;
	public fun tableRefs (Ljava/util/List;)Lorg/partiql/ast/From$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/FromExpr : org/partiql/ast/FromTableRef {
	public final field asAlias Lorg/partiql/ast/Identifier;
	public final field atAlias Lorg/partiql/ast/Identifier;
	public final field expr Lorg/partiql/ast/expr/Expr;
	public final field fromType Lorg/partiql/ast/FromType;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/FromType;Lorg/partiql/ast/Identifier;Lorg/partiql/ast/Identifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/FromExpr$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/FromExpr$Builder {
	public fun asAlias (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/FromExpr$Builder;
	public fun atAlias (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/FromExpr$Builder;
	public fun build ()Lorg/partiql/ast/FromExpr;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/FromExpr$Builder;
	public fun fromType (Lorg/partiql/ast/FromType;)Lorg/partiql/ast/FromExpr$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/FromJoin : org/partiql/ast/FromTableRef {
	public final field condition Lorg/partiql/ast/expr/Expr;
	public final field joinType Lorg/partiql/ast/JoinType;
	public final field lhs Lorg/partiql/ast/FromTableRef;
	public final field rhs Lorg/partiql/ast/FromTableRef;
	public fun <init> (Lorg/partiql/ast/FromTableRef;Lorg/partiql/ast/FromTableRef;Lorg/partiql/ast/JoinType;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/FromJoin$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/FromJoin$Builder {
	public fun build ()Lorg/partiql/ast/FromJoin;
	public fun condition (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/FromJoin$Builder;
	public fun joinType (Lorg/partiql/ast/JoinType;)Lorg/partiql/ast/FromJoin$Builder;
	public fun lhs (Lorg/partiql/ast/FromTableRef;)Lorg/partiql/ast/FromJoin$Builder;
	public fun rhs (Lorg/partiql/ast/FromTableRef;)Lorg/partiql/ast/FromJoin$Builder;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/partiql/ast/FromTableRef : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public class org/partiql/ast/FromType : org/partiql/ast/AstEnum {
	public static final field SCAN I
	public static final field UNKNOWN I
	public static final field UNPIVOT I
	public static fun SCAN ()Lorg/partiql/ast/FromType;
	public static fun UNKNOWN ()Lorg/partiql/ast/FromType;
	public static fun UNPIVOT ()Lorg/partiql/ast/FromType;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/FromType;
}

public class org/partiql/ast/GroupBy : org/partiql/ast/AstNode {
	public final field asAlias Lorg/partiql/ast/Identifier;
	public final field keys Ljava/util/List;
	public final field strategy Lorg/partiql/ast/GroupByStrategy;
	public fun <init> (Lorg/partiql/ast/GroupByStrategy;Ljava/util/List;Lorg/partiql/ast/Identifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/GroupBy$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/GroupBy$Builder {
	public fun asAlias (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/GroupBy$Builder;
	public fun build ()Lorg/partiql/ast/GroupBy;
	public fun keys (Ljava/util/List;)Lorg/partiql/ast/GroupBy$Builder;
	public fun strategy (Lorg/partiql/ast/GroupByStrategy;)Lorg/partiql/ast/GroupBy$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/GroupBy$Key : org/partiql/ast/AstNode {
	public final field asAlias Lorg/partiql/ast/Identifier;
	public final field expr Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/Identifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/GroupBy$Key$Builder;
	public fun children ()Ljava/util/Collection;
}

public class org/partiql/ast/GroupBy$Key$Builder {
	public fun asAlias (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/GroupBy$Key$Builder;
	public fun build ()Lorg/partiql/ast/GroupBy$Key;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/GroupBy$Key$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/GroupByStrategy : org/partiql/ast/AstEnum {
	public static final field FULL I
	public static final field PARTIAL I
	public static final field UNKNOWN I
	public static fun FULL ()Lorg/partiql/ast/GroupByStrategy;
	public static fun PARTIAL ()Lorg/partiql/ast/GroupByStrategy;
	public static fun UNKNOWN ()Lorg/partiql/ast/GroupByStrategy;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/GroupByStrategy;
}

public class org/partiql/ast/Identifier : org/partiql/ast/AstNode {
	public final field isDelimited Z
	public final field symbol Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Z)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/Identifier$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/Identifier$Builder {
	public fun build ()Lorg/partiql/ast/Identifier;
	public fun isDelimited (Z)Lorg/partiql/ast/Identifier$Builder;
	public fun symbol (Ljava/lang/String;)Lorg/partiql/ast/Identifier$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/IdentifierChain : org/partiql/ast/AstNode {
	public final field next Lorg/partiql/ast/IdentifierChain;
	public final field root Lorg/partiql/ast/Identifier;
	public fun <init> (Lorg/partiql/ast/Identifier;Lorg/partiql/ast/IdentifierChain;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/IdentifierChain$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/IdentifierChain$Builder {
	public fun build ()Lorg/partiql/ast/IdentifierChain;
	public fun next (Lorg/partiql/ast/IdentifierChain;)Lorg/partiql/ast/IdentifierChain$Builder;
	public fun root (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/IdentifierChain$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/JoinType : org/partiql/ast/AstEnum {
	public static final field CROSS I
	public static final field FULL I
	public static final field FULL_OUTER I
	public static final field INNER I
	public static final field LEFT I
	public static final field LEFT_CROSS I
	public static final field LEFT_OUTER I
	public static final field RIGHT I
	public static final field RIGHT_OUTER I
	public static final field UNKNOWN I
	public static fun CROSS ()Lorg/partiql/ast/JoinType;
	public static fun FULL ()Lorg/partiql/ast/JoinType;
	public static fun FULL_OUTER ()Lorg/partiql/ast/JoinType;
	public static fun INNER ()Lorg/partiql/ast/JoinType;
	public static fun LEFT ()Lorg/partiql/ast/JoinType;
	public static fun LEFT_CROSS ()Lorg/partiql/ast/JoinType;
	public static fun LEFT_OUTER ()Lorg/partiql/ast/JoinType;
	public static fun RIGHT ()Lorg/partiql/ast/JoinType;
	public static fun RIGHT_OUTER ()Lorg/partiql/ast/JoinType;
	public static fun UNKNOWN ()Lorg/partiql/ast/JoinType;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/JoinType;
}

public class org/partiql/ast/Let : org/partiql/ast/AstNode {
	public final field bindings Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/Let$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/Let$Binding : org/partiql/ast/AstNode {
	public final field asAlias Lorg/partiql/ast/Identifier;
	public final field expr Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/Identifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/Let$Binding$Builder;
	public fun children ()Ljava/util/Collection;
}

public class org/partiql/ast/Let$Binding$Builder {
	public fun asAlias (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/Let$Binding$Builder;
	public fun build ()Lorg/partiql/ast/Let$Binding;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/Let$Binding$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/Let$Builder {
	public fun bindings (Ljava/util/List;)Lorg/partiql/ast/Let$Builder;
	public fun build ()Lorg/partiql/ast/Let;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/Nulls : org/partiql/ast/AstEnum {
	public static final field FIRST I
	public static final field LAST I
	public static final field UNKNOWN I
	public static fun FIRST ()Lorg/partiql/ast/Nulls;
	public static fun LAST ()Lorg/partiql/ast/Nulls;
	public static fun UNKNOWN ()Lorg/partiql/ast/Nulls;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/Nulls;
}

public class org/partiql/ast/Order : org/partiql/ast/AstEnum {
	public static final field ASC I
	public static final field DESC I
	public static final field UNKNOWN I
	public static fun ASC ()Lorg/partiql/ast/Order;
	public static fun DESC ()Lorg/partiql/ast/Order;
	public static fun UNKNOWN ()Lorg/partiql/ast/Order;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/Order;
}

public class org/partiql/ast/OrderBy : org/partiql/ast/AstNode {
	public final field sorts Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/OrderBy$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/OrderBy$Builder {
	public fun build ()Lorg/partiql/ast/OrderBy;
	public fun sorts (Ljava/util/List;)Lorg/partiql/ast/OrderBy$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/Query : org/partiql/ast/Statement {
	public final field expr Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/Query$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/Query$Builder {
	public fun build ()Lorg/partiql/ast/Query;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/Query$Builder;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/partiql/ast/QueryBody : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public class org/partiql/ast/QueryBody$SFW : org/partiql/ast/QueryBody {
	public final field exclude Lorg/partiql/ast/Exclude;
	public final field from Lorg/partiql/ast/From;
	public final field groupBy Lorg/partiql/ast/GroupBy;
	public final field having Lorg/partiql/ast/expr/Expr;
	public final field let Lorg/partiql/ast/Let;
	public final field select Lorg/partiql/ast/Select;
	public final field where Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/Select;Lorg/partiql/ast/Exclude;Lorg/partiql/ast/From;Lorg/partiql/ast/Let;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/GroupBy;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/QueryBody$SFW$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/QueryBody$SFW$Builder {
	public fun build ()Lorg/partiql/ast/QueryBody$SFW;
	public fun exclude (Lorg/partiql/ast/Exclude;)Lorg/partiql/ast/QueryBody$SFW$Builder;
	public fun from (Lorg/partiql/ast/From;)Lorg/partiql/ast/QueryBody$SFW$Builder;
	public fun groupBy (Lorg/partiql/ast/GroupBy;)Lorg/partiql/ast/QueryBody$SFW$Builder;
	public fun having (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/QueryBody$SFW$Builder;
	public fun let (Lorg/partiql/ast/Let;)Lorg/partiql/ast/QueryBody$SFW$Builder;
	public fun select (Lorg/partiql/ast/Select;)Lorg/partiql/ast/QueryBody$SFW$Builder;
	public fun toString ()Ljava/lang/String;
	public fun where (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/QueryBody$SFW$Builder;
}

public class org/partiql/ast/QueryBody$SetOp : org/partiql/ast/QueryBody {
	public final field isOuter Z
	public field lhs Lorg/partiql/ast/expr/Expr;
	public field rhs Lorg/partiql/ast/expr/Expr;
	public final field type Lorg/partiql/ast/SetOp;
	public fun <init> (Lorg/partiql/ast/SetOp;ZLorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/QueryBody$SetOp$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/QueryBody$SetOp$Builder {
	public fun build ()Lorg/partiql/ast/QueryBody$SetOp;
	public fun isOuter (Z)Lorg/partiql/ast/QueryBody$SetOp$Builder;
	public fun lhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/QueryBody$SetOp$Builder;
	public fun rhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/QueryBody$SetOp$Builder;
	public fun toString ()Ljava/lang/String;
	public fun type (Lorg/partiql/ast/SetOp;)Lorg/partiql/ast/QueryBody$SetOp$Builder;
}

public abstract class org/partiql/ast/Select : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public abstract class org/partiql/ast/SelectItem : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public class org/partiql/ast/SelectItem$Expr : org/partiql/ast/SelectItem {
	public final field asAlias Lorg/partiql/ast/Identifier;
	public final field expr Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/Identifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/SelectItem$Expr$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/SelectItem$Expr$Builder {
	public fun asAlias (Lorg/partiql/ast/Identifier;)Lorg/partiql/ast/SelectItem$Expr$Builder;
	public fun build ()Lorg/partiql/ast/SelectItem$Expr;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/SelectItem$Expr$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/SelectItem$Star : org/partiql/ast/SelectItem {
	public final field expr Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/SelectItem$Star$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/SelectItem$Star$Builder {
	public fun build ()Lorg/partiql/ast/SelectItem$Star;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/SelectItem$Star$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/SelectList : org/partiql/ast/Select {
	public final field items Ljava/util/List;
	public final field setq Lorg/partiql/ast/SetQuantifier;
	public fun <init> (Ljava/util/List;Lorg/partiql/ast/SetQuantifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/SelectList$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/SelectList$Builder {
	public fun build ()Lorg/partiql/ast/SelectList;
	public fun items (Ljava/util/List;)Lorg/partiql/ast/SelectList$Builder;
	public fun setq (Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/SelectList$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/SelectPivot : org/partiql/ast/Select {
	public final field key Lorg/partiql/ast/expr/Expr;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/SelectPivot$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/SelectPivot$Builder {
	public fun build ()Lorg/partiql/ast/SelectPivot;
	public fun key (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/SelectPivot$Builder;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/SelectPivot$Builder;
}

public class org/partiql/ast/SelectStar : org/partiql/ast/Select {
	public final field setq Lorg/partiql/ast/SetQuantifier;
	public fun <init> (Lorg/partiql/ast/SetQuantifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/SelectStar$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/SelectStar$Builder {
	public fun build ()Lorg/partiql/ast/SelectStar;
	public fun setq (Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/SelectStar$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/SelectValue : org/partiql/ast/Select {
	public final field constructor Lorg/partiql/ast/expr/Expr;
	public final field setq Lorg/partiql/ast/SetQuantifier;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/SetQuantifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/SelectValue$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/SelectValue$Builder {
	public fun build ()Lorg/partiql/ast/SelectValue;
	public fun constructor (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/SelectValue$Builder;
	public fun setq (Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/SelectValue$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/SetOp : org/partiql/ast/AstNode {
	public final field setOpType Lorg/partiql/ast/SetOpType;
	public final field setq Lorg/partiql/ast/SetQuantifier;
	public fun <init> (Lorg/partiql/ast/SetOpType;Lorg/partiql/ast/SetQuantifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/SetOp$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/SetOp$Builder {
	public fun build ()Lorg/partiql/ast/SetOp;
	public fun setOpType (Lorg/partiql/ast/SetOpType;)Lorg/partiql/ast/SetOp$Builder;
	public fun setq (Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/SetOp$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/SetOpType : org/partiql/ast/AstEnum {
	public static final field EXCEPT I
	public static final field INTERSECT I
	public static final field UNION I
	public static final field UNKNOWN I
	public static fun EXCEPT ()Lorg/partiql/ast/SetOpType;
	public static fun INTERSECT ()Lorg/partiql/ast/SetOpType;
	public static fun UNION ()Lorg/partiql/ast/SetOpType;
	public static fun UNKNOWN ()Lorg/partiql/ast/SetOpType;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/SetOpType;
}

public class org/partiql/ast/SetQuantifier : org/partiql/ast/AstEnum {
	public static final field ALL I
	public static final field DISTINCT I
	public static final field UNKNOWN I
	public static fun ALL ()Lorg/partiql/ast/SetQuantifier;
	public static fun DISTINCT ()Lorg/partiql/ast/SetQuantifier;
	public static fun UNKNOWN ()Lorg/partiql/ast/SetQuantifier;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/SetQuantifier;
}

public class org/partiql/ast/Sort : org/partiql/ast/AstNode {
	public final field expr Lorg/partiql/ast/expr/Expr;
	public final field nulls Lorg/partiql/ast/Nulls;
	public final field order Lorg/partiql/ast/Order;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/Order;Lorg/partiql/ast/Nulls;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/Sort$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/Sort$Builder {
	public fun build ()Lorg/partiql/ast/Sort;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/Sort$Builder;
	public fun nulls (Lorg/partiql/ast/Nulls;)Lorg/partiql/ast/Sort$Builder;
	public fun order (Lorg/partiql/ast/Order;)Lorg/partiql/ast/Sort$Builder;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/partiql/ast/Statement : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public abstract class org/partiql/ast/expr/Expr : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public class org/partiql/ast/expr/ExprAnd : org/partiql/ast/expr/Expr {
	public final field lhs Lorg/partiql/ast/expr/Expr;
	public final field rhs Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprAnd$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprAnd$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprAnd;
	public fun lhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprAnd$Builder;
	public fun rhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprAnd$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprArray : org/partiql/ast/expr/Expr {
	public final field values Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprArray$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprArray$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprArray;
	public fun toString ()Ljava/lang/String;
	public fun values (Ljava/util/List;)Lorg/partiql/ast/expr/ExprArray$Builder;
}

public class org/partiql/ast/expr/ExprBag : org/partiql/ast/expr/Expr {
	public final field values Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprBag$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprBag$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprBag;
	public fun toString ()Ljava/lang/String;
	public fun values (Ljava/util/List;)Lorg/partiql/ast/expr/ExprBag$Builder;
}

public class org/partiql/ast/expr/ExprBetween : org/partiql/ast/expr/Expr {
	public final field from Lorg/partiql/ast/expr/Expr;
	public final field not Z
	public final field to Lorg/partiql/ast/expr/Expr;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Z)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprBetween$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprBetween$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprBetween;
	public fun from (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprBetween$Builder;
	public fun not (Z)Lorg/partiql/ast/expr/ExprBetween$Builder;
	public fun to (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprBetween$Builder;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprBetween$Builder;
}

public class org/partiql/ast/expr/ExprCall : org/partiql/ast/expr/Expr {
	public final field args Ljava/util/List;
	public final field function Lorg/partiql/ast/IdentifierChain;
	public final field setq Lorg/partiql/ast/SetQuantifier;
	public fun <init> (Lorg/partiql/ast/IdentifierChain;Ljava/util/List;Lorg/partiql/ast/SetQuantifier;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprCall$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprCall$Builder {
	public fun args (Ljava/util/List;)Lorg/partiql/ast/expr/ExprCall$Builder;
	public fun build ()Lorg/partiql/ast/expr/ExprCall;
	public fun function (Lorg/partiql/ast/IdentifierChain;)Lorg/partiql/ast/expr/ExprCall$Builder;
	public fun setq (Lorg/partiql/ast/SetQuantifier;)Lorg/partiql/ast/expr/ExprCall$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprCase : org/partiql/ast/expr/Expr {
	public final field branches Ljava/util/List;
	public final field defaultExpr Lorg/partiql/ast/expr/Expr;
	public final field expr Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Ljava/util/List;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprCase$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprCase$Branch : org/partiql/ast/AstNode {
	public final field condition Lorg/partiql/ast/expr/Expr;
	public final field expr Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprCase$Branch$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprCase$Branch$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprCase$Branch;
	public fun condition (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprCase$Branch$Builder;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprCase$Branch$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprCase$Builder {
	public fun branches (Ljava/util/List;)Lorg/partiql/ast/expr/ExprCase$Builder;
	public fun build ()Lorg/partiql/ast/expr/ExprCase;
	public fun defaultExpr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprCase$Builder;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprCase$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprCast : org/partiql/ast/expr/Expr {
	public final field asType Lorg/partiql/ast/DataType;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/DataType;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprCast$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprCast$Builder {
	public fun asType (Lorg/partiql/ast/DataType;)Lorg/partiql/ast/expr/ExprCast$Builder;
	public fun build ()Lorg/partiql/ast/expr/ExprCast;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprCast$Builder;
}

public class org/partiql/ast/expr/ExprCoalesce : org/partiql/ast/expr/Expr {
	public final field args Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprCoalesce$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprCoalesce$Builder {
	public fun args (Ljava/util/List;)Lorg/partiql/ast/expr/ExprCoalesce$Builder;
	public fun build ()Lorg/partiql/ast/expr/ExprCoalesce;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprExtract : org/partiql/ast/expr/Expr {
	public final field field Lorg/partiql/ast/DatetimeField;
	public final field source Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/DatetimeField;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprExtract$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprExtract$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprExtract;
	public fun field (Lorg/partiql/ast/DatetimeField;)Lorg/partiql/ast/expr/ExprExtract$Builder;
	public fun source (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprExtract$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprInCollection : org/partiql/ast/expr/Expr {
	public final field lhs Lorg/partiql/ast/expr/Expr;
	public final field not Z
	public final field rhs Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Z)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprInCollection$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprInCollection$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprInCollection;
	public fun lhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprInCollection$Builder;
	public fun not (Z)Lorg/partiql/ast/expr/ExprInCollection$Builder;
	public fun rhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprInCollection$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprIsType : org/partiql/ast/expr/Expr {
	public final field not Z
	public final field type Lorg/partiql/ast/DataType;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/DataType;Z)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprIsType$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprIsType$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprIsType;
	public fun not (Z)Lorg/partiql/ast/expr/ExprIsType$Builder;
	public fun toString ()Ljava/lang/String;
	public fun type (Lorg/partiql/ast/DataType;)Lorg/partiql/ast/expr/ExprIsType$Builder;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprIsType$Builder;
}

public class org/partiql/ast/expr/ExprLike : org/partiql/ast/expr/Expr {
	public final field escape Lorg/partiql/ast/expr/Expr;
	public final field not Z
	public final field pattern Lorg/partiql/ast/expr/Expr;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Z)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprLike$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprLike$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprLike;
	public fun escape (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprLike$Builder;
	public fun not (Z)Lorg/partiql/ast/expr/ExprLike$Builder;
	public fun pattern (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprLike$Builder;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprLike$Builder;
}

public class org/partiql/ast/expr/ExprLit : org/partiql/ast/expr/Expr {
	public final field value Lorg/partiql/value/PartiQLValue;
	public fun <init> (Lorg/partiql/value/PartiQLValue;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprLit$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprLit$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprLit;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/value/PartiQLValue;)Lorg/partiql/ast/expr/ExprLit$Builder;
}

public class org/partiql/ast/expr/ExprMatch : org/partiql/ast/expr/Expr {
	public final field expr Lorg/partiql/ast/expr/Expr;
	public final field pattern Lorg/partiql/ast/graph/GraphMatch;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/graph/GraphMatch;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprMatch$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprMatch$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprMatch;
	public fun expr (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprMatch$Builder;
	public fun pattern (Lorg/partiql/ast/graph/GraphMatch;)Lorg/partiql/ast/expr/ExprMatch$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprNot : org/partiql/ast/expr/Expr {
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprNot$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprNot$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprNot;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprNot$Builder;
}

public class org/partiql/ast/expr/ExprNullIf : org/partiql/ast/expr/Expr {
	public final field v1 Lorg/partiql/ast/expr/Expr;
	public final field v2 Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprNullIf$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprNullIf$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprNullIf;
	public fun toString ()Ljava/lang/String;
	public fun v1 (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprNullIf$Builder;
	public fun v2 (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprNullIf$Builder;
}

public class org/partiql/ast/expr/ExprOperator : org/partiql/ast/expr/Expr {
	public final field lhs Lorg/partiql/ast/expr/Expr;
	public final field rhs Lorg/partiql/ast/expr/Expr;
	public final field symbol Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprOperator$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprOperator$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprOperator;
	public fun lhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOperator$Builder;
	public fun rhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOperator$Builder;
	public fun symbol (Ljava/lang/String;)Lorg/partiql/ast/expr/ExprOperator$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprOr : org/partiql/ast/expr/Expr {
	public final field lhs Lorg/partiql/ast/expr/Expr;
	public final field rhs Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprOr$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprOr$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprOr;
	public fun lhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOr$Builder;
	public fun rhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOr$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprOverlay : org/partiql/ast/expr/Expr {
	public final field forLength Lorg/partiql/ast/expr/Expr;
	public final field from Lorg/partiql/ast/expr/Expr;
	public final field placing Lorg/partiql/ast/expr/Expr;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprOverlay$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprOverlay$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprOverlay;
	public fun forLength (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOverlay$Builder;
	public fun from (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOverlay$Builder;
	public fun placing (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOverlay$Builder;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprOverlay$Builder;
}

public class org/partiql/ast/expr/ExprParameter : org/partiql/ast/expr/Expr {
	public final field index I
	public fun <init> (I)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprParameter$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprParameter$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprParameter;
	public fun index (I)Lorg/partiql/ast/expr/ExprParameter$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprPath : org/partiql/ast/expr/Expr {
	public final field next Lorg/partiql/ast/expr/PathStep;
	public final field root Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/PathStep;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprPath$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprPath$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprPath;
	public fun next (Lorg/partiql/ast/expr/PathStep;)Lorg/partiql/ast/expr/ExprPath$Builder;
	public fun root (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprPath$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprPosition : org/partiql/ast/expr/Expr {
	public final field lhs Lorg/partiql/ast/expr/Expr;
	public final field rhs Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprPosition$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprPosition$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprPosition;
	public fun lhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprPosition$Builder;
	public fun rhs (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprPosition$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprQuerySet : org/partiql/ast/expr/Expr {
	public final field body Lorg/partiql/ast/QueryBody;
	public final field limit Lorg/partiql/ast/expr/Expr;
	public final field offset Lorg/partiql/ast/expr/Expr;
	public final field orderBy Lorg/partiql/ast/OrderBy;
	public fun <init> (Lorg/partiql/ast/QueryBody;Lorg/partiql/ast/OrderBy;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprQuerySet$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprQuerySet$Builder {
	public fun body (Lorg/partiql/ast/QueryBody;)Lorg/partiql/ast/expr/ExprQuerySet$Builder;
	public fun build ()Lorg/partiql/ast/expr/ExprQuerySet;
	public fun limit (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprQuerySet$Builder;
	public fun offset (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprQuerySet$Builder;
	public fun orderBy (Lorg/partiql/ast/OrderBy;)Lorg/partiql/ast/expr/ExprQuerySet$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprRowValue : org/partiql/ast/expr/Expr {
	public final field values Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprRowValue$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprRowValue$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprRowValue;
	public fun toString ()Ljava/lang/String;
	public fun values (Ljava/util/List;)Lorg/partiql/ast/expr/ExprRowValue$Builder;
}

public class org/partiql/ast/expr/ExprSessionAttribute : org/partiql/ast/expr/Expr {
	public final field sessionAttribute Lorg/partiql/ast/expr/SessionAttribute;
	public fun <init> (Lorg/partiql/ast/expr/SessionAttribute;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprSessionAttribute$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprSessionAttribute$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprSessionAttribute;
	public fun sessionAttribute (Lorg/partiql/ast/expr/SessionAttribute;)Lorg/partiql/ast/expr/ExprSessionAttribute$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprStruct : org/partiql/ast/expr/Expr {
	public final field fields Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprStruct$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprStruct$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprStruct;
	public fun fields (Ljava/util/List;)Lorg/partiql/ast/expr/ExprStruct$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprStruct$Field : org/partiql/ast/AstNode {
	public final field name Lorg/partiql/ast/expr/Expr;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprStruct$Field$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprStruct$Field$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprStruct$Field;
	public fun name (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprStruct$Field$Builder;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprStruct$Field$Builder;
}

public class org/partiql/ast/expr/ExprSubstring : org/partiql/ast/expr/Expr {
	public final field length Lorg/partiql/ast/expr/Expr;
	public final field start Lorg/partiql/ast/expr/Expr;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprSubstring$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprSubstring$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprSubstring;
	public fun length (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprSubstring$Builder;
	public fun start (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprSubstring$Builder;
	public fun toString ()Ljava/lang/String;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprSubstring$Builder;
}

public class org/partiql/ast/expr/ExprTrim : org/partiql/ast/expr/Expr {
	public final field chars Lorg/partiql/ast/expr/Expr;
	public final field trimSpec Lorg/partiql/ast/expr/TrimSpec;
	public final field value Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/TrimSpec;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprTrim$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprTrim$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprTrim;
	public fun chars (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprTrim$Builder;
	public fun toString ()Ljava/lang/String;
	public fun trimSpec (Lorg/partiql/ast/expr/TrimSpec;)Lorg/partiql/ast/expr/ExprTrim$Builder;
	public fun value (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprTrim$Builder;
}

public class org/partiql/ast/expr/ExprValues : org/partiql/ast/expr/Expr {
	public final field rows Ljava/util/List;
	public fun <init> (Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprValues$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprValues$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprValues;
	public fun rows (Ljava/util/List;)Lorg/partiql/ast/expr/ExprValues$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprVarRef : org/partiql/ast/expr/Expr {
	public final field identifierChain Lorg/partiql/ast/IdentifierChain;
	public final field scope Lorg/partiql/ast/expr/Scope;
	public fun <init> (Lorg/partiql/ast/IdentifierChain;Lorg/partiql/ast/expr/Scope;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprVarRef$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprVarRef$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprVarRef;
	public fun identifierChain (Lorg/partiql/ast/IdentifierChain;)Lorg/partiql/ast/expr/ExprVarRef$Builder;
	public fun scope (Lorg/partiql/ast/expr/Scope;)Lorg/partiql/ast/expr/ExprVarRef$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/expr/ExprVariant : org/partiql/ast/expr/Expr {
	public final field encoding Ljava/lang/String;
	public final field value Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprVariant$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public synthetic fun children ()Ljava/util/Collection;
	public fun children ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprVariant$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprVariant;
	public fun encoding (Ljava/lang/String;)Lorg/partiql/ast/expr/ExprVariant$Builder;
	public fun toString ()Ljava/lang/String;
	public fun value (Ljava/lang/String;)Lorg/partiql/ast/expr/ExprVariant$Builder;
}

public class org/partiql/ast/expr/ExprWindow : org/partiql/ast/expr/Expr {
	public final field defaultValue Lorg/partiql/ast/expr/Expr;
	public final field expression Lorg/partiql/ast/expr/Expr;
	public final field offset Lorg/partiql/ast/expr/Expr;
	public final field over Lorg/partiql/ast/expr/ExprWindow$Over;
	public final field windowFunction Lorg/partiql/ast/expr/WindowFunction;
	public fun <init> (Lorg/partiql/ast/expr/WindowFunction;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/ExprWindow$Over;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprWindow$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprWindow$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprWindow;
	public fun defaultValue (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprWindow$Builder;
	public fun expression (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprWindow$Builder;
	public fun offset (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/expr/ExprWindow$Builder;
	public fun over (Lorg/partiql/ast/expr/ExprWindow$Over;)Lorg/partiql/ast/expr/ExprWindow$Builder;
	public fun toString ()Ljava/lang/String;
	public fun windowFunction (Lorg/partiql/ast/expr/WindowFunction;)Lorg/partiql/ast/expr/ExprWindow$Builder;
}

public class org/partiql/ast/expr/ExprWindow$Over : org/partiql/ast/AstNode {
	public final field partitions Ljava/util/List;
	public final field sorts Ljava/util/List;
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/expr/ExprWindow$Over$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/ExprWindow$Over$Builder {
	public fun build ()Lorg/partiql/ast/expr/ExprWindow$Over;
	public fun partitions (Ljava/util/List;)Lorg/partiql/ast/expr/ExprWindow$Over$Builder;
	public fun sorts (Ljava/util/List;)Lorg/partiql/ast/expr/ExprWindow$Over$Builder;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/partiql/ast/expr/PathStep : org/partiql/ast/AstNode {
	public final field next Lorg/partiql/ast/expr/PathStep;
	protected fun <init> (Lorg/partiql/ast/expr/PathStep;)V
}

public class org/partiql/ast/expr/PathStep$AllElements : org/partiql/ast/expr/PathStep {
	public fun <init> (Lorg/partiql/ast/expr/PathStep;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/PathStep$AllFields : org/partiql/ast/expr/PathStep {
	public fun <init> (Lorg/partiql/ast/expr/PathStep;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/PathStep$Element : org/partiql/ast/expr/PathStep {
	public final field element Lorg/partiql/ast/expr/Expr;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/expr/PathStep;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/PathStep$Field : org/partiql/ast/expr/PathStep {
	public final field field Lorg/partiql/ast/Identifier;
	public fun <init> (Lorg/partiql/ast/Identifier;Lorg/partiql/ast/expr/PathStep;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/expr/Scope : org/partiql/ast/AstEnum {
	public static final field DEFAULT I
	public static final field LOCAL I
	public static final field UNKNOWN I
	public static fun DEFAULT ()Lorg/partiql/ast/expr/Scope;
	public static fun LOCAL ()Lorg/partiql/ast/expr/Scope;
	public static fun UNKNOWN ()Lorg/partiql/ast/expr/Scope;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/expr/Scope;
}

public class org/partiql/ast/expr/SessionAttribute : org/partiql/ast/AstEnum {
	public static final field CURRENT_DATE I
	public static final field CURRENT_USER I
	public static final field UNKNOWN I
	public fun <init> (I)V
	public static fun CURRENT_DATE ()Lorg/partiql/ast/expr/SessionAttribute;
	public static fun CURRENT_USER ()Lorg/partiql/ast/expr/SessionAttribute;
	public static fun UNKNOWN ()Lorg/partiql/ast/expr/SessionAttribute;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/expr/SessionAttribute;
}

public class org/partiql/ast/expr/TrimSpec : org/partiql/ast/AstEnum {
	public static final field BOTH I
	public static final field LEADING I
	public static final field TRAILING I
	public static final field UNKNOWN I
	public static fun BOTH ()Lorg/partiql/ast/expr/TrimSpec;
	public static fun LEADING ()Lorg/partiql/ast/expr/TrimSpec;
	public static fun TRAILING ()Lorg/partiql/ast/expr/TrimSpec;
	public static fun UNKNOWN ()Lorg/partiql/ast/expr/TrimSpec;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/expr/TrimSpec;
}

public class org/partiql/ast/expr/WindowFunction : org/partiql/ast/AstEnum {
	public static final field LAG I
	public static final field LEAD I
	public static final field UNKNOWN I
	public fun <init> (I)V
	public static fun LAG ()Lorg/partiql/ast/expr/WindowFunction;
	public static fun LEAD ()Lorg/partiql/ast/expr/WindowFunction;
	public static fun UNKNOWN ()Lorg/partiql/ast/expr/WindowFunction;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/expr/WindowFunction;
}

public class org/partiql/ast/graph/GraphDirection : org/partiql/ast/AstEnum {
	public static final field LEFT I
	public static final field LEFT_OR_RIGHT I
	public static final field LEFT_OR_UNDIRECTED I
	public static final field LEFT_UNDIRECTED_OR_RIGHT I
	public static final field RIGHT I
	public static final field UNDIRECTED I
	public static final field UNDIRECTED_OR_RIGHT I
	public static final field UNKNOWN I
	public static fun LEFT ()Lorg/partiql/ast/graph/GraphDirection;
	public static fun LEFT_OR_RIGHT ()Lorg/partiql/ast/graph/GraphDirection;
	public static fun LEFT_OR_UNDIRECTED ()Lorg/partiql/ast/graph/GraphDirection;
	public static fun LEFT_UNDIRECTED_OR_RIGHT ()Lorg/partiql/ast/graph/GraphDirection;
	public static fun RIGHT ()Lorg/partiql/ast/graph/GraphDirection;
	public static fun UNDIRECTED ()Lorg/partiql/ast/graph/GraphDirection;
	public static fun UNDIRECTED_OR_RIGHT ()Lorg/partiql/ast/graph/GraphDirection;
	public static fun UNKNOWN ()Lorg/partiql/ast/graph/GraphDirection;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/graph/GraphDirection;
}

public abstract class org/partiql/ast/graph/GraphLabel : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public class org/partiql/ast/graph/GraphLabel$Conj : org/partiql/ast/graph/GraphLabel {
	public final field lhs Lorg/partiql/ast/graph/GraphLabel;
	public final field rhs Lorg/partiql/ast/graph/GraphLabel;
	public fun <init> (Lorg/partiql/ast/graph/GraphLabel;Lorg/partiql/ast/graph/GraphLabel;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphLabel$Conj$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphLabel$Conj$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphLabel$Conj;
	public fun lhs (Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphLabel$Conj$Builder;
	public fun rhs (Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphLabel$Conj$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphLabel$Disj : org/partiql/ast/graph/GraphLabel {
	public final field lhs Lorg/partiql/ast/graph/GraphLabel;
	public final field rhs Lorg/partiql/ast/graph/GraphLabel;
	public fun <init> (Lorg/partiql/ast/graph/GraphLabel;Lorg/partiql/ast/graph/GraphLabel;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphLabel$Disj$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphLabel$Disj$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphLabel$Disj;
	public fun lhs (Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphLabel$Disj$Builder;
	public fun rhs (Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphLabel$Disj$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphLabel$Name : org/partiql/ast/graph/GraphLabel {
	public final field name Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphLabel$Name$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphLabel$Name$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphLabel$Name;
	public fun name (Ljava/lang/String;)Lorg/partiql/ast/graph/GraphLabel$Name$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphLabel$Negation : org/partiql/ast/graph/GraphLabel {
	public final field arg Lorg/partiql/ast/graph/GraphLabel;
	public fun <init> (Lorg/partiql/ast/graph/GraphLabel;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphLabel$Negation$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphLabel$Negation$Builder {
	public fun arg (Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphLabel$Negation$Builder;
	public fun build ()Lorg/partiql/ast/graph/GraphLabel$Negation;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphLabel$Wildcard : org/partiql/ast/graph/GraphLabel {
	public fun <init> ()V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphLabel$Wildcard$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphLabel$Wildcard$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphLabel$Wildcard;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphMatch : org/partiql/ast/AstNode {
	public final field patterns Ljava/util/List;
	public final field selector Lorg/partiql/ast/graph/GraphSelector;
	public fun <init> (Ljava/util/List;Lorg/partiql/ast/graph/GraphSelector;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphMatch$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphMatch$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphMatch;
	public fun patterns (Ljava/util/List;)Lorg/partiql/ast/graph/GraphMatch$Builder;
	public fun selector (Lorg/partiql/ast/graph/GraphSelector;)Lorg/partiql/ast/graph/GraphMatch$Builder;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/partiql/ast/graph/GraphPart : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public class org/partiql/ast/graph/GraphPart$Edge : org/partiql/ast/graph/GraphPart {
	public final field direction Lorg/partiql/ast/graph/GraphDirection;
	public final field label Lorg/partiql/ast/graph/GraphLabel;
	public final field prefilter Lorg/partiql/ast/expr/Expr;
	public final field quantifier Lorg/partiql/ast/graph/GraphQuantifier;
	public final field variable Ljava/lang/String;
	public fun <init> (Lorg/partiql/ast/graph/GraphDirection;Lorg/partiql/ast/graph/GraphQuantifier;Lorg/partiql/ast/expr/Expr;Ljava/lang/String;Lorg/partiql/ast/graph/GraphLabel;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphPart$Edge$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphPart$Edge$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphPart$Edge;
	public fun direction (Lorg/partiql/ast/graph/GraphDirection;)Lorg/partiql/ast/graph/GraphPart$Edge$Builder;
	public fun label (Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphPart$Edge$Builder;
	public fun prefilter (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/graph/GraphPart$Edge$Builder;
	public fun quantifier (Lorg/partiql/ast/graph/GraphQuantifier;)Lorg/partiql/ast/graph/GraphPart$Edge$Builder;
	public fun toString ()Ljava/lang/String;
	public fun variable (Ljava/lang/String;)Lorg/partiql/ast/graph/GraphPart$Edge$Builder;
}

public class org/partiql/ast/graph/GraphPart$Node : org/partiql/ast/graph/GraphPart {
	public final field label Lorg/partiql/ast/graph/GraphLabel;
	public final field prefilter Lorg/partiql/ast/expr/Expr;
	public final field variable Ljava/lang/String;
	public fun <init> (Lorg/partiql/ast/expr/Expr;Ljava/lang/String;Lorg/partiql/ast/graph/GraphLabel;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphPart$Node$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphPart$Node$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphPart$Node;
	public fun label (Lorg/partiql/ast/graph/GraphLabel;)Lorg/partiql/ast/graph/GraphPart$Node$Builder;
	public fun prefilter (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/graph/GraphPart$Node$Builder;
	public fun toString ()Ljava/lang/String;
	public fun variable (Ljava/lang/String;)Lorg/partiql/ast/graph/GraphPart$Node$Builder;
}

public class org/partiql/ast/graph/GraphPart$Pattern : org/partiql/ast/graph/GraphPart {
	public final field pattern Lorg/partiql/ast/graph/GraphPattern;
	public fun <init> (Lorg/partiql/ast/graph/GraphPattern;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphPart$Pattern$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphPart$Pattern$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphPart$Pattern;
	public fun pattern (Lorg/partiql/ast/graph/GraphPattern;)Lorg/partiql/ast/graph/GraphPart$Pattern$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphPattern : org/partiql/ast/AstNode {
	public final field parts Ljava/util/List;
	public final field prefilter Lorg/partiql/ast/expr/Expr;
	public final field quantifier Lorg/partiql/ast/graph/GraphQuantifier;
	public final field restrictor Lorg/partiql/ast/graph/GraphRestrictor;
	public final field variable Ljava/lang/String;
	public fun <init> (Lorg/partiql/ast/graph/GraphRestrictor;Lorg/partiql/ast/expr/Expr;Ljava/lang/String;Lorg/partiql/ast/graph/GraphQuantifier;Ljava/util/List;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphPattern$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphPattern$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphPattern;
	public fun parts (Ljava/util/List;)Lorg/partiql/ast/graph/GraphPattern$Builder;
	public fun prefilter (Lorg/partiql/ast/expr/Expr;)Lorg/partiql/ast/graph/GraphPattern$Builder;
	public fun quantifier (Lorg/partiql/ast/graph/GraphQuantifier;)Lorg/partiql/ast/graph/GraphPattern$Builder;
	public fun restrictor (Lorg/partiql/ast/graph/GraphRestrictor;)Lorg/partiql/ast/graph/GraphPattern$Builder;
	public fun toString ()Ljava/lang/String;
	public fun variable (Ljava/lang/String;)Lorg/partiql/ast/graph/GraphPattern$Builder;
}

public class org/partiql/ast/graph/GraphQuantifier : org/partiql/ast/AstNode {
	public final field lower J
	public final field upper Ljava/lang/Long;
	public fun <init> (JLjava/lang/Long;)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphQuantifier$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphQuantifier$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphQuantifier;
	public fun lower (J)Lorg/partiql/ast/graph/GraphQuantifier$Builder;
	public fun toString ()Ljava/lang/String;
	public fun upper (Ljava/lang/Long;)Lorg/partiql/ast/graph/GraphQuantifier$Builder;
}

public class org/partiql/ast/graph/GraphRestrictor : org/partiql/ast/AstEnum {
	public static final field ACYCLIC I
	public static final field SIMPLE I
	public static final field TRAIL I
	public static final field UNKNOWN I
	public static fun ACYCLIC ()Lorg/partiql/ast/graph/GraphRestrictor;
	public static fun SIMPLE ()Lorg/partiql/ast/graph/GraphRestrictor;
	public static fun TRAIL ()Lorg/partiql/ast/graph/GraphRestrictor;
	public static fun UNKNOWN ()Lorg/partiql/ast/graph/GraphRestrictor;
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun code ()I
	public static fun codes ()[I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public static fun parse (Ljava/lang/String;)Lorg/partiql/ast/graph/GraphRestrictor;
}

public abstract class org/partiql/ast/graph/GraphSelector : org/partiql/ast/AstNode {
	public fun <init> ()V
}

public class org/partiql/ast/graph/GraphSelector$AllShortest : org/partiql/ast/graph/GraphSelector {
	public fun <init> ()V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphSelector$AllShortest$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphSelector$AllShortest$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphSelector$AllShortest;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphSelector$Any : org/partiql/ast/graph/GraphSelector {
	public fun <init> ()V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphSelector$Any$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphSelector$Any$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphSelector$Any;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphSelector$AnyK : org/partiql/ast/graph/GraphSelector {
	public final field k J
	public fun <init> (J)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphSelector$AnyK$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphSelector$AnyK$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphSelector$AnyK;
	public fun k (J)Lorg/partiql/ast/graph/GraphSelector$AnyK$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphSelector$AnyShortest : org/partiql/ast/graph/GraphSelector {
	public fun <init> ()V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphSelector$AnyShortest$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphSelector$AnyShortest$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphSelector$AnyShortest;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphSelector$ShortestK : org/partiql/ast/graph/GraphSelector {
	public final field k J
	public fun <init> (J)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphSelector$ShortestK$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphSelector$ShortestK$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphSelector$ShortestK;
	public fun k (J)Lorg/partiql/ast/graph/GraphSelector$ShortestK$Builder;
	public fun toString ()Ljava/lang/String;
}

public class org/partiql/ast/graph/GraphSelector$ShortestKGroup : org/partiql/ast/graph/GraphSelector {
	public final field k J
	public fun <init> (J)V
	public fun accept (Lorg/partiql/ast/AstVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun builder ()Lorg/partiql/ast/graph/GraphSelector$ShortestKGroup$Builder;
	protected fun canEqual (Ljava/lang/Object;)Z
	public fun children ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public class org/partiql/ast/graph/GraphSelector$ShortestKGroup$Builder {
	public fun build ()Lorg/partiql/ast/graph/GraphSelector$ShortestKGroup;
	public fun k (J)Lorg/partiql/ast/graph/GraphSelector$ShortestKGroup$Builder;
	public fun toString ()Ljava/lang/String;
}

public abstract class org/partiql/ast/sql/SqlBlock {
	public static final field Companion Lorg/partiql/ast/sql/SqlBlock$Companion;
	public field next Lorg/partiql/ast/sql/SqlBlock;
	public static final fun line ()Lorg/partiql/ast/sql/SqlBlock;
	public static final fun none ()Lorg/partiql/ast/sql/SqlBlock;
}

public final class org/partiql/ast/sql/SqlBlock$Companion {
	public final fun line ()Lorg/partiql/ast/sql/SqlBlock;
	public final fun none ()Lorg/partiql/ast/sql/SqlBlock;
}

public final class org/partiql/ast/sql/SqlBlock$Line : org/partiql/ast/sql/SqlBlock {
	public fun <init> ()V
}

public final class org/partiql/ast/sql/SqlBlock$Nest : org/partiql/ast/sql/SqlBlock {
	public field child Lorg/partiql/ast/sql/SqlBlock;
	public field postfix Ljava/lang/String;
	public field prefix Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lorg/partiql/ast/sql/SqlBlock;)V
}

public final class org/partiql/ast/sql/SqlBlock$None : org/partiql/ast/sql/SqlBlock {
	public fun <init> ()V
}

public final class org/partiql/ast/sql/SqlBlock$Text : org/partiql/ast/sql/SqlBlock {
	public field text Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
}

public abstract class org/partiql/ast/sql/SqlDialect : org/partiql/ast/AstVisitor {
	public static final field Companion Lorg/partiql/ast/sql/SqlDialect$Companion;
	public fun <init> ()V
	public synthetic fun defaultReturn (Lorg/partiql/ast/AstNode;Ljava/lang/Object;)Ljava/lang/Object;
	public fun defaultReturn (Lorg/partiql/ast/AstNode;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public static final fun getSTANDARD ()Lorg/partiql/ast/sql/SqlDialect;
	public final fun transform (Lorg/partiql/ast/AstNode;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitDataType (Lorg/partiql/ast/DataType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDataType (Lorg/partiql/ast/DataType;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExclude (Lorg/partiql/ast/Exclude;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExclude (Lorg/partiql/ast/Exclude;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExcludePath (Lorg/partiql/ast/ExcludePath;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludePath (Lorg/partiql/ast/ExcludePath;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExcludeStepCollIndex (Lorg/partiql/ast/ExcludeStep$CollIndex;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepCollIndex (Lorg/partiql/ast/ExcludeStep$CollIndex;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExcludeStepCollWildcard (Lorg/partiql/ast/ExcludeStep$CollWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepCollWildcard (Lorg/partiql/ast/ExcludeStep$CollWildcard;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExcludeStepStructField (Lorg/partiql/ast/ExcludeStep$StructField;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepStructField (Lorg/partiql/ast/ExcludeStep$StructField;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExcludeStepStructWildcard (Lorg/partiql/ast/ExcludeStep$StructWildcard;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExcludeStepStructWildcard (Lorg/partiql/ast/ExcludeStep$StructWildcard;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprAnd (Lorg/partiql/ast/expr/ExprAnd;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprAnd (Lorg/partiql/ast/expr/ExprAnd;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprArray (Lorg/partiql/ast/expr/ExprArray;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprArray (Lorg/partiql/ast/expr/ExprArray;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprBag (Lorg/partiql/ast/expr/ExprBag;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprBag (Lorg/partiql/ast/expr/ExprBag;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprBetween (Lorg/partiql/ast/expr/ExprBetween;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprBetween (Lorg/partiql/ast/expr/ExprBetween;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprCall (Lorg/partiql/ast/expr/ExprCall;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCall (Lorg/partiql/ast/expr/ExprCall;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprCase (Lorg/partiql/ast/expr/ExprCase;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCase (Lorg/partiql/ast/expr/ExprCase;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprCaseBranch (Lorg/partiql/ast/expr/ExprCase$Branch;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCaseBranch (Lorg/partiql/ast/expr/ExprCase$Branch;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprCast (Lorg/partiql/ast/expr/ExprCast;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCast (Lorg/partiql/ast/expr/ExprCast;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprCoalesce (Lorg/partiql/ast/expr/ExprCoalesce;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprCoalesce (Lorg/partiql/ast/expr/ExprCoalesce;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprExtract (Lorg/partiql/ast/expr/ExprExtract;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprExtract (Lorg/partiql/ast/expr/ExprExtract;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprInCollection (Lorg/partiql/ast/expr/ExprInCollection;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprInCollection (Lorg/partiql/ast/expr/ExprInCollection;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprIsType (Lorg/partiql/ast/expr/ExprIsType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprIsType (Lorg/partiql/ast/expr/ExprIsType;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprLike (Lorg/partiql/ast/expr/ExprLike;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprLike (Lorg/partiql/ast/expr/ExprLike;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprLit (Lorg/partiql/ast/expr/ExprLit;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprLit (Lorg/partiql/ast/expr/ExprLit;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprNot (Lorg/partiql/ast/expr/ExprNot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprNot (Lorg/partiql/ast/expr/ExprNot;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprNullIf (Lorg/partiql/ast/expr/ExprNullIf;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprNullIf (Lorg/partiql/ast/expr/ExprNullIf;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprOperator (Lorg/partiql/ast/expr/ExprOperator;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOperator (Lorg/partiql/ast/expr/ExprOperator;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprOr (Lorg/partiql/ast/expr/ExprOr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOr (Lorg/partiql/ast/expr/ExprOr;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprOverlay (Lorg/partiql/ast/expr/ExprOverlay;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprOverlay (Lorg/partiql/ast/expr/ExprOverlay;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprParameter (Lorg/partiql/ast/expr/ExprParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprParameter (Lorg/partiql/ast/expr/ExprParameter;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprPath (Lorg/partiql/ast/expr/ExprPath;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprPath (Lorg/partiql/ast/expr/ExprPath;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprPosition (Lorg/partiql/ast/expr/ExprPosition;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprPosition (Lorg/partiql/ast/expr/ExprPosition;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprQuerySet (Lorg/partiql/ast/expr/ExprQuerySet;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprQuerySet (Lorg/partiql/ast/expr/ExprQuerySet;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprRowValue (Lorg/partiql/ast/expr/ExprRowValue;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprRowValue (Lorg/partiql/ast/expr/ExprRowValue;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprSessionAttribute (Lorg/partiql/ast/expr/ExprSessionAttribute;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprSessionAttribute (Lorg/partiql/ast/expr/ExprSessionAttribute;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprStruct (Lorg/partiql/ast/expr/ExprStruct;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprStruct (Lorg/partiql/ast/expr/ExprStruct;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprStructField (Lorg/partiql/ast/expr/ExprStruct$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprStructField (Lorg/partiql/ast/expr/ExprStruct$Field;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprSubstring (Lorg/partiql/ast/expr/ExprSubstring;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprSubstring (Lorg/partiql/ast/expr/ExprSubstring;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprTrim (Lorg/partiql/ast/expr/ExprTrim;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprTrim (Lorg/partiql/ast/expr/ExprTrim;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprValues (Lorg/partiql/ast/expr/ExprValues;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprValues (Lorg/partiql/ast/expr/ExprValues;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprVarRef (Lorg/partiql/ast/expr/ExprVarRef;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprVarRef (Lorg/partiql/ast/expr/ExprVarRef;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitExprVariant (Lorg/partiql/ast/expr/ExprVariant;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExprVariant (Lorg/partiql/ast/expr/ExprVariant;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public fun visitExprWrapped (Lorg/partiql/ast/expr/Expr;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitFrom (Lorg/partiql/ast/From;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFrom (Lorg/partiql/ast/From;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitFromExpr (Lorg/partiql/ast/FromExpr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFromExpr (Lorg/partiql/ast/FromExpr;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitFromJoin (Lorg/partiql/ast/FromJoin;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFromJoin (Lorg/partiql/ast/FromJoin;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitGroupBy (Lorg/partiql/ast/GroupBy;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGroupBy (Lorg/partiql/ast/GroupBy;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitGroupByKey (Lorg/partiql/ast/GroupBy$Key;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitGroupByKey (Lorg/partiql/ast/GroupBy$Key;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitIdentifier (Lorg/partiql/ast/Identifier;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifier (Lorg/partiql/ast/Identifier;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitIdentifierChain (Lorg/partiql/ast/IdentifierChain;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIdentifierChain (Lorg/partiql/ast/IdentifierChain;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitLet (Lorg/partiql/ast/Let;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLet (Lorg/partiql/ast/Let;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitLetBinding (Lorg/partiql/ast/Let$Binding;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLetBinding (Lorg/partiql/ast/Let$Binding;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitOrderBy (Lorg/partiql/ast/OrderBy;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitOrderBy (Lorg/partiql/ast/OrderBy;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitPathStepAllElements (Lorg/partiql/ast/expr/PathStep$AllElements;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepAllElements (Lorg/partiql/ast/expr/PathStep$AllElements;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitPathStepAllFields (Lorg/partiql/ast/expr/PathStep$AllFields;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepAllFields (Lorg/partiql/ast/expr/PathStep$AllFields;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitPathStepElement (Lorg/partiql/ast/expr/PathStep$Element;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepElement (Lorg/partiql/ast/expr/PathStep$Element;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitPathStepField (Lorg/partiql/ast/expr/PathStep$Field;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPathStepField (Lorg/partiql/ast/expr/PathStep$Field;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitQuery (Lorg/partiql/ast/Query;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQuery (Lorg/partiql/ast/Query;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitQueryBodySFW (Lorg/partiql/ast/QueryBody$SFW;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQueryBodySFW (Lorg/partiql/ast/QueryBody$SFW;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitQueryBodySetOp (Lorg/partiql/ast/QueryBody$SetOp;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQueryBodySetOp (Lorg/partiql/ast/QueryBody$SetOp;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitSelectItemExpr (Lorg/partiql/ast/SelectItem$Expr;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectItemExpr (Lorg/partiql/ast/SelectItem$Expr;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitSelectItemStar (Lorg/partiql/ast/SelectItem$Star;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectItemStar (Lorg/partiql/ast/SelectItem$Star;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitSelectList (Lorg/partiql/ast/SelectList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectList (Lorg/partiql/ast/SelectList;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitSelectPivot (Lorg/partiql/ast/SelectPivot;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectPivot (Lorg/partiql/ast/SelectPivot;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitSelectStar (Lorg/partiql/ast/SelectStar;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectStar (Lorg/partiql/ast/SelectStar;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitSelectValue (Lorg/partiql/ast/SelectValue;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelectValue (Lorg/partiql/ast/SelectValue;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitSetOp (Lorg/partiql/ast/SetOp;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSetOp (Lorg/partiql/ast/SetOp;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
	public synthetic fun visitSort (Lorg/partiql/ast/Sort;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSort (Lorg/partiql/ast/Sort;Lorg/partiql/ast/sql/SqlBlock;)Lorg/partiql/ast/sql/SqlBlock;
}

public final class org/partiql/ast/sql/SqlDialect$Companion {
	public final fun getSTANDARD ()Lorg/partiql/ast/sql/SqlDialect;
}

public final class org/partiql/ast/sql/SqlKt {
	public static final fun sql (Lorg/partiql/ast/AstNode;)Ljava/lang/String;
	public static final fun sql (Lorg/partiql/ast/AstNode;Lorg/partiql/ast/sql/SqlLayout;)Ljava/lang/String;
	public static final fun sql (Lorg/partiql/ast/AstNode;Lorg/partiql/ast/sql/SqlLayout;Lorg/partiql/ast/sql/SqlDialect;)Ljava/lang/String;
	public static final fun sql (Lorg/partiql/ast/sql/SqlBlock;Lorg/partiql/ast/sql/SqlLayout;)Ljava/lang/String;
	public static synthetic fun sql$default (Lorg/partiql/ast/AstNode;Lorg/partiql/ast/sql/SqlLayout;Lorg/partiql/ast/sql/SqlDialect;ILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun sql$default (Lorg/partiql/ast/sql/SqlBlock;Lorg/partiql/ast/sql/SqlLayout;ILjava/lang/Object;)Ljava/lang/String;
}

public abstract interface class org/partiql/ast/sql/SqlLayout {
	public static final field Companion Lorg/partiql/ast/sql/SqlLayout$Companion;
	public static fun getONELINE ()Lorg/partiql/ast/sql/SqlLayout;
	public static fun getSTANDARD ()Lorg/partiql/ast/sql/SqlLayout;
	public abstract fun print (Lorg/partiql/ast/sql/SqlBlock;)Ljava/lang/String;
}

public final class org/partiql/ast/sql/SqlLayout$Companion {
	public final fun getONELINE ()Lorg/partiql/ast/sql/SqlLayout;
	public final fun getSTANDARD ()Lorg/partiql/ast/sql/SqlLayout;
}

